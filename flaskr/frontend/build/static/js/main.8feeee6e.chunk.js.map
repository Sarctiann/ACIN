{"version":3,"sources":["components/_news/markdownStyle.module.css","components/tools/useUser.js","components/tools/useSettings.js","components/tools/contexts.jsx","components/tools/routes.js","components/MenuTab.jsx","components/tools/ReusableDialog.jsx","components/AvatarMenu.jsx","components/NavMenu.jsx","components/NavBar.jsx","components/tools/beep.mp3","components/AuthenticatedContent.jsx","components/tools/daysAgo.js","components/_news/Posts.jsx","components/_news/PostSelect.jsx","components/_news/Panel.jsx","components/_news/News.jsx","components/_calculator/Complete.jsx","components/_calculator/Basic.jsx","components/_calculator/CalcHistory.jsx","components/_calculator/Calculators.jsx","components/tools/axiosTool.js","components/tools/strFormat.js","components/_answers/CreditCards.jsx","components/_answers/AnswerButtons.jsx","components/_answers/Answers.jsx","components/_settings/Settings.jsx","components/_settings/answers/EditCreditCards.jsx","components/_settings/answers/EditAnswers.jsx","components/_settings/answers/AnswersSettings.jsx","components/_settings/calculator/NewItem.jsx","components/_settings/calculator/Lists.jsx","components/_settings/calculator/Items.jsx","components/_settings/calculator/CalculatorSettings.jsx","components/_settings/expressions/ExpressionsSettings.jsx","components/_user/UserLogin.jsx","components/_user/UpdateUserFrom.jsx","components/_user/UserOptions.jsx","components/_user/OtherUsersList.jsx","components/_user/CreateUpdateOtherUser.jsx","components/_user/UserAccount.jsx","components/App.jsx","index.js"],"names":["module","exports","useUser","useState","userString","localStorage","getItem","JSON","parse","getUser","user","setUser","setItem","stringify","useSettings","defaultSettings","theme_mode","calculator","postsFontFamily","notifVol","settingsStr","getSettings","settings","setSettings","UserContext","createContext","AuthContext","auth","setAuth","PostContext","fetchedPosts","setFetchedPosts","UserSettingsContext","userSettings","setUserSettings","GlobalContext","children","userValue","useMemo","authValue","postsValue","userSettingsValue","Provider","value","routes","sub_routes","api_url","host","MenuTab","props","items","setTabValue","icon","label","disabled","others","navigate","useNavigate","anchorEl","setAnchorEl","open","Boolean","Tab","iconPosition","id","onClick","e","currentTarget","undefined","Menu","onClose","TransitionComponent","Fade","map","item","MenuItem","sub_route","RDialog","title","message","confirmText","color","action","setOpen","justClose","divProps","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","error","console","autoFocus","stringAvatar","first_name","last_name","join","toUpperCase","AvatarMenu","useContext","location","useLocation","bg","pathname","split","openMenu","IconButton","variant","Avatar","sx","bgcolor","Typography","marginX","mb","email","Divider","ListItemIcon","Person","removeItem","Logout","NavMenu","Newspaper","key","route","Calculate","ViewList","Settings","is_admin","push","display","xs","sm","textAlign","ArrowForwardIos","Navbar","currentTab","tabValue","count","setCount","newPosts","length","AppBar","position","Toolbar","justifyContent","Tabs","visibility","indicatorColor","onChange","_","newValue","Badge","badgeContent","anchorOrigin","vertical","horizontal","component","Link","to","AuthenticatedContent","timeStamp","setTimeStamp","soundOptions","volume","parseFloat","useSound","beep","playBeep","useEffect","source","axios","CancelToken","checkForNewPosts","a","post","last_post","cancelToken","token","headers","Accept","Authorization","res","data","posts","warn","errCode","response","status","watcher","setInterval","clearInterval","cancel","refreshing","get","daysAgo","today","date","delta","toFixed","Posts","filter","severity","owner","handleMessage","postToDelete","setPostToDelete","severity_filter","owner_filter","filteredPosts","_id","dividedPosts","Date","getTime","last_day","forEach","other_day","divider","Grid","md","Box","border","p","borderRadius","borderColor","height","Stack","spacing","pr","paddingBlockEnd","overflow","element","Chip","post_props","Alarm","content","username","pub","is_public","$date","toLocaleDateString","Alert","style","fontFamily","fontSize","AlertTitle","className","mdStyle","remarkPlugins","remarkGfm","delete","PostSelect","options","option","setOption","FormControl","fullWidth","Select","size","target","op","Panel","send_props","setSeverity","setOwner","days_offset","newPost","setNewPost","newSeverity","setNewSeverity","setTo","handleChange","name","getSeverity","getPublic","ROWS","rows","useMediaQuery","theme","breakpoints","down","Paper","elevation","container","align","alignItems","TextField","multiline","type","inputProps","min","max","step","parseInt","endIcon","Send","News","msg","vnt","setMessage","Container","maxWidth","margin","pt","Snackbar","autoHideDuration","Complete","history","setHistory","first","second","third","fields","setFields","sign","setSign","operation","setOperation","expression","setExpression","handleQuery","url","to_set","Object","entries","field","calculation","footnote","result","navigator","clipboard","writeText","handleGetFirst","dataset","handleGetSecond","handleGetThird","handleEvaluate","handleEnterOnFields","minHeight","width","RadioGroup","px","FormControlLabel","control","Radio","InputProps","startAdornment","InputAdornment","endAdornment","onKeyPress","LooksOne","LooksTwo","Looks3","py","InputLabelProps","Basic","price","str_date","handleGetPrice","reverse","err","CalcHistory","registries","dividedRegistries","reg","backgroundColor","alignContent","tColor","Tooltip","placement","disableInteractive","arrow","followCursor","whiteSpace","Calculator","openSB","setOpenSB","basic","setBasic","labelPlacement","Switch","checked","useAxios","method","uri","expected","suc","wrn","TCErr","put","useAxiosEffect","strFormat","str","regexs","args","mut_str","pattern","replacement","replace","RegExp","match","index","CustomCell","TableCell","CreditCards","payMeths","sysRegex","setPrice","paymentMethods","last_card","formatedPayMeths","meth","card_name","header","total","increase","monthly","installments","$oid","pos_code","description","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","colSpan","hover","handleCopy","ContentCopy","AnswerButtons","commonAnswers","ownAnswers","ownRegex","text","setText","answerList","reduce","resObj","curObj","handleClickAnswer","focused","readOnly","Cancel","ans","enterDelay","background","Answers","setPayMeths","setCommonAnswers","setOwnAnswers","setSysRegex","setOwnRegex","d","answers","payment_methods","common_answers","own_answers","sys_regex","own_regex","EditCreditCards","initialValue","newCard","setNewCard","selected","setSelected","setMethod","handleChangeMethod","handleAddCard","handleAddMethod","handleUpdateCardName","handleUpdateMethod","handleDropCard","handleDropMethod","Add","new_name","Done","Edit","Delete","EditAnswers","colors","initialAnswer","common","order","answer","setAnswer","edit","setEdit","handleChangeAnswer","queryHandlers","handleCreateAnswer","handleUpdateAnswer","handleDeleteAnswer","hex","Save","AnswersSettings","NewItem","dates","setDates","setHasChanged","initialNewOne","percent","increaseAll","newOne","setNewOne","upAll","setUpAll","handleChangeNewOne","addSuccessiveIncreases","inc","b","newPercent","pb","Checkbox","newDate","newDates","startIcon","ArrowUpward","Lists","lists","setLists","selectedList","setSelectedList","fetchList","list_name","list","is_sel","file_name","fileToSave","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleDownloadList","Download","new_list","i","handleDropList","Items","hasChanged","oneDate","setOneDate","handleChangeSelected","handleUpdateOne","dis","toString","handleDeleteOne","newLists","unshift","sort","CalculatorSettings","ExpressionsSettings","initialExpression","is_system","identifier","handleChangeExpression","handleClickExpression","exp","UserLogin","uName","setUName","uPass","setUPass","loginState","setLoginState","handleLogin","preventDefault","path","setTimeout","log","in","timeout","UpdateUserForm","password","new_password","confirm_new_password","userData","setUserData","handleChangeUser","samePassword","setSamePassword","handleSamePassword","updateState","setUpdateState","handleUpdateUser","resultUser","mx","columns","UserOptions","handleChangeSettings","handleSaveSettings","mt","OtherUsersList","usersSate","setUsersState","initialOtherUser","setOtherUserData","usersData","setUsersData","otherUser","ListItem","secondaryAction","edge","ListItemButton","handleEditUser","ListItemText","primary","secondary","CreateUpdateOtherUser","otherUserData","handleChangeOtherUser","sameEmail","setSameEmail","handleSameEmail","pl","UserAccount","confirm_email","App","createTheme","palette","mode","cyan","deepOrange","info","deepPurple","paper","default","ThemeProvider","CssBaseline","enableColorScheme","square","Calculators","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8feeee6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdStyle\":\"markdownStyle_mdStyle__38Iau\"};","import { useState } from 'react';\n\nconst useUser = () => {\n  \n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const userObj = JSON.parse(userString);\n    return userObj\n  };\n\n  const [user, setUser] = useState(getUser());\n\n  const saveUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  };\n\n  return [\n    user,\n    saveUser\n  ]\n}\n\nexport default useUser;","import { useState } from 'react';\n\nconst useSettings = () => {\n\n  const defaultSettings = {\n    theme_mode: 'dark',\n    calculator: true,\n    postsFontFamily: 'Helvetica',\n    notifVol: 0.1\n  }\n  \n  const getSettings = () => {\n    const settingsStr = localStorage.getItem('settings');\n    const settingsObj = {...defaultSettings, ...JSON.parse(settingsStr)};\n    return settingsObj\n  };\n\n  const [settings, setSettings] = useState(getSettings());\n\n  const saveSettings = settings => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    setSettings(settings);\n  };\n\n  return [\n    settings,\n    saveSettings\n  ]\n}\n\nexport default useSettings;","import { useMemo, createContext, useState } from \"react\"\nimport useUser from './useUser'\nimport useSettings from \"./useSettings\"\n\n// 1. Create and export contexts\nexport const UserContext = createContext(\n  { user: '', setUser: () => { } })\nexport const AuthContext = createContext(\n  { auth: '', setAuth: () => { } })\nexport const PostContext = createContext(\n  { fetchedPosts: [], setFetchedPosts: () => { } })\nexport const UserSettingsContext = createContext(\n  { userSettings: '', setUserSettings: () => { } })\n// -----------------------------\n\nconst GlobalContext = ({ children }) => {\n\n  // 2. Packing the value and setter function\n  const [user, setUser] = useUser()\n  const userValue = useMemo(\n    () => ({ user, setUser }),\n    [user, setUser]\n  )\n  const [auth, setAuth] = useState(false)\n  const authValue = useMemo(\n    () => ({ auth, setAuth }),\n    [auth, setAuth]\n  )\n  const [fetchedPosts, setFetchedPosts] = useState([])\n  const postsValue = useMemo(\n    () => ({ fetchedPosts, setFetchedPosts }),\n    [fetchedPosts, setFetchedPosts]\n  )\n  const [userSettings, setUserSettings] = useSettings()\n  const userSettingsValue = useMemo(\n    () => ({ userSettings, setUserSettings }),\n    [userSettings, setUserSettings]\n  )\n  // ----------------------------------------\n\n  return (\n\n    // 3. Provide the contexts\n    <UserContext.Provider value={userValue}>\n      <AuthContext.Provider value={authValue}>\n        <PostContext.Provider value={postsValue}>\n          <UserSettingsContext.Provider value={userSettingsValue}>\n            {children}\n          </UserSettingsContext.Provider>\n        </PostContext.Provider>\n      </AuthContext.Provider>\n    </UserContext.Provider>\n    // -----------------------\n  )\n}\n\nexport default GlobalContext","// Do not change the order of \"routes\" and \"sub_routes\", \n// append new ones (to the tail) to make the app grow.\nexport const routes = [\n    '/news',\n    '/calculators',\n    '/answers',\n    '/settings',\n  ]\n  \nexport const sub_routes = [\n    'answers',\n    'calculator',\n    'expressions'\n  ]\n\nconst host = 'https://audiocenter-in.herokuapp.com/'\n// const host = 'http://localhost:5000/'\n\nconst api_root = '/api-v1'\n\nexport const api_url = host + api_root","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Tab, Menu, MenuItem, Fade } from '@mui/material'\n\nconst MenuTab = (props) => {\n\n  const { value, items, setTabValue, icon, label, disabled, ...others } = props\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (sub_route) => {\n    setAnchorEl(null)\n    navigate(`${value}/${sub_route}`)\n    setTabValue(value)\n  }\n\n  return (\n    <>\n      <Tab label={label} {...others}\n        icon={icon} iconPosition='start'\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined} disabled={disabled} />\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          return (\n            <MenuItem\n              onClick={() => { handleClose(item.sub_route) }} key={item.label}>\n              {item.label}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </>\n  )\n\n}\n\nexport default MenuTab;","import { useState } from 'react'\nimport {\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button\n} from '@mui/material'\n\nconst RDialog = (props) => {\n\n  const {\n    title = 'add <title> prop', message = 'add <message> prop',\n    confirmText = 'add <confirmText> prop', color = 'error', disabled = false,\n    action, children, ...others\n  } = props\n\n  const [open, setOpen] = useState(false)\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (e) => {\n    setOpen(false)\n    try {\n      action(e)\n    }\n    catch (error) {\n      console.error(`add <action> prop, or: ${error}`)\n    }\n  }\n\n  const justClose = () => {\n    setOpen(false)\n  }\n\n  const divProps = !disabled ? {\n    onClick: handleOpen\n  } : {}\n\n  return (\n    <>\n      <div {...divProps}>\n        {children}\n      </div>\n      <Dialog {...others}\n        open={open}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button onClick={handleClose} color={color} autoFocus>\n            {confirmText} </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default RDialog","import { useState, useContext } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Avatar, Menu, MenuItem, Typography, Divider, Fade, ListItemIcon\n} from '@mui/material'\nimport { PersonOff as AvIcon, Person, Logout } from '@mui/icons-material'\n\nimport { UserContext, AuthContext } from './tools/contexts'\nimport RDialog from './tools/ReusableDialog'\n\nconst stringAvatar = (user, auth) => {\n\n  if (user && auth) {\n    return [user.first_name[0], user.last_name[0]].join('').toUpperCase()\n  }\n  return <AvIcon />\n}\n\nconst AvatarMenu = props => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { setTabValue, disabled, ...others } = props\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  let bg = location.pathname.split('/')[1] === 'account' ?\n    'secondary.main' :\n    'primary.main'\n\n  if (disabled) { bg = 'default' }\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleOptions = () => {\n    setAnchorEl(null)\n    setTabValue(false)\n    navigate('/account')\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    setUser(null)\n    setAuth(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('settings')\n  }\n\n  return (\n    <>\n      <IconButton variant='outlined' {...others}\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={openMenu ? 'true' : undefined}\n        color='secondary'\n        disabled={disabled} >\n\n        <Avatar sx={{ bgcolor: bg }} children={stringAvatar(user, auth)} />\n\n      </IconButton>\n\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={justClose}\n        TransitionComponent={Fade} >\n        <Typography variant='overline' color='secondary' marginX={2} mb={1} >\n          {[user?.first_name, user?.last_name].join(' ')}\n        </Typography>\n        <Typography variant='subtitle1' color='GrayText' marginX={2} mb={1} >\n          {user?.email}\n        </Typography>\n        <Divider />\n        <MenuItem onClick={handleOptions}>\n          <ListItemIcon>\n            <Person />\n          </ListItemIcon>\n          Options\n        </MenuItem>\n        <RDialog\n          title='LOGOUT' message='Confirm logout?'\n          confirmText='Logout' action={handleLogout}\n        >\n          <MenuItem>\n            <ListItemIcon>\n              <Logout />\n            </ListItemIcon>\n            Logout\n          </MenuItem>\n        </RDialog>\n      </Menu>\n\n\n    </>\n  )\n}\n\nexport default AvatarMenu;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Menu, MenuItem, Fade, Divider, ListItemIcon\n} from '@mui/material'\nimport {\n  Newspaper, Calculate, ViewList, Settings, ArrowForwardIos\n} from '@mui/icons-material'\nimport { Menu as MI } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\n\n\nconst NavMenu = props => {\n\n  const { setTabValue, disabled, user, ...others } = props\n\n  const items = [\n    { label: 'DIVIDER', icon: Newspaper, key: 0 },\n    { label: 'News', route: routes[0] },\n    { label: 'DIVIDER', icon: Calculate, key: 1 },\n    { label: 'Calculators', route: `${routes[1]}` },\n    { label: 'DIVIDER', icon: ViewList, key: 2 },\n    { label: 'Answers', route: routes[2] },\n    { label: 'DIVIDER', icon: Settings, key: 3 },\n    { label: 'Answers Settings', route: `${routes[3]}/${sub_routes[0]}` }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', route: `${routes[3]}/${sub_routes[1]}` }\n    )\n  }\n  items.push(\n    { label: 'Expressions Settings', route: `${routes[3]}/${sub_routes[2]}` }\n  )\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (route) => {\n    setAnchorEl(null)\n    navigate(route)\n    setTabValue(`/${route.split('/')[1]}`)\n  }\n\n  return (\n    <>\n      <IconButton aria-label=\"Go to...\" onClick={handleClick} {...others}\n        sx={{ display: { xs: 'inline-flex', sm: 'none' } }}\n        disabled={disabled}\n      >\n        <MI />\n      </IconButton>\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          if (item.label === 'DIVIDER') {\n            return (\n              <Divider key={item.key} textAlign='right'>\n                {<item.icon />}\n              </Divider>\n            )\n          } else {\n            return (\n              <MenuItem\n                onClick={() => { handleClose(item.route) }} key={item.label}>\n                <ListItemIcon>\n                  <ArrowForwardIos />\n                </ListItemIcon>\n                {item.label}\n              </MenuItem>\n            )\n          }\n        })}\n      </Menu>\n    </>\n  )\n}\n\nexport default NavMenu;","import { useState, useContext, useMemo } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { AppBar, Toolbar, Tabs, Tab, Badge } from '@mui/material'\nimport { Newspaper, Calculate, ViewList, Settings } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\nimport { AuthContext, UserContext, PostContext } from './tools/contexts'\nimport MenuTab from './MenuTab'\nimport AvatarMenu from './AvatarMenu'\nimport NavMenu from './NavMenu'\n\n\n\nconst Navbar = () => {\n\n  const { auth } = useContext(AuthContext)\n  const { user } = useContext(UserContext)\n  const { fetchedPosts } = useContext(PostContext)\n  const disabled = !Boolean(auth)\n\n  const location = useLocation()\n\n  let currentTab\n  switch (`/${location.pathname.split('/')[1]}`) {\n    case routes[0]:\n      currentTab = routes[0]\n      break;\n    case routes[1]:\n      currentTab = routes[1]\n      break;\n    case routes[2]:\n      currentTab = routes[2]\n      break;\n    case routes[3]:\n      currentTab = routes[3]\n      break;\n    default:\n      currentTab = false\n      break;\n  }\n\n  const [tabValue, setTabValue] = useState(currentTab)\n  const [count, setCount] = useState(0)\n\n  const handleChange = (_, newValue) => {\n    switch (newValue) {\n      case routes[0]:\n      case routes[1]:\n      case routes[2]:\n        setTabValue(newValue)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const newPosts = useMemo(() => {\n\n    const length = fetchedPosts.length\n    if (tabValue === routes[0]) {\n      setCount(length)\n    }\n\n    return length - count\n  }, [fetchedPosts.length, count, tabValue])\n\n  const items = [\n    { label: 'Answers Settings', sub_route: sub_routes[0] }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', sub_route: sub_routes[1] }\n    )\n  }\n  items.push({ label: 'Expressions Settings', sub_route: sub_routes[2] })\n\n  return (\n    <>\n      <AppBar position='sticky' color='default'>\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\n\n          <NavMenu setTabValue={setTabValue} disabled={disabled}\n            user={user}\n          />\n\n          <Tabs sx={{ visibility: { xs: 'hidden', sm: 'visible' } }}\n            indicatorColor='primary'\n            onChange={handleChange}\n            value={tabValue}>\n\n            <Tab value={routes[0]} label='News'\n              icon={\n                <Badge color='error' badgeContent={newPosts}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                >\n                  <Newspaper />\n                </Badge>\n              } iconPosition='start'\n              component={Link} to={routes[0]} disabled={disabled} />\n\n            <Tab value={routes[1]} label='Calculators'\n              icon={<Calculate />} iconPosition='start'\n              component={Link} to={routes[1]} disabled={disabled} />\n\n            <Tab value={routes[2]} label='Answers'\n              icon={<ViewList />} iconPosition='start'\n              component={Link} to={routes[2]} disabled={disabled} />\n\n            <MenuTab value={routes[3]}\n              label='Settings' icon={<Settings />}\n              setTabValue={setTabValue} items={items} disabled={disabled} />\n\n          </Tabs>\n\n          <AvatarMenu setTabValue={setTabValue} disabled={disabled} />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/beep.6fea501e.mp3\";","import { useContext, useEffect, useState, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport useSound from 'use-sound'\n\nimport { api_url } from './tools/routes'\nimport { PostContext, UserSettingsContext } from './tools/contexts'\nimport beep from './tools/beep.mp3'\n\nconst AuthenticatedContent = (props) => {\n\n  const { children, setAuth, user, setUser } = props\n\n  const { fetchedPosts, setFetchedPosts } = useContext(PostContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [timeStamp, setTimeStamp] = useState(null)\n  const navigate = useNavigate()\n  const soundOptions = useMemo(() => {\n    return { volume: parseFloat(userSettings.notifVol) }\n  }, [userSettings])\n  const [playBeep] = useSound(beep, soundOptions)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const checkForNewPosts = async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/fetch-posts',\n          { last_post: timeStamp },\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['newest_post']) {\n          if (timeStamp !== null && res.data.posts.length > fetchedPosts) {\n            playBeep()\n          }\n          setTimeStamp(res.data['newest_post'])\n          setFetchedPosts(res.data['posts'])\n        } else if (res.data['wrn']) {\n          console.warn(res.data['wrn'])\n        } else if (res.data['err']) {\n          setAuth(false)\n          console.error(res.data['err'])\n        }\n      }\n      catch (error) {\n        const errCode = error.response?.status\n        if (errCode === 422 || errCode === 401) {\n          navigate('/login')\n          setUser(null)\n          setAuth(false)\n          localStorage.removeItem('user')\n        }\n      }\n    }\n    if (user) {\n      checkForNewPosts()\n    }\n    const watcher = setInterval(() => {\n      if (user?.token) {\n        checkForNewPosts()\n      }\n    }, 3000)\n    return () => {\n      clearInterval(watcher)\n      source.cancel('Leaving News page or the data is already loaded')\n    }\n    // eslint-disable-next-line\n  }, [user])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const refreshing = setInterval(() => {\n      if (user?.token) {\n        (async () => {\n          try {\n            const res = await axios.get(\n              api_url + '/users/refresh-auth',\n              {\n                cancelToken: source.token,\n                headers: {\n                  Accept: '*/*',\n                  Authorization: `Bearer ${user.token}`\n                }\n              }\n            )\n            if (res.data['user']) {\n              setUser(res.data.user)\n            }\n          }\n          catch (error) {\n            console.error(error)\n          }\n        })()\n      }\n    }, 60 * 60 * 1000)\n    return () => {\n      clearInterval(refreshing)\n      source.cancel('Abort refresh token')\n    }\n  }, [user, setUser])\n\n  return children\n}\n\nexport default AuthenticatedContent","const daysAgo = (today, date) => {\n    const delta = ((today - date) / (1000 * 3600 * 24)).toFixed()\n    let label\n    switch (delta) {\n        case '0':\n        case '-0':\n            label = 'Today'\n            break\n        case '1':\n            label = 'Yesterday'\n            break\n        default:\n            label = `${delta} days ago`\n            break\n    }\n    return label\n}\n\nexport default daysAgo","import { useContext, useState, useMemo } from 'react'\nimport {\n  Grid, Box, Alert, AlertTitle, Divider, Chip, Stack, Typography, Button,\n  Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText\n} from '@mui/material';\nimport { Alarm } from '@mui/icons-material'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport axios from 'axios'\n\nimport { \n  PostContext, UserContext, UserSettingsContext \n} from '../tools/contexts'\nimport { api_url } from '../tools/routes'\nimport daysAgo from '../tools/daysAgo'\n\nimport style from './markdownStyle.module.css'\n\n\nconst Posts = (props) => {\n\n  const { filter: { severity, owner }, handleMessage } = props\n  const { fetchedPosts } = useContext(PostContext)\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [postToDelete, setPostToDelete] = useState('')\n\n  const posts = useMemo(() => {\n    if (fetchedPosts.length > 0) {\n      let severity_filter\n      switch (severity) {\n        case 'Reminder':\n          severity_filter = 'rem'\n          break\n        case 'Normal':\n          severity_filter = 'nor'\n          break\n        case 'Urgent':\n          severity_filter = 'urg'\n          break\n        default:\n          severity_filter = null\n          break\n      }\n      const owner_filter = owner === 'from All' ? null : user?.email\n\n      let filteredPosts = fetchedPosts.filter(post =>\n        (severity_filter ? post.severity === severity_filter : true)\n        && (owner_filter ? post.owner._id === owner_filter : true)\n      )\n\n      const dividedPosts = []\n      const today = new Date().getTime()\n      let last_day = today\n\n      if (filteredPosts.length > 0) {\n        filteredPosts.forEach(post => {\n          const other_day = daysAgo(today, post._id['$date'])\n          if (last_day !== other_day) {\n            dividedPosts.push({ divider: other_day })\n            last_day = other_day\n          }\n          dividedPosts.push(post)\n        })\n      } else {\n        dividedPosts.push(\n          { divider: 'There are no posts with those conditions' }\n        )\n      }\n\n      return dividedPosts\n    }\n  }, [fetchedPosts, severity, owner, user])\n\n  const handleDelete = (post) => {\n    (async () => {\n      const res = await axios.delete(\n        api_url + '/news/delete-post',\n        {\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user?.token}`\n          },\n          data: post\n        }\n      )\n      if (res.data['msg']) {\n        handleMessage(res.data['msg'], 'info')\n      }\n      if (res.data['wrn']) {\n        handleMessage(res.data['wrn'], 'warning')\n      }\n      if (res.data['err']) {\n        handleMessage(res.data['err'], 'error')\n      }\n    })()\n    setPostToDelete('')\n  }\n\n  const justClose = () => {\n    setPostToDelete('')\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={7}>\n        <Box border={2} p={2} borderRadius={1} borderColor='primary.main'\n          sx={{ height: '80vh' }}\n        >\n          <Stack spacing={1} pr={1}\n            sx={{ paddingBlockEnd: 2, height: '75vh', overflow: 'auto' }}\n          >\n            {posts?.map(element => {\n              let component\n              if (element.divider) {\n                component = (\n                  <Grid item key={element.divider}>\n                    <Divider>\n                      <Chip color='primary' label={element.divider} />\n                    </Divider>\n                  </Grid>\n                )\n              }\n              if (element._id) {\n                let post_props\n                switch (element.severity) {\n                  case 'rem':\n                    post_props = {\n                      icon: <Alarm />, severity: 'success'\n                    }\n                    break\n                  case 'nor':\n                    post_props = { severity: 'warning' }\n                    break\n                  case 'urg':\n                    post_props = { severity: 'error' }\n                    break\n                  default:\n                    post_props = {}\n                    break\n                }\n                if (user?.is_admin || element.owner._id === user?.email) {\n                  post_props = {\n                    ...post_props,\n                    onClose: () => { setPostToDelete(element._id) }\n                  }\n                }\n                const content = element.content\n                const owner = `**${element.owner.username}**`\n                const pub = element.is_public ? 'to **All**' : 'just for **Me**'\n                const date = new Date(element._id.$date).toLocaleDateString()\n                component = (\n                  <Grid item key={element._id['$date']}>\n                    <Alert variant='filled' {...post_props}\n                      style={{\n                        fontFamily: `${userSettings.postsFontFamily}, Helvetica`\n                        , fontSize:'1em'\n                      }}\n                    >\n                      <AlertTitle>\n                        <Typography variant='h5'>\n                          {element.title}\n                        </Typography>\n                      </AlertTitle>\n                      <ReactMarkdown className={style.mdStyle}\n                        remarkPlugins={[remarkGfm]} children={\n                          `${content}\\n\\n*${owner} ${pub}* | *${date}*`\n                        }\n                      />\n                    </Alert>\n                  </Grid>\n                )\n              }\n              return component\n            })}\n          </Stack>\n        </Box>\n      </Grid >\n      <Dialog\n        open={Boolean(postToDelete)}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            Confirm delete post?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button\n            onClick={() => handleDelete(postToDelete)} color='error' autoFocus\n          >\n            DELETE </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Posts","import { FormControl, Select, MenuItem } from '@mui/material'\n\n\nconst PostSelect = (props) => {\n\n  const { options, option, setOption, ...others } = props\n\n  const handleChange = (e) => {\n    setOption(e.target.value)\n  }\n\n  return (\n    <FormControl fullWidth {...others}>\n      <Select size='small' value={option} onChange={handleChange}>\n        {options.map(op => {\n          return <MenuItem key={op} value={op}>{op}</MenuItem>\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default PostSelect","import { useState, useContext } from 'react'\nimport {\n  Typography, Grid, Box, Divider, TextField, Button, useMediaQuery, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\nimport axios from 'axios';\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Panel = (props) => {\n\n  const {\n    filter: { severity, setSeverity, owner, setOwner },\n    handleMessage\n  } = props\n  const { user } = useContext(UserContext)\n\n  const [newPost, setNewPost] = useState({\n    title: '', content: '', days_offset: ''\n  })\n  const [newSeverity, setNewSeverity] = useState('Normal')\n  const [to, setTo] = useState('to Me')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setNewPost({ ...newPost, [name]: value })\n  }\n\n  const getSeverity = () => {\n    switch (newSeverity) {\n      case 'Reminder':\n        return 'rem'\n      default:\n      case 'Normal':\n        return 'nor'\n      case 'Urgent':\n        return 'urg'\n    }\n  }\n\n  const getPublic = () => {\n    switch (to) {\n      default:\n      case 'to Me':\n        return false\n      case 'to All':\n        return true\n    }\n  }\n\n  const handleSend = () => {\n\n    if (!newPost.title) {\n      handleMessage('You must provide a Title', 'error')\n      return\n    }\n    if (!newPost.content) {\n      handleMessage('You must provide a Content', 'error')\n      return\n    }\n    const days_offset = parseInt((newPost.days_offset || 0))\n    if (0 > days_offset || 7 < days_offset) {\n      handleMessage('\"within days\" must be between 0 and 7', 'error')\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/create-post',\n          {\n            title: newPost.title,\n            content: newPost.content,\n            severity: getSeverity(),\n            days_offset: days_offset,\n            is_public: getPublic()\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          handleMessage(res.data['msg'], 'success')\n          setNewPost({ title: '', content: '', days_offset: '' })\n          setNewSeverity('Normal')\n          setTo('to Me')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('md'))\n  const ROWS = {\n    rows: isSmall ? 8 : 12\n  }\n\n  let send_props\n  switch (newSeverity) {\n    case 'Reminder':\n      send_props = { color: 'success' }\n      break\n    case 'Normal':\n      send_props = { color: 'warning' }\n      break\n    case 'Urgent':\n      send_props = { color: 'error' }\n      break\n    default:\n      send_props = {}\n      break\n  }\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '75vh', overflow: 'auto' }}\n          >\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='Title'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth {...ROWS} multiline size='small' label='Content'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Panel","import { useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material';\n\nimport Posts from './Posts'\nimport Panel from './Panel'\n\nconst News = () => {\n\n  const [severity, setSeverity] = useState('All')\n  const [owner, setOwner] = useState('from All')\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const filter = {\n    severity: severity,\n    setSeverity: setSeverity,\n    owner: owner,\n    setOwner: setOwner\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({msg: msg, vnt: vnt})\n    setOpen(true)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Panel filter={filter} \n          handleMessage={handleMessage}\n        />\n        <Posts filter={{ severity: severity, owner: owner }} \n          handleMessage={handleMessage} \n        />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default News;","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button, Radio,\n  FormControl, RadioGroup, FormControlLabel, Divider\n} from '@mui/material'\nimport { LooksOne, LooksTwo, Looks3, Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Complete = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ first: '', second: '', third: '' })\n  const [sign, setSign] = useState('pri')\n  const [operation, setOperation] = useState('add')\n  const [expression, setExpression] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleSign = (e) => {\n    const { value } = e.target\n    setSign(value)\n    setFields({ ...fields, first: '', third: '' })\n  }\n\n  const handleOperation = (e) => {\n    const { value } = e.target\n    setOperation(value)\n    setFields({ ...fields, second: '' })\n  }\n\n  const handleExpressionChange = (e) => {\n    const { value } = e.target\n    setExpression(value)\n  }\n\n  const handleQuery = (url, data, to_set) => {\n    for (let [field, value] of Object.entries(data)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    data = { ...data, sign: sign, operation: operation };\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + url,\n          data,\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ])\n          setFields({ ...fields, [to_set]: res.data.result })\n          if (!data.expression) {\n            setExpression(res.data.result);\n            (async () => {navigator.clipboard.writeText(\n              `$${res.data.result}`\n            )})()\n            handleMessage(`$${res.data.result} Copied`, 'success')\n          } else {\n            (async () => {navigator.clipboard.writeText(res.data.result)})()\n            handleMessage(`${res.data.result} Copied`, 'success')\n          }\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const handleGetFirst = () => {\n    let dataset = { second: fields.second, third: fields.third }\n    handleQuery('/calculator/get-first-term', dataset, 'first')\n  }\n\n  const handleGetSecond = () => {\n    let dataset = { first: fields.first, third: fields.third }\n    handleQuery('/calculator/get-second-term', dataset, 'second')\n  }\n\n  const handleGetThird = () => {\n    let dataset = { first: fields.first, second: fields.second }\n    handleQuery('/calculator/get-result', dataset, 'third')\n  }\n\n  const handleEvaluate = () => {\n    handleQuery('/calculator/resolve-expression', { expression: expression })\n  }\n\n  const handleEnterOnFields = () => {\n\n    if (fields.first === '' && fields.second !== '' && fields.third !== '') {\n      handleGetFirst()\n    } else if (\n      fields.first !== '' && fields.second === '' && fields.third !== ''\n    ) {\n      handleGetSecond()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third === ''\n    ) {\n      handleGetThird()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third !== ''\n    ) {\n      handleMessage('impossible to know which operation to perform!', 'warning')\n    } else {\n      handleMessage('You must provide 2 fields at least!', 'warning')\n    }\n  }\n\n  const handleClear = () => {\n    setFields({ first: '', second: '', third: '' })\n    setExpression('')\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '65vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '60vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='sign'\n                  value={sign} onChange={handleSign}\n                >\n                  <Paper>\n                    <Grid item px={3}>\n                      <FormControlLabel\n                        value='pri'\n                        control={<Radio />} label={\n                          <Typography variant='h5' color='primary'>\n                            $\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='per'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h5' color='secondary'>\n                            %\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='operation'\n                  value={operation} onChange={handleOperation}\n                >\n                  <Paper>\n                    <Grid px={3}>\n                      <FormControlLabel\n                        value='add'\n                        control={<Radio />} label={\n                          <Typography variant='h4' color='primary'>\n                            +\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='sub'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h4' color='secondary'>\n                            -\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant='h5' color='initial'\n                sx={{ display: { xs: 'none', md: 'flex' } }}\n              >\n                complete calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth size='small' type='number'\n                label={sign === 'pri' ? 'Price' : 'Percentage'}\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5'\n                      color={sign === 'pri' ? 'primary' : 'secondary'}\n                    >\n                      {sign === 'pri' ? '$' : ''}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='secondary'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n\n                name='first'\n                value={fields.first}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='day/month/year | Percentage'\n                size='small' InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4'\n                      color={operation === 'add' ? 'primary' : 'secondary'}\n                    >\n                      {operation === 'add' ? '+' : '-'}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      %\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='second'\n                value={fields.second}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Result' type='number'\n                size='small' InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '= $' : '='}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='third'\n                value={fields.third}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetFirst} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksOne />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetSecond} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksTwo />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetThird} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<Looks3 />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth label='Evaluate Expression' size='small'\n                name='expression' InputProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4' color='primary'>\n                      {'>>>'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                InputLabelProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 }\n                }}\n                value={expression}\n                onChange={handleExpressionChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEvaluate()\n                }}\n              />\n            </Grid>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleClear} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='error'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Clear\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleEvaluate} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='primary'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Evaluate\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Complete","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button\n} from '@mui/material'\nimport { Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Basic = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ price: '', str_date: '' })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleGetPrice = () => {\n    for (let [field, value] of Object.entries(fields)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/calculator/price-add-percent',\n          {\n            ...fields,\n            str_date: fields.str_date.split('-').reverse().join('/')\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ]);\n          (async () => {navigator.clipboard.writeText(`$${res.data.result}`)})()\n          handleMessage(`$${res.data.result} Copied`, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '30vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '25vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h5' color='initial'>\n                basic calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Price'\n                type='number'\n                name='price'\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='primary'>\n                      $\n                    </Typography>\n                  </InputAdornment>\n                }}\n                value={fields.price}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Date' type='date'\n                InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='body1' color='primary'>\n                      from\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='str_date'\n                value={fields.str_date}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetPrice} size='large'\n                sx={{ minHeight: '75%' }}\n                variant='contained' color='success' endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  GET PRICE\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Basic","import { useMemo } from 'react'\nimport {\n  Paper, Typography, Tooltip, Grid, Box, Divider, Chip\n} from '@mui/material'\n\nimport daysAgo from '../tools/daysAgo'\n\nconst CalcHistory = (props) => {\n\n  const { history } = props\n\n  const registries = useMemo(() => {\n\n    const dividedRegistries = []\n    const today = new Date().getTime()\n    let last_day = today\n\n    if (history.length > 0) {\n      history.forEach(reg => {\n        const other_day = daysAgo(today, reg._id['$date'])\n        if (last_day !== other_day) {\n          dividedRegistries.push({ divider: other_day })\n          last_day = other_day\n        }\n        dividedRegistries.push(reg)\n      })\n    } else {\n      dividedRegistries.push(\n        { divider: 'There are no previous calculations' }\n      )\n    }\n\n    return dividedRegistries\n\n  }, [history])\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Box sx={{\n        paddingBlockEnd: 2,\n        height: '75vh',\n        backgroundColor: 'info.main'\n      }} borderRadius={3} p={2}>\n        <Grid container spacing={1} align='center' pr={2} alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '70vh', overflow: 'auto' }}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" color=\"initial\">\n              Result / History\n            </Typography>\n          </Grid>\n          {registries.map((reg, item) => {\n            let component\n            if (reg.divider) {\n              component = (\n                <Grid item xs={12} key={reg.divider}>\n                  <Divider>\n                    <Chip color='warning' size='small' label={reg.divider} />\n                  </Divider>\n                </Grid>\n              )\n            }\n            if (reg._id) {\n\n              let tColor\n              if (item !== 1) {\n                tColor = { color: 'info.light' }\n              }\n\n              component = (\n                <Grid item xs={12} key={reg._id.$date}>\n                  <Paper elevation={7}>\n                    <Tooltip title={reg.footnote}\n                      placement='right' disableInteractive arrow followCursor\n                    >\n                      <Typography variant=\"h6\" {...tColor}\n                        sx={{ whiteSpace: 'pre-line' }}\n                      >\n                        {reg.calculation}\n                      </Typography>\n                    </Tooltip>\n                  </Paper>\n                </Grid>\n              )\n            }\n            return component\n          })}\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CalcHistory","import { useContext, useEffect, useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert, FormControlLabel, Switch, Typography\n} from '@mui/material'\nimport axios from 'axios'\n\nimport Complete from './Complete'\nimport Basic from './Basic'\nimport CalcHistory from './CalcHistory'\nimport { api_url } from '../tools/routes'\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\n\nconst Calculator = () => {\n\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [history, setHistory] = useState([])\n  const [openSB, setOpenSB] = useState(false)\n  const [basic, setBasic] = useState(Boolean(userSettings?.calculator))\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    (async () => {\n      const res = await axios.get(\n        api_url + '/calculator/get-history',\n        {\n          cancelToken: source.token,\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user.token}`\n          }\n        }\n      )\n      if (res.data['hist']) {\n        setHistory(res.data['hist'])\n      }\n      if (res.data['msg']) {\n        // console.warn(res.data['msg'])\n      }\n      if (res.data['err']) {\n        console.error(res.data['err'])\n      }\n    })()\n    return () => {\n      source.cancel()\n    }\n  }, [user, setHistory])\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpenSB(true)\n  }\n\n  const handleBasic = (e) => {\n    const { checked } = e.target\n    setBasic(checked)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12}>\n          <FormControlLabel labelPlacement='start'\n            label={\n              <Typography px={1}>\n                Calculator\n              </Typography>\n            }\n            control={\n              <FormControlLabel\n                control={<Switch checked={basic} onChange={handleBasic} />}\n                label=\"Basic\"\n              />\n            }\n          />\n        </Grid>\n        {basic\n          ?\n          <Basic\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n          :\n          <Complete\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n        }\n        <CalcHistory history={history} setHistory={setHistory} />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Calculator;","import { useContext, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { UserContext } from './contexts'\nimport { api_url } from './routes'\n\nexport const useAxios = (\n  method, uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  const headers = {\n    Accept: '*/*',\n    Authorization: `Bearer ${user?.token}`\n  }\n\n  return async (data) => {\n    try {\n      let res\n      switch (method) {\n        default:\n          res = await axios.get(\n            api_url + uri, { headers: headers }\n          )\n          break\n        case 'post':\n          res = await axios.post(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'put':\n          res = await axios.put(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'delete':\n          res = await axios.delete(\n            api_url + uri, { headers: headers, data: data }\n          )\n          break\n      }\n      if (res.data[expected]) {\n        suc(res.data)\n      }\n      if (res.data['wrn']) {\n        wrn(res.data)\n      }\n      if (res.data['err']) {\n        err(res.data)\n      }\n    }\n    catch (error) {\n      TCErr(error)\n    }\n  }\n}\n\nexport const useAxiosEffect = (\n  uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    const headers = {\n      Accept: '*/*',\n      Authorization: `Bearer ${user?.token}`\n    }\n    const source = axios.CancelToken.source();\n    (async () => {\n      try {\n        const res = await axios.get(\n          api_url + uri, { cancelToken: source.token, headers: headers }\n        )\n        if (res.data[expected]) {\n          suc(res.data)\n        }\n        if (res.data['wrn']) {\n          wrn(res.data)\n        }\n        if (res.data['err']) {\n          err(res.data)\n        }\n      }\n      catch (error) {\n        TCErr(error)\n      }\n    })()\n    return () => {\n      source.cancel('useAxios: canceled')\n    }\n    // eslint-disable-next-line\n  }, [user])\n}","const strFormat = (str, regexs, args) => {\n\n\n  let mut_str = str\n  if (regexs !== undefined) {\n    regexs.forEach(({ pattern, replacement }) => {\n      mut_str = mut_str.replace(RegExp(pattern, 'ig'), replacement)\n    })\n  }\n  return mut_str.replace(/{([\\w\\s]+)}/g,\n  (match, index) => {\n      return typeof args[index] === 'undefined' ? match : args[index]\n    }\n  )\n}\n\nexport default strFormat","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, InputAdornment, Grid, Box, Paper, Tooltip\n} from '@mui/material'\nimport { ContentCopy } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst CreditCards = (props) => {\n\n  const { payMeths, sysRegex, handleMessage } = props\n\n  const [price, setPrice] = useState('')\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      const total = (\n        parseFloat(price) * (1 + meth.increase / 100)\n      ).toFixed() | 0\n      const monthly = (total / meth.installments).toFixed()\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        total: total,\n        monthly: monthly,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths, price])\n\n  const handleChangePrice = (e) => {\n    setPrice(e.target.value)\n  }\n\n\n  const handleCopy = (item) => {\n\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(`${item.installments} ${item.monthly}`, sysRegex)\n      )\n    })()\n    handleMessage('Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6' color='primary.main'>\n              Credit Cards Payments\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField label='Price' size='small'\n              inputProps={{\n                min: 0, step: 10\n              }}\n              InputProps={{\n                startAdornment: <InputAdornment position='start'>\n                  <Typography variant='h6' color='primary'>\n                    $\n                  </Typography>\n                </InputAdornment>\n              }}\n              type='number'\n              value={price}\n              onChange={handleChangePrice}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n              <Paper elevation={3} sx={{\n                borderRadius: '15px 15px 0px 0px',\n                backgroundColor: 'warning.dark',\n                height: 40\n              }}\n              >\n                <Typography variant=\"body1\" color=\"initial\" p={1}>\n                  Card Name\n                </Typography>\n              </Paper>\n              <TableContainer\n                sx={{ height: { xs: '57vh', md: '60vh' } }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <CustomCell width='20%'>\n                        Installments\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'error.dark' }}\n                      >\n                        Total\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'success.dark' }}\n                      >\n                        Monthly\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Increase\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        PosCode\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Copy\n                      </CustomCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {paymentMethods.map(item => {\n                      const component = item.header ? (\n                        <TableRow key={item.header}>\n                          <CustomCell width='100%' colSpan={6}\n                            sx={{\n                              borderRadius: '20px 20px 0px 0px',\n                              backgroundColor: 'warning.dark'\n                            }}\n                          >\n                            {item.header}\n                          </CustomCell>\n                        </TableRow>\n                      ) : (\n                        <Tooltip key={item.id}\n                          title={item.description} disableInteractive\n                          placement='right' arrow followCursor\n                        >\n                          <TableRow hover>\n                            <CustomCell>\n                              {item.installments}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'error.dark' }}\n                            >\n                              ${item.total}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'success.dark' }}\n                            >\n                              ${item.monthly}\n                            </CustomCell>\n                            <CustomCell>\n                              {item.increase}%\n                            </CustomCell>\n                            <CustomCell>\n                              *{item.pos_code}*\n                            </CustomCell>\n                            <CustomCell>\n                              <IconButton size='small' color='primary'\n                                onClick={() => handleCopy(item)}\n                              >\n                                <ContentCopy fontSize='small' />\n                              </IconButton>\n                            </CustomCell>\n                          </TableRow>\n                        </Tooltip>\n                      )\n                      return component\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CreditCards\n","import { useState, useMemo } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Tooltip\n} from '@mui/material'\nimport { ContentCopy, Cancel } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\nconst AnswerButtons = (props) => {\n\n  const { commonAnswers, ownAnswers, sysRegex, ownRegex, handleMessage } = props\n\n  const [text, setText] = useState('')\n\n  const answerList = useMemo(() => {\n    if (commonAnswers.length > 0 && ownAnswers.length > 0) {\n      return [...commonAnswers, ...ownAnswers].map(({ label, content }) => {\n        return { [label]: content }\n      }).reduce((resObj, curObj) => {\n        return { ...resObj, ...curObj }\n      })\n    }\n\n  }, [commonAnswers, ownAnswers])\n\n  const handleClickAnswer = (text) => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    setText(text)\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopy = () => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopyRaw = () => {\n    (async () => {\n      navigator.clipboard.writeText(text)\n    })()\n    handleMessage('Raw Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2}>\n          <Grid item xs={12} md={11}>\n            <TextField label='Content' focused color='warning'\n              fullWidth multiline rows={4}\n              InputProps={{ readOnly: true }}\n              value={text}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Tooltip title='Copy Formated Text' placement='left'>\n              <IconButton color='primary' onClick={handleCopy}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Copy Raw Text' placement='left'>\n              <IconButton color='info' onClick={handleCopyRaw}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Unselect Answer' placement='left'>\n              <IconButton color='warning' onClick={() => setText('')}>\n                <Cancel />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Commons\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {commonAnswers.map((ans) => {\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                  enterDelay={1000} key={ans._id.$oid}\n                >\n                    <Button fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              })}\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Own\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {ownAnswers.map((ans) => {\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                    enterDelay={1000} key={ans._id.$oid}\n                  >\n                    <Button fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              })}\n            </Stack>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default AnswerButtons","import { useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material'\n\nimport { useAxiosEffect } from '../tools/axiosTool'\nimport CreditCards from './CreditCards'\nimport AnswerButtons from './AnswerButtons'\n\nconst Answers = () => {\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => { \n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods) \n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers) \n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers) \n      }\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12} md={6}>\n          <CreditCards\n            payMeths={payMeths}\n            sysRegex={sysRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <AnswerButtons\n            commonAnswers={commonAnswers}\n            ownAnswers={ownAnswers}\n            sysRegex={sysRegex}\n            ownRegex={ownRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt} \n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Answers;","import { Outlet } from 'react-router'\nimport {Container, Grid } from '@mui/material'\n\nconst Settings = () => {\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Outlet />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Settings;","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, Grid, Box, Paper\n} from '@mui/material'\nimport { Done, Delete, Add, Edit, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst EditCreditCards = (props) => {\n\n  const { payMeths, setPayMeths, handleMessage } = props\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths])\n\n  const initialValue = {\n    id: '',\n    card_name: '',\n    installments: '',\n    increase: '',\n    pos_code: '',\n    description: ''\n  }\n\n  const [newCard, setNewCard] = useState('')\n  const [selected, setSelected] = useState(initialValue)\n  const [method, setMethod] = useState(initialValue)\n\n  const handleChangeNewCard = (e) => {\n    setNewCard(e.target.value)\n  }\n\n  const handleChangeMethod = (e) => {\n    const { name, value } = e.target\n    setMethod({ ...method, [name]: value })\n  }\n\n  // QUERIES -------------------------------------------------------------------\n\n  const handleAddCard = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleAddMethod = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateCardName = useAxios(\n    'put', '/answers/update-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateMethod = useAxios(\n    'put', '/answers/update-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropCard = useAxios(\n    'delete', '/answers/delete-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropMethod = useAxios(\n    'delete', '/answers/delete-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  // ---------------------------------------------------------------------------\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={12}>\n              <Typography variant='body1' color='secondary.main'>\n                Edit Credit Cards Payments Methods\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n                <Paper elevation={3} sx={{\n                  borderRadius: '15px 15px 0px 0px',\n                  backgroundColor: 'warning.main',\n                  height: 40\n                }}\n                >\n                  <Typography variant=\"body1\" color=\"initial\" p={1}>\n                    Card Name\n                  </Typography>\n                </Paper>\n                <TableContainer sx={{ height: '60vh' }}>\n                  <Table stickyHeader size='small'>\n                    <TableHead>\n                      <TableRow>\n                        <CustomCell width='25%'>\n                          Installments\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Description\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Increase\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Code\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Upg\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Drop\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Add\n                        </CustomCell>\n                      </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                      <TableRow>\n                        <CustomCell width='90%' colSpan={6}\n                          sx={{\n                            borderRadius: '50px 0px 0px 50px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <TextField fullWidth label='Card Name' size='small'\n                            variant='standard' value={newCard} color='secondary'\n                            inputProps={{ style: { textAlign: 'center' } }}\n                            onChange={handleChangeNewCard}\n                          />\n                        </CustomCell>\n                        <CustomCell\n                          sx={{\n                            borderRadius: '0px 50px 50px 0px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <IconButton size='small' color='secondary'\n                            disabled={!Boolean(newCard)}\n                            onClick={() => handleAddCard({\n                              method: {\n                                card_name: newCard, installments: 0,\n                                increase: 0, pos_code: 0, description: 'FIXME'\n                              }\n                            })}\n                          >\n                            <Add fontSize='small' />\n                          </IconButton>\n                        </CustomCell>\n                      </TableRow>\n\n                      {paymentMethods.map(item => {\n\n                        let component\n                        if (selected.id === item.id) {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <TextField label='Card Name' size='small'\n                                  variant='standard' value={method.header}\n                                  name='header'\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell \n                                sx={{ backgroundColor: 'warning.main' }}\n                              >\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='warning'\n                                  action={() => handleUpdateCardName(\n                                    { name: item.id, new_name: method.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'>\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                <TextField label='Installments' size='small'\n                                  variant='standard'\n                                  name='installments'\n                                  value={method.installments}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Description' size='small'\n                                  variant='standard'\n                                  name='description'\n                                  value={method.description}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Increase' size='small'\n                                  variant='standard'\n                                  name='increase'\n                                  value={method.increase}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Pos-Code' size='small'\n                                  variant='standard'\n                                  name='pos_code'\n                                  value={method.pos_code}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='success' action={\n                                    () => handleUpdateMethod(\n                                      { method: { ...method } }\n                                    )\n                                  }\n                                >\n                                  <IconButton size='small' color='success'\n                                  >\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        } else {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                {item.header}\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='error'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{ backgroundColor: 'warning.main' }}>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error' action={() => handleDropCard(\n                                    { card_name: item.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                {item.installments}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.description}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.increase}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.pos_code}\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='warning'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error'\n                                  action={() => handleDropMethod(\n                                    { method: { id: item.id } }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        }\n                        return component\n                      })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditCreditCards;\n","import { useState } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControl, FormControlLabel, MenuItem, Select\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\nconst EditAnswers = (props) => {\n\n  const {\n    user, commonAnswers, ownAnswers, setCommonAnswers, setOwnAnswers,\n    handleMessage\n  } = props\n\n  const colors = {\n    '#1976d2': 'BLUE',\n    '#0097a7': 'CYAN',\n    '#388e3c': 'GREEN',\n    '#fbc02d': 'YELLOW',\n    '#f57c00': 'ORANGE',\n    '#d32f2f': 'RED',\n    '#c2185b': 'PINK',\n    '#7b1fa2': 'PURPLE',\n    '#5d4037': 'BROWN',\n    '#455a64': 'GREY'\n  }\n\n  const initialAnswer = {\n    id: '',\n    label: '',\n    color: '',\n    content: '',\n    common: false,\n    order: 0\n  }\n\n  const [answer, setAnswer] = useState(initialAnswer)\n  const [edit, setEdit] = useState(false)\n\n  const handleChangeAnswer = (e) => {\n    const { name, value, checked } = e.target\n    setAnswer({\n      ...answer,\n      [name]: name !== 'common' ? value : checked\n    })\n  }\n\n  const handleClickAnswer = (ans) => {\n    setAnswer(ans)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setAnswer(initialAnswer)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n      handleMessage(d.msg, 'success')\n      setAnswer(initialAnswer)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-answer', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2}>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Label' color='warning'\n                fullWidth name='label'\n                value={answer.label} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Order' color='warning'\n                fullWidth name='order' type='number'\n                value={answer.order} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='color'\n                  value={answer.color}\n                  onChange={handleChangeAnswer}\n                >\n                  {Object.entries(colors).map(([hex, name]) => {\n                    return (\n                      <MenuItem key={name} value={hex}>\n                        <Typography color={hex}>\n                          {name}\n                        </Typography>\n                      </MenuItem>\n                    )\n                  })\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {user?.is_admin && !edit &&\n              <Grid item xs={12} md={3}>\n                <FormControlLabel control={\n                  <Switch\n                    name='common'\n                    checked={answer.common}\n                    onChange={handleChangeAnswer}\n                  />\n                }\n                  label='Common'\n                />\n              </Grid>\n            }\n            <Grid item xs={12} md={11}>\n              <TextField label='Content' color='warning'\n                fullWidth multiline rows={4} name='content'\n                value={answer.content} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={1}>\n              <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                confirmText={edit ? 'Update' : 'Create'} message={\n                  edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                } action={edit ? () => handleUpdateAnswer({\n                  answer: {\n                    ...answer, id: answer._id.$oid, color: colors[answer.color]\n                  }\n                }) : () => handleCreateAnswer({\n                  answer: {\n                    ...answer, color: colors[answer.color]\n                  }\n                })} color={edit ? 'warning' : 'success'}\n              >\n                <IconButton color={edit ? 'primary' : 'success'}\n                  disabled={!Boolean(answer.label)}\n                >\n                  <Save />\n                </IconButton>\n              </RDialog>\n              <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                confirmText='Delete' action={() => handleDeleteAnswer({\n                  answer: {\n                    id: answer._id.$oid\n                  }\n                })}\n              >\n                <IconButton color='error' disabled={!Boolean(answer.label)}>\n                  <Delete />\n                </IconButton>\n              </RDialog>\n              <IconButton color='warning' disabled={!Boolean(answer.label)}\n                onClick={handleCancel}\n              >\n                <Cancel />\n              </IconButton>\n            </Grid>\n            {user?.is_admin &&\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Commons\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n                >\n                  {commonAnswers.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        sx={{\n                          color: '#FFFFFF',\n                          background: ans.color, '&:hover': {\n                            background: ans.color, filter: 'brightness(90%)'\n                          }\n                        }}\n                        onClick={() => handleClickAnswer(ans)}\n                      >\n                        {ans.label}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            }\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6'>\n                Own\n              </Typography>\n              <Stack spacing={1} p={1}\n                sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n              >\n                {ownAnswers.map((ans) => {\n                  return (\n                    <Button key={ans._id.$oid} fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans)}\n                    >\n                      {ans.label}\n                    </Button>\n                  )\n                })}\n              </Stack>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditAnswers","import { useState, useContext } from 'react'\nimport { Grid, Snackbar, Alert } from '@mui/material'\n\nimport { useAxiosEffect } from '../../tools/axiosTool'\nimport EditCreditCards from './EditCreditCards'\nimport EditAnswers from './EditAnswers'\nimport { UserContext } from '../../tools/contexts'\n\nconst AnswersSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => {\n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods)\n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <>\n      {user.is_admin &&\n        <Grid item xs={12} md={6}>\n          <EditCreditCards\n            payMeths={payMeths}\n            setPayMeths={setPayMeths}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      }\n      <Grid item xs={12} md={6}>\n        <EditAnswers\n          user={user}\n          commonAnswers={commonAnswers}\n          setCommonAnswers={setCommonAnswers}\n          ownAnswers={ownAnswers}\n          setOwnAnswers={setOwnAnswers}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default AnswersSettings;","import { useState } from 'react'\nimport {\n  Grid, Paper, Box, Button, TextField, Typography, FormControlLabel, Checkbox,\n  Divider\n} from '@mui/material'\nimport { ArrowUpward, Add } from '@mui/icons-material'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst NewItem = (props) => {\n\n  const { dates, setDates, setHasChanged, handleMessage } = props\n\n  const initialNewOne = { str_date: '', percent: '', increaseAll: true }\n\n  const [newOne, setNewOne] = useState(initialNewOne)\n  const [upAll, setUpAll] = useState('')\n\n  const handleChangeNewOne = (e) => {\n    const { name, value, checked } = e.target\n    setNewOne({ ...newOne, [name]: name === 'increaseAll' ? checked : value })\n  }\n\n  const addSuccessiveIncreases = (inc) => {\n    const b = parseFloat(inc)\n    return dates.map(item => {\n      const a = parseFloat(item.percent)\n      const newPercent = a + b + (a * b / 100)\n      return { _id: item._id, percent: newPercent.toFixed(2) }\n    })\n  }\n\n  const handleAddOne = () => {\n    const newDate = newOne.str_date.split('-').join('/')\n    const newPercent = parseFloat(newOne.percent)\n    for (let date of dates) {\n      if (date._id === newDate) {\n        handleMessage(`'${date._id}' is already on the list`, 'error')\n        return\n      }\n    }\n    let newDates = newOne.increaseAll\n      ? addSuccessiveIncreases(newPercent)\n      : dates\n    setDates([\n      { _id: newDate, percent: newPercent },\n      ...newDates\n    ])\n    setHasChanged(true)\n    setNewOne(initialNewOne)\n  }\n  \n  const handleUpdateAll = () => {\n    setDates(addSuccessiveIncreases(upAll))\n    setHasChanged(true)\n    setUpAll('')\n  }\n\n  return (\n    <Grid item pb='1vh'>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '39vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            sx={{ minHeight: '35vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h6' color='success.main'>\n                Add New Date - Percentage\n              </Typography>\n            </Grid>\n            <Grid item xs={8} md={4}>\n              <TextField fullWidth size='small' label='Date'\n                focused\n                type='date'\n                name='str_date'\n                value={newOne.str_date}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={4} md={2}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                name='percent'\n                value={newOne.percent}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <FormControlLabel label='Increase All' control={\n                <Checkbox color='warning'\n                  name='increaseAll'\n                  checked={newOne.increaseAll}\n                  onChange={handleChangeNewOne}\n                />\n              } />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <RDialog title='Add New Date-Percentage Pair'\n                message='Confirm add a new one?' confirmText='ADD'\n                color='success' action={handleAddOne}\n              >\n                <Button fullWidth variant='contained' color='success'\n                  disabled={\n                    !Boolean(newOne.str_date)\n                    || !Boolean(newOne.percent)\n                  }\n                  sx={{ height: '100%' }} startIcon={<Add />}\n                >\n                  ADD\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6' color='warning.main'>\n                Increase All Percentages\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                value={upAll}\n                onChange={(e) => setUpAll(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <RDialog title='Update Date-Percentage Table'\n                message='Confirm update table?' confirmText='UPDATE'\n                action={handleUpdateAll}\n              >\n                <Button fullWidth variant='contained' color='warning'\n                  disabled={!Boolean(upAll)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  UPDATE TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default NewItem","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  Button, IconButton, Typography\n} from '@mui/material'\nimport { ArrowUpward, Download, Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\n\nconst Lists = (props) => {\n\n  const { lists, setLists, setDates, setHasChanged, handleMessage } = props\n\n  const { user } = useContext(UserContext)\n  const [selectedList, setSelectedList] = useState('')\n\n  const fetchList = () => {\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleLoadList = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { list_name: selectedList },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          fetchList()\n          handleMessage(res.data.msg, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n      setSelectedList('')\n      setHasChanged(false)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDownloadList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/get-list-file',\n          { file_name: name },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['err']) {\n          console.error(res.data.err)\n        } else {\n          const fileToSave = window.URL.createObjectURL(\n            new Blob(\n              [JSON.stringify(res.data, undefined, 2)],\n              { type: 'application/json' }\n            )\n          )\n          const link = document.createElement('a')\n          link.href = fileToSave\n          link.setAttribute('download', `${name}`)\n          document.body.appendChild(link)\n          link.click()\n          link.remove()\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDropList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.delete(\n          api_url + '/calculator/drop-list',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            },\n            data: { file_name: name }\n          }\n        )\n        if (res.data['msg']) {\n          const new_list = lists.filter(i => i.list_name !== name)\n          setLists(new_list)\n          setSelectedList('')\n          handleMessage(res.data.msg, 'info')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Grid item>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '40vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            alignContent='flex-start'\n          >\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6' color='error.main'>\n                Load Table\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} pb={2}>\n              <RDialog title='Load Table'\n                message='Confirm load table?'\n                confirmText='LOAD' disabled={!Boolean(selectedList)}\n                action={handleLoadList}\n              >\n                <Button fullWidth variant='contained' color='error'\n                  disabled={!Boolean(selectedList)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  LOAD TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container align='center'\n                alignItems='center'\n                alignContent='flex-start'\n                sx={{ height: '25vh', overflow: 'auto' }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align='center' width='80%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Table Name\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Download\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Drop\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {lists.map(list => {\n                      const is_sel = selectedList === list.list_name\n                      return (\n                        <TableRow key={list._id.$oid} hover\n                          selected={is_sel}\n                        >\n                          <TableCell align='center'\n                            onClick={() => {\n                              is_sel ?\n                                setSelectedList('')\n                                :\n                                setSelectedList(list.list_name)\n                            }}>\n                            {list.list_name}\n                          </TableCell>\n                          <TableCell align='center'>\n                            <IconButton size='small' color='info'\n                              onClick={() =>\n                                handleDownloadList(list.list_name)\n                              }\n                            >\n                              <Download />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell align='center'>\n                            <RDialog title='Drop Data Table?'\n                              message='Confirm drop Table?'\n                              confirmText='DROP'\n                              action={() => {\n                                handleDropList(list.list_name)\n                              }}\n                            >\n                              <IconButton size='small' color='error'>\n                                <Delete />\n                              </IconButton>\n                            </RDialog>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Lists","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  IconButton, TextField, Button\n} from '@mui/material'\nimport {\n  Done, Cancel, Edit, Delete\n} from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst Items = (props) => {\n\n  const {\n    dates, setDates, lists, setLists, hasChanged, setHasChanged, handleMessage\n  } = props\n\n  const { user } = useContext(UserContext)\n  const [selected, setSelected] = useState({ _id: '', percent: '' })\n  const [oneDate, setOneDate] = useState({ _id: '', percent: '' })\n\n  const handleChangeSelected = (e) => {\n    const { name, value } = e.target\n    setOneDate({ ...oneDate, [name]: value })\n  }\n\n  const handleUpdateOne = () => {\n    let newDates = dates.map(item => {\n      return item._id !== selected._id ? item\n        : { _id: oneDate._id, percent: parseFloat(oneDate.percent) }\n    })\n    if (selected._id !== oneDate._id) {\n      newDates.push({ ...selected, percent: -1 })\n    }\n    setDates(newDates)\n    setSelected({ _id: '', percent: '' })\n    setHasChanged(true)\n  }\n\n  const handleDeleteOne = (id) => {\n    const newDates = dates.filter(item => item._id !== id)\n    setDates(newDates)\n    setHasChanged(true)\n  }\n\n  const handleUpdateTable = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { dates: dates },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          const newLists = lists\n          newLists.unshift({\n            _id: { $oid: new Date().getTime() },\n            list_name: res.data.new_list\n          })\n          setLists(newLists)\n          const newDates = dates\n            .filter(item => item.percent !== -1)\n            .sort((a, b) => a._id > b._id ? -1 : (a._id < b._id ? 1 : 0))\n          setDates(newDates)\n          handleMessage(res.data.msg, 'success')\n          setHasChanged(false)\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Paper elevation={5} sx={{ borderRadius: 1 }}>\n      <Box borderRadius={3} p={2}\n        sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n      >\n        <Grid container spacing={1} align='center' pr={2}\n          alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '65vh', overflow: 'auto' }}\n        >\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' width='50%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Date (y/m/d)\n                </TableCell>\n                <TableCell align='center' width='30%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Percentage\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Edit\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Drop\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                dates?.map(date => {\n                  const dis = (\n                    selected._id === oneDate._id &&\n                    selected.percent.toString() ===\n                    oneDate.percent.toString()\n                  )\n                  const component = (selected._id === date._id\n                    ?\n                    <TableRow key={date._id} hover selected>\n                      <TableCell>\n                        {<TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' }\n                          }}\n                          name='_id'\n                          value={oneDate._id}\n                          onChange={handleChangeSelected}\n                        />}\n                      </TableCell>\n                      <TableCell>\n                        <TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' },\n                            min: 0\n                          }}\n                          type='number'\n                          name='percent'\n                          value={oneDate.percent}\n                          onChange={handleChangeSelected}\n                        />\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='success'\n                          disabled={dis}\n                          onClick={handleUpdateOne}\n                        >\n                          <Done />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='info'\n                          onClick={() =>\n                            setSelected({ _id: '', percent: '' })\n                          }\n                        >\n                          <Cancel />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                    :\n                    <TableRow key={date._id} hover>\n                      <TableCell align='center'>\n                        {date._id}\n                      </TableCell>\n                      <TableCell align='center'>\n                        {date.percent}\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='warning'\n                          onClick={() => {\n                            setOneDate({\n                              _id: date._id, percent: date.percent\n                            })\n                            setSelected({\n                              _id: date._id, percent: date.percent\n                            })\n                          }}\n                        >\n                          <Edit />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <RDialog title='Delete Data?'\n                          message='Confirm delete Data Percentage?'\n                          confirmText='Delete'\n                          action={() => handleDeleteOne(date._id)}\n                        >\n                          <IconButton size='small' color='error'>\n                            <Delete />\n                          </IconButton>\n                        </RDialog>\n                      </TableCell>\n                    </TableRow>\n                  )\n                  return component\n                })\n              }\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid container spacing={2} py={2}>\n          <Grid item xs={6} md={9}></Grid>\n          <Grid item xs={6} md={3}>\n            <RDialog title='Update Table' message='Confirm Update Table?'\n              confirmText='UPDATE' action={handleUpdateTable} color='warning'\n              disabled={!hasChanged}\n            >\n              <Button fullWidth variant='contained' color='error'\n                disabled={!hasChanged}\n              >\n                Update Table\n              </Button>\n            </RDialog>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Items","import { useEffect, useState, useContext } from 'react'\nimport { Grid, Typography, Snackbar, Alert } from '@mui/material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport NewItem from './NewItem'\nimport Lists from './Lists'\nimport Items from './Items'\n\n\nconst CalculatorSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const [dates, setDates] = useState([])\n  const [lists, setLists] = useState([])\n  const [hasChanged, setHasChanged] = useState(false)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n          setLists(res.data.lists)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  return (\n    <>\n      {user?.is_admin ?\n        <>\n          <Grid item xs={12} md={6}>\n\n            <NewItem\n              dates={dates}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n            <Lists\n              lists={lists}\n              setLists={setLists}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n            <Items\n              dates={dates}\n              setDates={setDates}\n              lists={lists}\n              setLists={setLists}\n              hasChanged={hasChanged}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n\n        </>\n        :\n        <Grid item>\n          <Typography variant='h3' color='error'>\n            ⛔ This section is for admins only\n          </Typography>\n        </Grid>\n      }\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default CalculatorSettings;","import { useState, useContext } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControlLabel, Snackbar, Alert\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport { UserContext } from '../../tools/contexts'\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxiosEffect, useAxios } from '../../tools/axiosTool'\n\nconst ExpressionsSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const initialExpression = {\n    id: '',\n    is_system: false,\n    identifier: '',\n    pattern: '',\n    replacement: ''\n  }\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n  const [expression, setExpression] = useState(initialExpression)\n  const [edit, setEdit] = useState(false)\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  const handleChangeExpression = (e) => {\n    const { name, value, checked } = e.target\n    setExpression({\n      ...expression,\n      [name]: name !== 'is_system' ? value : checked\n    })\n  }\n\n  const handleClickExpression = (exp) => {\n    setExpression(exp)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setExpression(initialExpression)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n      if (d.msg) {\n        handleMessage(d.msg, 'success')\n      }\n      setExpression(initialExpression)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  useAxiosEffect(\n    '/answers/get-expressions', 'answers',\n    ...queryHandlers\n  )\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-expression', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={7}>\n          <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n            border={2} p={2} borderRadius={1} borderColor='info.main'\n          >\n            <Grid container spacing={1} align='center' pr={2}>\n              <Grid item xs={12} md={8}>\n                <TextField size='small' label='Identifier' color='warning'\n                  fullWidth name='identifier'\n                  value={expression.identifier}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n\n              {user?.is_admin && !edit &&\n                <Grid item xs={12} md={3}>\n                  <FormControlLabel control={\n                    <Switch\n                      name='is_system'\n                      checked={expression.is_system}\n                      onChange={handleChangeExpression}\n                    />\n                  }\n                    label='System'\n                  />\n                </Grid>\n              }\n              <Grid item xs={12} md={11}>\n                <TextField size='small' label='Pattern' color='warning'\n                  fullWidth name='pattern'\n                  value={expression.pattern} onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={11}>\n                <TextField label='Replacement' color='warning'\n                  fullWidth multiline rows={4} name='replacement'\n                  value={expression.replacement}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={1}>\n                <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                  confirmText={edit ? 'Update' : 'Create'} message={\n                    edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                  } action={edit ? () => handleUpdateAnswer({\n                    expression: {\n                      ...expression, id: expression._id.$oid\n                    }\n                  }) : () => handleCreateAnswer({\n                    expression: expression\n                  })} color={edit ? 'warning' : 'success'}\n                >\n                  <IconButton color={edit ? 'primary' : 'success'}\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Save />\n                  </IconButton>\n                </RDialog>\n                <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                  confirmText='Delete' action={() => handleDeleteAnswer({\n                    expression: {\n                      id: expression._id.$oid\n                    }\n                  })}\n                >\n                  <IconButton color='error'\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Delete />\n                  </IconButton>\n                </RDialog>\n                <IconButton color='warning'\n                  disabled={!Boolean(expression.identifier)}\n                  onClick={handleCancel}\n                >\n                  <Cancel />\n                </IconButton>\n              </Grid>\n              {user?.is_admin &&\n                <Grid item xs={12} md={6}>\n                  <Typography variant='h6'>\n                    System\n                  </Typography>\n                  <Stack spacing={1} p={1}\n                    sx={{\n                      paddingBlockEnd: 2, height: '38vh', overflow: 'auto'\n                    }}\n                  >\n                    {sysRegex.map((exp) => {\n                      return (\n                        <Button key={exp._id.$oid} fullWidth variant='contained'\n                          color='error'\n                          onClick={() => handleClickExpression(exp)}\n                        >\n                          {exp.identifier}\n                        </Button>\n                      )\n                    })}\n                  </Stack>\n                </Grid>\n              }\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Own\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '38vh', overflow: 'auto' }}\n                >\n                  {ownRegex.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        color='primary'\n                        onClick={() => handleClickExpression(ans)}\n                      >\n                        {ans.identifier}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default ExpressionsSettings","import { useContext, useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport axios from 'axios'\nimport {\n  Typography, Button, Grid, TextField, Container, Alert, Fade\n} from '@mui/material'\n\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst UserLogin = () => {\n\n  const [uName, setUName] = useState('')\n  const [uPass, setUPass] = useState('')\n  const [loginState, setLoginState] = useState('')\n\n  const { user, setUser } = useContext(UserContext)\n  const { setUserSettings } = useContext(UserSettingsContext)\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  useEffect(() => {\n    if (user) {\n      navigate(\n        location.pathname === '/login' ? '/news' : location.pathname,\n        { replace: true }\n      )\n    }\n  })\n\n  const handleUName = e => {\n    setUName(e.target.value)\n  }\n\n  const handleUPass = e => {\n    setUPass(e.target.value)\n  }\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    const path = location.pathname === '/login' ? '/news' : location.pathname\n\n    try {\n      let res = await axios.post(\n        api_url + '/users/signin',\n        {\n          'username': uName,\n          'password': uPass\n        }\n      )\n      if (res.data['user']) {\n        setUser({ ...res.data.user, username: uName })\n        setUserSettings({ ...res.data.settings })\n      } else {\n        setUName('')\n        setUPass('')\n        setLoginState(res.data['msg'])\n        setTimeout(() => {\n          setLoginState('')\n        }, 2500);\n      }\n      // console.log(res.data['user'])\n    }\n    catch (error) {\n      console.log(error)\n    }\n    navigate(path, { replace: true })\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3} margin={0} >\n        <Grid item xs={12}>\n          <Typography variant='h3' color='primary'>User Login</Typography>\n        </Grid>\n        <Grid item >\n          <Fade in={Boolean(loginState)} timeout={1000}>\n            <Alert severity='warning' variant='outlined'>\n              {loginState}\n            </Alert>\n          </Fade>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uName'\n            label='Username'\n            value={uName}\n            onChange={handleUName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uPass'\n            label='Password'\n            type='password'\n            value={uPass}\n            onChange={handleUPass}\n            onKeyPress={\n              e => { if (e.key === 'Enter') { handleLogin(e) } }\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='contained' color='primary' onClick={handleLogin}>\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default UserLogin;","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel,\n  Fade, Alert\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst UpdateUserForm = (props) => {\n\n  const { user, setUser, ...others } = props\n\n  const initialUser = {\n    username: '',\n    email: '',\n    password: '',\n    new_password: '',\n    confirm_new_password: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n  const [userData, setUserData] = useState(initialUser)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-user-data',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUserData({\n            ...res.data,\n            password: '',\n            new_password: '',\n            confirm_new_password: ''\n          })\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleChangeUser = (e) => {\n    const { name, value, checked } = e.target\n    setUserData({\n      ...userData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [samePassword, setSamePassword] = useState(true)\n  const handleSamePassword = (e) => {\n    const { name, value } = e.target\n    if (name === 'new_password') {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['confirm_new_password'] === value\n      )\n    } else {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['new_password'] === value\n      )\n    }\n  }\n\n  const [updateState, setUpdateState] = useState({ msg: '', vnt: 'info' })\n  const handleUpdateUser = () => {\n    if (!samePassword) {\n      setUpdateState({ msg: \"new password doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUpdateState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-user',\n          userData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUpdateState({ msg: res.data['msg'], vnt: 'success' })\n          const resultUser = {\n            ...user,\n            username: userData['username'],\n            first_name: userData['first_name'],\n            last_name: userData['last_name'],\n            is_admin: userData['is_admin']\n          }\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'success' })\n          }, 2500)\n          if (res.data['wrn']) {\n            setTimeout(() => {\n              setUpdateState({ msg: res.data['wrn'], vnt: 'warning' })\n            }, 2600)\n            setTimeout(() => {\n              setUpdateState({ msg: '', vnt: 'warning' })\n              setUser(resultUser)\n            }, 5100)\n          } else {\n            setUser(resultUser)\n          }\n        } else {\n          setUpdateState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSamePassword(true)\n    }, 500);\n  }\n\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update My User Account\n              </Typography>\n            </Grid>\n            <Grid item xs={12} mx={1}>\n              <Typography variant='h6' color='GrayText'>\n                {userData['email']}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={userData['username']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            {user['is_admin'] &&\n              <Grid item mb={0}>\n                <FormControlLabel control={\n                  <Switch\n                    name='is_admin'\n                    checked={userData['is_admin']}\n                    onChange={handleChangeUser}\n                  />\n                }\n                  label='Is Admin'\n                />\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='First Name'\n                value={userData['first_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={userData['last_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <Paper elevation={1} sx={{\n                background: 'darkGray2',\n                display: 'inline-block'\n              }}>\n                <Grid item pb={2}>\n                  <TextField size='small' error={!samePassword}\n                    name='new_password'\n                    label='New Password'\n                    type='password'\n                    value={userData['new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField size='small' error={!samePassword}\n                    name='confirm_new_password'\n                    label='Confirm New Password'\n                    type='password'\n                    value={userData['confirm_new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n              </Paper>\n              <Grid container columns={2} pt={2}>\n                <Grid item pb={2}>\n                  <TextField size='small' color='warning'\n                    focused\n                    name='password'\n                    label='Password'\n                    type='password'\n                    value={userData['password']}\n                    onChange={handleChangeUser}\n                    onKeyPress={\n                      e => {if (e.key === 'Enter') {handleUpdateUser()}}\n                    }\n                  />\n                </Grid>\n                <RDialog\n                  title='Update User' message='Confirm user update?'\n                  confirmText='UPDATE' color='secondary'\n                  action={handleUpdateUser}\n                >\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"warning\">\n                      UPDATE\n                    </Button>\n                  </Grid>\n                </RDialog>\n              </Grid>\n              <Grid item pb={2}>\n                <Fade in={Boolean(updateState['msg'])} timeout={1000}>\n                  <Alert severity={updateState['vnt']} variant='outlined'>\n                    {updateState['msg']}\n                  </Alert>\n                </Fade>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n    </Fragment >\n  )\n}\n\nexport default UpdateUserForm","import { Fragment, useState, useContext } from 'react'\nimport {\n  Grid, Typography, Paper, Button, Switch, FormControlLabel, FormControl,\n  Select, MenuItem, Snackbar, Alert, TextField\n} from '@mui/material'\n\nimport { UserSettingsContext } from '../tools/contexts'\nimport RDialog from '../tools/ReusableDialog'\nimport { useAxios } from '../tools/axiosTool'\n\n\nconst UserOptions = (props) => {\n\n  const { userSettings, setUserSettings } = useContext(UserSettingsContext)\n  const [settings, setSettings] = useState(userSettings)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const handleChangeSettings = (e) => {\n    const { name, value, checked } = e.target\n    setSettings({\n      ...settings,\n      [name]: name !== 'calculator' ? value : checked\n    })\n  }\n\n  const handleSaveSettings = useAxios(\n    'put', '/users/update-user-settings', 'settings',\n    (d) => {\n      setUserSettings(d.settings)\n      handleMessage(d.msg, 'success')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  return (\n    <Fragment {...props}>\n      <Grid item xs={12} mt={2}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"primary\">\n                User Settings\n              </Typography>\n            </Grid>\n            <Grid item xs={11}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='theme_mode'\n                  value={settings.theme_mode}\n                  onChange={handleChangeSettings}\n                >\n                  <MenuItem value='dark'> DARK THEME </MenuItem>\n                  <MenuItem value='light'> LIGHT THEME</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel control={\n                <Switch\n                  name='calculator'\n                  checked={settings.calculator}\n                  onChange={handleChangeSettings}\n                />\n              }\n                label='Basic Calculator for Default'\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Posts Font Family'\n                name='postsFontFamily'\n                value={settings.postsFontFamily}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Notification Volume'\n                type='range'\n                inputProps={{ min: 0, max: 1, step: 0.1}}\n                name='notifVol'\n                value={settings.notifVol}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={12} px={2} pb={2}>\n              <RDialog\n                title='Save User Settings' confirmText='UPDATE'\n                message='Confirm Save user settings?' color='warning'\n                action={() => handleSaveSettings({\n                  settings: {\n                    theme_mode: settings.theme_mode,\n                    calculator: settings.calculator,\n                    postsFontFamily: settings.postsFontFamily,\n                    notifVol: parseFloat(settings.notifVol)\n                  }\n                })}\n              >\n                <Button variant=\"contained\" color=\"warning\">\n                  CONFIGURE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Fragment >\n  )\n}\n\nexport default UserOptions\n","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, ListItem, ListItemButton, IconButton, ListItemText,\n  Fade, Alert\n} from '@mui/material'\nimport { Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst OtherUsersList = (props) => {\n\n  const { \n    user, setEdit, usersSate, setUsersState,\n    initialOtherUser, setOtherUserData, ...others \n  } = props\n  const [usersData, setUsersData] = useState([])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-users',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUsersData(res.data)\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user, usersSate])\n\n  const handleEditUser = (user) => {\n    setOtherUserData({ ...user })\n    setEdit(true)\n  }\n\n  const handleDeleteUser = (email) => {\n    (async () => {\n      try {\n        const res = await axios.delete(\n          api_url + '/users/delete-other-user',\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            },\n            data: { email: email }\n          }\n          )\n          if (res.data['msg']) {\n            setUsersState({ msg: res.data['msg'], vnt: 'info' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'info' })\n            }, 2500)\n          } else {\n            setUsersState({ msg: res.data['err'], vnt: 'error' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'error' })\n            }, 2500)\n          }\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n      setEdit(false)\n      setOtherUserData(initialOtherUser)\n    }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                List of Active Users\n              </Typography>\n            </Grid>\n            {usersData.map((otherUser) => {\n              return (\n                <ListItem key={otherUser['username']} secondaryAction={\n                  <RDialog title='Delete' message='Confirm user Delete?'\n                    confirmText='DELETE' action={() => \n                      handleDeleteUser(otherUser['email'])\n                    }\n                  >\n                    <IconButton edge='end'>\n                      <Delete fontSize='large' color='error' />\n                    </IconButton>\n                  </RDialog>\n                }>\n                  <ListItemButton onClick={() => { handleEditUser(otherUser) }}>\n                    <ListItemText\n                      primary={[\n                        `${otherUser['username']} -`,\n                        otherUser['first_name'],\n                        otherUser['last_name']\n                      ].join(' ')}\n                      secondary={otherUser['email']}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              )\n            })}\n          </Grid>\n        </Paper>\n          <Grid item pt={3}>\n            <Fade in={Boolean(usersSate['msg'])} timeout={1000}>\n              <Alert severity={usersSate['vnt']} variant='outlined'>\n                {usersSate['msg']}\n              </Alert>\n            </Fade>\n          </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default OtherUsersList","import { Fragment, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst CreateUpdateOtherUser = (props) => {\n\n  const {\n    user, edit, setEdit, setUsersState, initialOtherUser,\n    otherUserData, setOtherUserData, ...others\n  } = props\n\n  const handleChangeOtherUser = (e) => {\n    const { name, value, checked } = e.target\n    setOtherUserData({\n      ...otherUserData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [sameEmail, setSameEmail] = useState(true)\n  const handleSameEmail = (e) => {\n    const { name, value } = e.target\n    if (name === 'email') {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['confirm_email'] === value\n      )\n    } else {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['email'] === value\n      )\n    }\n  }\n\n  const handleCreateOtherUser = () => {\n    for (let [field, value] of Object.entries(otherUserData)) {\n      if (value === '') {\n        setUsersState({ msg: `Missing Value ${field}`, vnt: 'error' })\n        setTimeout(() => {\n          setUsersState({ msg: '', vnt: 'error' })\n        }, 2500);\n        return\n      }\n    }\n    if (!sameEmail) {\n      setUsersState({ msg: \"Email doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUsersState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/signup',\n          otherUserData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setOtherUserData(initialOtherUser)\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSameEmail(true)\n    }, 500);\n  }\n\n  const handleUpdateOtherUser = () => {\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-other-user',\n          (({ email, username, first_name, last_name, is_admin }) => (\n            { email, username, first_name, last_name, is_admin }\n          ))(otherUserData),\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n  }\n\n  const handleCancelEditUser = () => {\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n    setSameEmail(true)\n  }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update/Create User Account\n              </Typography>\n            </Grid>\n            {!edit ? <>\n              <Grid item>\n                <Paper elevation={1} sx={{\n                  background: 'darkGray2',\n                  display: 'inline-block'\n                }}>\n                  <Grid item pb={2}>\n                    <TextField size='small' error={!sameEmail}\n                      name='email'\n                      label='Email (ID - immutable)'\n                      value={otherUserData['email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField size='small' error={!sameEmail}\n                      name='confirm_email'\n                      label='Confirm Email'\n                      value={otherUserData['confirm_email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                </Paper>\n              </Grid>\n            </> :\n              <Grid item xs={12} mx={1}>\n                <Typography variant='h6' color='GrayText'>\n                  {otherUserData['email']}\n                </Typography>\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={otherUserData['username']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item mb={0}>\n              <FormControlLabel control={\n                <Switch\n                  name='is_admin'\n                  checked={otherUserData['is_admin']}\n                  onChange={handleChangeOtherUser}\n                />\n              }\n                label='Is Admin'\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='Fisrs Name'\n                value={otherUserData['first_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={otherUserData['last_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <Grid container columns={2} sx={{ alignItems: 'flex-end' }}>\n                {edit ? <>\n                  <Grid item pl={2} pb={2}>\n                    <Button variant=\"contained\" color=\"error\"\n                      onClick={handleCancelEditUser}\n                    >\n                      CANCEL\n                    </Button>\n                  </Grid>\n                  <RDialog title='Update Other User'\n                    message='Confirm user update?' color='secondary'\n                    confirmText='UPDATE' action={handleUpdateOtherUser}\n                  >\n                    <Grid item pl={2} pb={2}>\n                      <Button variant=\"contained\" color=\"warning\">\n                        UPDATE\n                      </Button>\n                    </Grid>\n                  </RDialog>\n                </> : <>\n                  <Grid item pb={2}>\n                    <Paper elevation={1} sx={{\n                      maxWidth: '230px',\n                      background: 'darkGray2',\n                      display: 'inline-block'\n                    }}>\n                      <Grid item p={2}>\n                        <Typography variant=\"body1\"\n                          color=\"warning.main\"\n                        >\n                          By default the password will be \"abc123\"\n                          the user must change it later\n                        </Typography>\n                      </Grid>\n                    </Paper>\n                  </Grid>\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"success\"\n                      onClick={handleCreateOtherUser}\n                    >\n                      CREATE\n                    </Button>\n                  </Grid>\n                </>}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default CreateUpdateOtherUser","import { useContext, useState } from 'react'\nimport {\n  Container, Grid, Typography,\n} from '@mui/material'\n\nimport { UserContext } from '../tools/contexts'\nimport UpdateUserForm from './UpdateUserFrom'\nimport UserOptions from './UserOptions'\nimport OtherUsersList from './OtherUsersList'\nimport CreateUpdateOtherUser from './CreateUpdateOtherUser'\n\n\nconst UserAccount = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  const initialOtherUser = {\n    username: '',\n    email: '',\n    confirm_email: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n\n  const [edit, setEdit] = useState(false)\n  const [otherUserData, setOtherUserData] = useState(initialOtherUser)\n  const [usersSate, setUsersState] = useState({ msg: '', vnt: 'success' })\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" color=\"secondary\">User Account</Typography>\n      </Grid>\n      <Grid container spacing={2}>\n\n        <Grid item xs={12} md={4}>\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n\n          <UserOptions />\n        </Grid>\n\n        {user.is_admin && <>\n          <OtherUsersList\n            user={user}\n            setEdit={setEdit}\n            usersSate={usersSate}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            setOtherUserData={setOtherUserData}\n          />\n\n          <CreateUpdateOtherUser\n            user={user}\n            edit={edit}\n            setEdit={setEdit}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            otherUserData={otherUserData}\n            setOtherUserData={setOtherUserData}\n          />\n        </>}\n\n      </Grid>\n    </Container >\n  )\n}\n\nexport default UserAccount;","import { useContext, useEffect, useMemo } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { cyan, deepOrange, deepPurple } from \"@mui/material/colors\"\nimport { Paper, CssBaseline } from \"@mui/material\"\n\nimport Navbar from './NavBar'\nimport AuthenticatedContent from './AuthenticatedContent'\nimport { routes, sub_routes } from './tools/routes'\n\nimport News from './_news/News'\nimport Calculators from './_calculator/Calculators'\nimport Answers from './_answers/Answers'\nimport Settings from './_settings/Settings'\nimport AnswersSettings from './_settings/answers/AnswersSettings'\nimport CalculatorSettings from './_settings/calculator/CalculatorSettings'\nimport ExpressionsSettings from './_settings/expressions/ExpressionsSettings'\nimport UserLogin from './_user/UserLogin'\nimport UserAccount from './_user/UserAccount'\n\nimport { UserContext, AuthContext, UserSettingsContext } from './tools/contexts'\n\nconst App = () => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { userSettings } = useContext(UserSettingsContext)\n\n  const theme = useMemo(() =>\n    userSettings.theme_mode !== 'light' ?\n      createTheme({\n        palette: {\n          mode: 'dark',\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple\n        }\n      })\n      :\n      createTheme({\n        palette: {\n          mode: userSettings.theme_mode,\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple,\n          background: {\n            paper: '#eaeaea',\n            default: '#fafafa'\n          }\n        }\n      })\n    , [userSettings.theme_mode]\n  )\n\n  useEffect(() => {\n    if (user?.token) {\n      setAuth(true)\n    }\n  }, [user, setAuth])\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme>\n        <Paper sx={{ paddingBlockEnd: 2, minHeight: '100vh' }} square>\n          <Navbar />\n          {(auth ?\n            <AuthenticatedContent\n              setAuth={setAuth} user={user} setUser={setUser}\n            >\n              <Routes>\n                <Route path={'/'} element={<Navigate to={routes[0]} />} />\n                <Route path={routes[0]} element={<News />} />\n                <Route path={routes[1]} element={<Calculators />} />\n                <Route path={routes[2]} element={<Answers />} />\n                <Route path={routes[3]} element={<Settings />} >\n                  <Route\n                    path={sub_routes[0]} element={<AnswersSettings />} />\n                  <Route\n                    path={sub_routes[1]} element={<CalculatorSettings />} />\n                  <Route\n                    path={sub_routes[2]} element={<ExpressionsSettings />} />\n                </Route>\n                <Route path={'login'} element={<UserLogin />} />\n                <Route path={'account'} element={<UserAccount />} />\n              </Routes>\n            </AuthenticatedContent>\n            :\n            <UserLogin />\n          )}\n        </Paper>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalContext from './components/tools/contexts'\n\nimport App from './components/App';\n\nReactDOM.render(\n    <>\n      <BrowserRouter>\n        <GlobalContext>\n          <App />\n        </GlobalContext>\n      </BrowserRouter>\n    </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}