{"version":3,"sources":["components/_news/markdownStyle.module.css","components/tools/useUser.js","components/tools/useSettings.js","components/tools/contexts.jsx","components/tools/routes.js","components/MenuTab.jsx","components/tools/ReusableDialog.jsx","components/AvatarMenu.jsx","components/NavMenu.jsx","components/NavBar.jsx","components/tools/beep.mp3","components/AuthenticatedContent.jsx","components/tools/axiosTool.js","components/tools/daysAgo.js","components/_news/Posts.jsx","components/_news/PostSelect.jsx","components/_news/FullPanel.jsx","components/_news/Filter.jsx","components/_news/CreatePost.jsx","components/_news/News.jsx","components/_calculator/Complete.jsx","components/_calculator/Basic.jsx","components/_calculator/CalcHistory.jsx","components/_calculator/Calculators.jsx","components/tools/strFormat.js","components/_answers/CreditCards.jsx","components/_answers/AnswerButtons.jsx","components/_answers/Answers.jsx","components/_settings/Settings.jsx","components/_settings/answers/EditCreditCards.jsx","components/_settings/answers/EditAnswers.jsx","components/_settings/answers/AnswersSettings.jsx","components/_settings/calculator/NewItem.jsx","components/_settings/calculator/Lists.jsx","components/_settings/calculator/Items.jsx","components/_settings/calculator/CalculatorSettings.jsx","components/_settings/expressions/ExpressionsSettings.jsx","components/_user/UserLogin.jsx","components/_user/UpdateUserFrom.jsx","components/_user/UserOptions.jsx","components/_user/OtherUsersList.jsx","components/_user/CreateUpdateOtherUser.jsx","components/_user/UserAccount.jsx","components/App.jsx","index.js"],"names":["module","exports","useUser","useState","userString","localStorage","getItem","JSON","parse","getUser","user","setUser","setItem","stringify","useSettings","defaultSettings","theme_mode","calculator","postsFontFamily","notifVol","settingsStr","getSettings","settings","setSettings","UserContext","createContext","AuthContext","auth","setAuth","PostContext","fetchedPosts","setFetchedPosts","UserSettingsContext","userSettings","setUserSettings","GlobalContext","children","userValue","useMemo","authValue","postsValue","userSettingsValue","Provider","value","routes","sub_routes","api_url","window","hostname","MenuTab","props","items","setTabValue","icon","label","disabled","others","navigate","useNavigate","anchorEl","setAnchorEl","open","Boolean","Tab","iconPosition","id","onClick","e","currentTarget","undefined","Menu","onClose","TransitionComponent","Fade","map","item","MenuItem","sub_route","RDialog","title","message","confirmText","color","action","setOpen","justClose","divProps","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","error","console","autoFocus","stringAvatar","first_name","last_name","join","toUpperCase","AvatarMenu","useContext","location","useLocation","bg","pathname","split","openMenu","IconButton","variant","Avatar","sx","bgcolor","Typography","marginX","mb","email","Divider","ListItemIcon","Person","removeItem","Logout","NavMenu","Newspaper","key","route","Calculate","ViewList","Settings","is_admin","push","display","xs","sm","textAlign","ArrowForwardIos","Navbar","tabValue","count","setCount","path","includes","newPosts","length","AppBar","position","Toolbar","justifyContent","Tabs","visibility","indicatorColor","onChange","_","newValue","Badge","badgeContent","anchorOrigin","vertical","horizontal","component","Link","to","AuthenticatedContent","timeStamp","setTimeStamp","soundOptions","volume","parseFloat","useSound","beep","playBeep","useEffect","source","axios","CancelToken","checkForNewPosts","a","post","last_post","cancelToken","token","headers","Accept","Authorization","res","data","posts","warn","errCode","response","status","watcher","setInterval","clearInterval","cancel","refreshing","get","timer","refresh","nd","Date","diff","getFullYear","getMonth","getDate","log","setTimeout","clearTimeout","useAxios","method","uri","expected","suc","wrn","err","TCErr","put","delete","useAxiosEffect","daysAgo","today","date","delta","toFixed","PostPreview","post_props","newPost","newSeverity","Alarm","severity","Grid","Alert","style","fontFamily","fontSize","AlertTitle","className","mdStyle","remarkPlugins","remarkGfm","content","setDate","parseInt","days_offset","toLocaleDateString","Posts","filter","owner","setNewPost","contentFocus","handleMessage","stackRef","useRef","postToDelete","setPostToDelete","severity_filter","owner_filter","filteredPosts","_id","dividedPosts","getTime","last_day","forEach","$date","other_day","setHours","getHours","getTimezoneOffset","divider","md","Box","border","p","borderRadius","borderColor","height","Stack","spacing","pr","ref","paddingBlockEnd","overflow","element","Chip","canEdit","current","scrollTo","top","behavior","username","pub","is_public","PostSelect","options","option","setOption","FormControl","fullWidth","Select","size","target","op","FullPanel","setSeverity","setOwner","setNewSeverity","setTo","contentRef","handleChange","handleSend","send_props","Paper","elevation","container","align","alignItems","TextField","name","inputRef","rows","multiline","type","inputProps","min","max","step","endIcon","Send","Filter","CreatePost","News","msg","vnt","setMessage","focus","getSeverity","getPublic","sender","d","creation","localeTimeOffset","Container","maxWidth","margin","pt","Snackbar","autoHideDuration","Complete","history","setHistory","first","second","third","fields","setFields","sign","setSign","operation","setOperation","expression","setExpression","firstRef","secondRef","expRef","handleQuery","url","to_set","Object","entries","field","calculation","footnote","result","navigator","clipboard","writeText","handleGetFirst","dataset","handleGetSecond","handleGetThird","handleEvaluate","handleEnterOnFields","minHeight","onKeyPress","width","RadioGroup","px","FormControlLabel","control","Radio","InputProps","startAdornment","InputAdornment","endAdornment","LooksOne","LooksTwo","Looks3","py","InputLabelProps","Basic","price","str_date","handleGetPrice","reverse","CalcHistory","registries","dividedRegistries","reg","backgroundColor","alignContent","tColor","Tooltip","placement","disableInteractive","arrow","followCursor","whiteSpace","Calculator","openSB","setOpenSB","basic","setBasic","labelPlacement","Switch","checked","strFormat","str","regexs","args","mut_str","pattern","replacement","replace","RegExp","match","index","CustomCell","TableCell","CreditCards","payMeths","sysRegex","priceRef","setPrice","paymentMethods","last_card","formatedPayMeths","meth","card_name","header","total","increase","monthly","installments","$oid","pos_code","description","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","colSpan","hover","handleCopy","ContentCopy","AnswerButtons","commonAnswers","ownAnswers","ownRegex","commonStackRef","ownStackRef","text","setText","answerList","reduce","resObj","curObj","handleClickAnswer","focused","readOnly","Cancel","ans","i","reference","enterDelay","background","Answers","setPayMeths","setCommonAnswers","setOwnAnswers","setSysRegex","setOwnRegex","answers","payment_methods","common_answers","own_answers","sys_regex","own_regex","EditCreditCards","initialValue","newCard","setNewCard","selected","setSelected","setMethod","handleChangeMethod","handleAddCard","handleAddMethod","handleUpdateCardName","handleUpdateMethod","handleDropCard","handleDropMethod","Add","new_name","Done","Edit","Delete","EditAnswers","colors","initialAnswer","common","order","answer","setAnswer","edit","setEdit","handleChangeAnswer","queryHandlers","handleCreateAnswer","handleUpdateAnswer","handleDeleteAnswer","hex","Save","AnswersSettings","NewItem","dates","setDates","setHasChanged","initialNewOne","percent","increaseAll","newOne","setNewOne","upAll","setUpAll","handleChangeNewOne","addSuccessiveIncreases","inc","b","newPercent","pb","Checkbox","newDate","newDates","startIcon","ArrowUpward","Lists","lists","setLists","selectedList","setSelectedList","fetchList","list_name","list","is_sel","file_name","fileToSave","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleDownloadList","Download","new_list","handleDropList","Items","hasChanged","oneDate","setOneDate","handleChangeSelected","handleUpdateOne","dis","toString","handleDeleteOne","newLists","unshift","sort","CalculatorSettings","ExpressionsSettings","initialExpression","is_system","identifier","handleChangeExpression","handleClickExpression","exp","UserLogin","uName","setUName","uPass","setUPass","loginState","setLoginState","handleLogin","preventDefault","in","timeout","UpdateUserForm","password","new_password","confirm_new_password","userData","setUserData","handleChangeUser","samePassword","setSamePassword","handleSamePassword","updateState","setUpdateState","handleUpdateUser","resultUser","mx","columns","UserOptions","handleChangeSettings","handleSaveSettings","OtherUsersList","usersSate","setUsersState","initialOtherUser","setOtherUserData","usersData","setUsersData","otherUser","ListItem","secondaryAction","edge","ListItemButton","handleEditUser","ListItemText","primary","secondary","CreateUpdateOtherUser","otherUserData","handleChangeOtherUser","sameEmail","setSameEmail","handleSameEmail","pl","UserAccount","confirm_email","displayAdmin","displayNoAdmin","mt","App","theme","paperLightBG","lightBG","createTheme","palette","mode","cyan","deepOrange","info","deepPurple","typography","globalFontSize","ThemeProvider","CssBaseline","enableColorScheme","square","Calculators","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d2bc8dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdStyle\":\"markdownStyle_mdStyle__38Iau\"};","import { useState } from 'react';\n\nconst useUser = () => {\n  \n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const userObj = JSON.parse(userString);\n    return userObj\n  };\n\n  const [user, setUser] = useState(getUser());\n\n  const saveUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  };\n\n  return [\n    user,\n    saveUser\n  ]\n}\n\nexport default useUser;","import { useState } from 'react';\n\nconst useSettings = () => {\n\n  const defaultSettings = {\n    theme_mode: 'dark',\n    calculator: true,\n    postsFontFamily: 'Helvetica',\n    notifVol: 0.1\n  }\n  \n  const getSettings = () => {\n    const settingsStr = localStorage.getItem('settings');\n    const settingsObj = {...defaultSettings, ...JSON.parse(settingsStr)};\n    return settingsObj\n  };\n\n  const [settings, setSettings] = useState(getSettings());\n\n  const saveSettings = settings => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    setSettings(settings);\n  };\n\n  return [\n    settings,\n    saveSettings\n  ]\n}\n\nexport default useSettings;","import { useMemo, createContext, useState } from \"react\"\nimport useUser from './useUser'\nimport useSettings from \"./useSettings\"\n\n// 1. Create and export contexts\nexport const UserContext = createContext(\n  { user: '', setUser: () => { } })\nexport const AuthContext = createContext(\n  { auth: '', setAuth: () => { } })\nexport const PostContext = createContext(\n  { fetchedPosts: [], setFetchedPosts: () => { } })\nexport const UserSettingsContext = createContext(\n  { userSettings: '', setUserSettings: () => { } })\n// -----------------------------\n\nconst GlobalContext = ({ children }) => {\n\n  // 2. Packing the value and setter function\n  const [user, setUser] = useUser()\n  const userValue = useMemo(\n    () => ({ user, setUser }),\n    [user, setUser]\n  )\n  const [auth, setAuth] = useState(false)\n  const authValue = useMemo(\n    () => ({ auth, setAuth }),\n    [auth, setAuth]\n  )\n  const [fetchedPosts, setFetchedPosts] = useState([])\n  const postsValue = useMemo(\n    () => ({ fetchedPosts, setFetchedPosts }),\n    [fetchedPosts, setFetchedPosts]\n  )\n  const [userSettings, setUserSettings] = useSettings()\n  const userSettingsValue = useMemo(\n    () => ({ userSettings, setUserSettings }),\n    [userSettings, setUserSettings]\n  )\n  // ----------------------------------------\n\n  return (\n\n    // 3. Provide the contexts\n    <UserContext.Provider value={userValue}>\n      <AuthContext.Provider value={authValue}>\n        <PostContext.Provider value={postsValue}>\n          <UserSettingsContext.Provider value={userSettingsValue}>\n            {children}\n          </UserSettingsContext.Provider>\n        </PostContext.Provider>\n      </AuthContext.Provider>\n    </UserContext.Provider>\n    // -----------------------\n  )\n}\n\nexport default GlobalContext","// Do not change the order of \"routes\" and \"sub_routes\", \n// append new ones (to the tail) to make the app grow.\nexport const routes = [\n  '/news',\n  '/calculators',\n  '/answers',\n  '/settings',\n]\n\nexport const sub_routes = [\n  'answers',\n  'calculator',\n  'expressions'\n]\n\nconst host = {\n  development: 'http://localhost:5000/',\n  production: window.hostname\n}[process.env.NODE_ENV]\n\nconst api_root = '/api-v1'\n\nexport const api_url = host + api_root","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Tab, Menu, MenuItem, Fade } from '@mui/material'\n\nconst MenuTab = (props) => {\n\n  const { value, items, setTabValue, icon, label, disabled, ...others } = props\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (sub_route) => {\n    setAnchorEl(null)\n    navigate(`${value}/${sub_route}`)\n    setTabValue(value)\n  }\n\n  return (\n    <>\n      <Tab label={label} {...others}\n        icon={icon} iconPosition='start'\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined} disabled={disabled} />\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          return (\n            <MenuItem\n              onClick={() => { handleClose(item.sub_route) }} key={item.label}>\n              {item.label}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </>\n  )\n\n}\n\nexport default MenuTab;","import { useState } from 'react'\nimport {\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button\n} from '@mui/material'\n\nconst RDialog = (props) => {\n\n  const {\n    title = 'add <title> prop', message = 'add <message> prop',\n    confirmText = 'add <confirmText> prop', color = 'error', disabled = false,\n    action, children, ...others\n  } = props\n\n  const [open, setOpen] = useState(false)\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (e) => {\n    setOpen(false)\n    try {\n      action(e)\n    }\n    catch (error) {\n      console.error(`add <action> prop, or: ${error}`)\n    }\n  }\n\n  const justClose = () => {\n    setOpen(false)\n  }\n\n  const divProps = !disabled ? {\n    onClick: handleOpen\n  } : {}\n\n  return (\n    <>\n      <div {...divProps}>\n        {children}\n      </div>\n      <Dialog {...others}\n        open={open}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button onClick={handleClose} color={color} autoFocus>\n            {confirmText} </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default RDialog","import { useState, useContext } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Avatar, Menu, MenuItem, Typography, Divider, Fade, ListItemIcon\n} from '@mui/material'\nimport { PersonOff as AvIcon, Person, Logout } from '@mui/icons-material'\n\nimport { UserContext, AuthContext } from './tools/contexts'\nimport RDialog from './tools/ReusableDialog'\n\nconst stringAvatar = (user, auth) => {\n\n  if (user && auth) {\n    return [user.first_name[0], user.last_name[0]].join('').toUpperCase()\n  }\n  return <AvIcon />\n}\n\nconst AvatarMenu = props => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { setTabValue, disabled, ...others } = props\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  let bg = location.pathname.split('/')[1] === 'account' ?\n    'secondary.main' :\n    'primary.main'\n\n  if (disabled) { bg = 'default' }\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleOptions = () => {\n    setAnchorEl(null)\n    setTabValue(false)\n    navigate('/account')\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    setUser(null)\n    setAuth(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('settings')\n  }\n\n  return (\n    <>\n      <IconButton variant='outlined' {...others}\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={openMenu ? 'true' : undefined}\n        color='secondary'\n        disabled={disabled} >\n\n        <Avatar sx={{ bgcolor: bg }} children={stringAvatar(user, auth)} />\n\n      </IconButton>\n\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={justClose}\n        TransitionComponent={Fade} >\n        <Typography variant='overline' color='secondary' marginX={2} mb={1} >\n          {[user?.first_name, user?.last_name].join(' ')}\n        </Typography>\n        <Typography variant='subtitle1' color='GrayText' marginX={2} mb={1} >\n          {user?.email}\n        </Typography>\n        <Divider />\n        <MenuItem onClick={handleOptions}>\n          <ListItemIcon>\n            <Person />\n          </ListItemIcon>\n          Options\n        </MenuItem>\n        <RDialog\n          title='LOGOUT' message='Confirm logout?'\n          confirmText='Logout' action={handleLogout}\n        >\n          <MenuItem>\n            <ListItemIcon>\n              <Logout />\n            </ListItemIcon>\n            Logout\n          </MenuItem>\n        </RDialog>\n      </Menu>\n\n\n    </>\n  )\n}\n\nexport default AvatarMenu;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Menu, MenuItem, Fade, Divider, ListItemIcon\n} from '@mui/material'\nimport {\n  Newspaper, Calculate, ViewList, Settings, ArrowForwardIos\n} from '@mui/icons-material'\nimport { Menu as MI } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\n\n\nconst NavMenu = props => {\n\n  const { setTabValue, disabled, user, ...others } = props\n\n  const items = [\n    { label: 'DIVIDER', icon: Newspaper, key: 0 },\n    { label: 'News', route: routes[0] },\n    { label: 'DIVIDER', icon: Calculate, key: 1 },\n    { label: 'Calculators', route: `${routes[1]}` },\n    { label: 'DIVIDER', icon: ViewList, key: 2 },\n    { label: 'Answers', route: routes[2] },\n    { label: 'DIVIDER', icon: Settings, key: 3 },\n    { label: 'Answers Settings', route: `${routes[3]}/${sub_routes[0]}` }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', route: `${routes[3]}/${sub_routes[1]}` }\n    )\n  }\n  items.push(\n    { label: 'Expressions Settings', route: `${routes[3]}/${sub_routes[2]}` }\n  )\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (route) => {\n    setAnchorEl(null)\n    navigate(route)\n    setTabValue(`/${route.split('/')[1]}`)\n  }\n\n  return (\n    <>\n      <IconButton aria-label=\"Go to...\" onClick={handleClick} {...others}\n        sx={{ display: { xs: 'inline-flex', sm: 'none' } }}\n        disabled={disabled}\n      >\n        <MI />\n      </IconButton>\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          if (item.label === 'DIVIDER') {\n            return (\n              <Divider key={item.key} textAlign='right'>\n                {<item.icon />}\n              </Divider>\n            )\n          } else {\n            return (\n              <MenuItem\n                onClick={() => { handleClose(item.route) }} key={item.label}>\n                <ListItemIcon>\n                  <ArrowForwardIos />\n                </ListItemIcon>\n                {item.label}\n              </MenuItem>\n            )\n          }\n        })}\n      </Menu>\n    </>\n  )\n}\n\nexport default NavMenu;","import { useState, useContext, useMemo } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { AppBar, Toolbar, Tabs, Tab, Badge } from '@mui/material'\nimport { Newspaper, Calculate, ViewList, Settings } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\nimport { AuthContext, UserContext, PostContext } from './tools/contexts'\nimport MenuTab from './MenuTab'\nimport AvatarMenu from './AvatarMenu'\nimport NavMenu from './NavMenu'\n\n\n\nconst Navbar = () => {\n\n  const { auth } = useContext(AuthContext)\n  const { user } = useContext(UserContext)\n  const { fetchedPosts } = useContext(PostContext)\n  const disabled = !Boolean(auth)\n\n  const location = useLocation()\n\n  const [tabValue, setTabValue] = useState(false)\n  const [count, setCount] = useState(0)\n\n  useMemo(() => {\n    const path = `/${location.pathname.split('/')[1]}`\n    setTabValue(routes.includes(path) ? path : false)\n  }, [location])\n\n  const handleChange = (_, newValue) => {\n    switch (newValue) {\n      case routes[0]:\n      case routes[1]:\n      case routes[2]:\n        setTabValue(newValue)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const newPosts = useMemo(() => {\n\n    const length = fetchedPosts.length\n    if (tabValue === routes[0]) {\n      setCount(length)\n    }\n\n    const result = count === 0 ? '!' : length - count\n\n    return result\n  }, [fetchedPosts.length, count, tabValue])\n\n  const items = [\n    { label: 'Answers Settings', sub_route: sub_routes[0] }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', sub_route: sub_routes[1] }\n    )\n  }\n  items.push({ label: 'Expressions Settings', sub_route: sub_routes[2] })\n\n  return (\n    <>\n      <AppBar position='sticky' color='default'>\n        <Toolbar variant='dense' sx={{ justifyContent: 'space-between' }}>\n\n          <NavMenu setTabValue={setTabValue} disabled={disabled}\n            user={user}\n          />\n\n          <Tabs \n            sx={{visibility: { xs: 'hidden', sm: 'visible' } }}\n            indicatorColor='primary'\n            onChange={handleChange}\n            value={tabValue}\n          >\n\n            <Tab value={routes[0]} label='News'\n              icon={\n                <Badge color='error' badgeContent={newPosts}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                >\n                  <Newspaper />\n                </Badge>\n              } iconPosition='start'\n              component={Link} to={routes[0]} disabled={disabled} />\n\n            <Tab value={routes[1]} label='Calculators'\n              icon={<Calculate />} iconPosition='start'\n              component={Link} to={routes[1]} disabled={disabled} />\n\n            <Tab value={routes[2]} label='Answers'\n              icon={<ViewList />} iconPosition='start'\n              component={Link} to={routes[2]} disabled={disabled} />\n\n            <MenuTab value={routes[3]}\n              label='Settings' icon={<Settings />}\n              setTabValue={setTabValue} items={items} disabled={disabled} />\n\n          </Tabs>\n\n          <AvatarMenu setTabValue={setTabValue} disabled={disabled} />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/beep.6fea501e.mp3\";","import { useContext, useEffect, useState, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport useSound from 'use-sound'\n\nimport { api_url } from './tools/routes'\nimport { PostContext, UserSettingsContext } from './tools/contexts'\nimport beep from './tools/beep.mp3'\n\nconst AuthenticatedContent = (props) => {\n\n  const { children, setAuth, user, setUser } = props\n\n  const { fetchedPosts, setFetchedPosts } = useContext(PostContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [timeStamp, setTimeStamp] = useState(null)\n  const navigate = useNavigate()\n  const soundOptions = useMemo(() => {\n    return { volume: parseFloat(userSettings.notifVol) }\n  }, [userSettings])\n  const [playBeep] = useSound(beep, soundOptions)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const checkForNewPosts = async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/fetch-posts',\n          { last_post: timeStamp },\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['newest_post']) {\n          if (\n            timeStamp !== null && res.data.posts.length > fetchedPosts.length\n          ) {\n            playBeep()\n          }\n          setTimeStamp(res.data['newest_post'])\n          setFetchedPosts(res.data['posts'])\n        } else if (res.data['wrn']) {\n          console.warn(res.data['wrn'])\n        } else if (res.data['err']) {\n          setAuth(false)\n          console.error(res.data['err'])\n        }\n      }\n      catch (error) {\n        const errCode = error.response?.status\n        if (errCode === 422 || errCode === 401) {\n          navigate('/login')\n          setUser(null)\n          setAuth(false)\n          localStorage.removeItem('user')\n        }\n      }\n    }\n    if (user) {\n      checkForNewPosts()\n    }\n    const watcher = setInterval(() => {\n      if (user?.token) {\n        checkForNewPosts()\n      }\n    }, 3000)\n    return () => {\n      clearInterval(watcher)\n      source.cancel('Leaving News page or the data is already loaded')\n    }\n    // eslint-disable-next-line\n  }, [user, timeStamp, fetchedPosts.length])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const refreshing = setInterval(() => {\n      if (user?.token) {\n        (async () => {\n          try {\n            const res = await axios.get(\n              api_url + '/users/refresh-auth',\n              {\n                cancelToken: source.token,\n                headers: {\n                  Accept: '*/*',\n                  Authorization: `Bearer ${user.token}`\n                }\n              }\n            )\n            if (res.data['user']) {\n              setUser(res.data.user)\n            }\n          }\n          catch (error) {\n            console.error(error)\n          }\n        })()\n      }\n    }, 60 * 60 * 1000)\n    return () => {\n      clearInterval(refreshing)\n      source.cancel('Abort refresh token')\n    }\n  }, [user, setUser])\n\n  useEffect(() => {\n\n    let timer = null\n\n    const refresh = () => {\n      const nd = new Date()\n      let diff = new Date(\n        nd.getFullYear(), nd.getMonth(), nd.getDate(), 10, 30\n      ) - new Date()\n      if (diff < 0) {\n        diff = new Date(\n          nd.getFullYear(), nd.getMonth(), nd.getDate() + 1, 10, 30\n        ) - new Date()\n      }\n      setTimeStamp('')\n      console.log('what do we have for today?')\n\n      timer = setTimeout(refresh, diff)\n    }\n    refresh()\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [])\n\n  return children\n}\n\nexport default AuthenticatedContent","import { useContext, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { UserContext } from './contexts'\nimport { api_url } from './routes'\n\nexport const useAxios = (\n  method, uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  const headers = {\n    Accept: '*/*',\n    Authorization: `Bearer ${user?.token}`\n  }\n\n  return async (data) => {\n    try {\n      let res\n      switch (method) {\n        default:\n          res = await axios.get(\n            api_url + uri, { headers: headers }\n          )\n          break\n        case 'post':\n          res = await axios.post(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'put':\n          res = await axios.put(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'delete':\n          res = await axios.delete(\n            api_url + uri, { headers: headers, data: data }\n          )\n          break\n      }\n      if (res.data[expected]) {\n        suc(res.data)\n      }\n      if (res.data['wrn']) {\n        wrn(res.data)\n      }\n      if (res.data['err']) {\n        err(res.data)\n      }\n    }\n    catch (error) {\n      TCErr(error)\n    }\n  }\n}\n\nexport const useAxiosEffect = (\n  uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    const headers = {\n      Accept: '*/*',\n      Authorization: `Bearer ${user?.token}`\n    }\n    const source = axios.CancelToken.source();\n    (async () => {\n      try {\n        const res = await axios.get(\n          api_url + uri, { cancelToken: source.token, headers: headers }\n        )\n        if (res.data[expected]) {\n          suc(res.data)\n        }\n        if (res.data['wrn']) {\n          wrn(res.data)\n        }\n        if (res.data['err']) {\n          err(res.data)\n        }\n      }\n      catch (error) {\n        TCErr(error)\n      }\n    })()\n    return () => {\n      source.cancel('useAxios: canceled')\n    }\n    // eslint-disable-next-line\n  }, [user])\n}","const daysAgo = (today, date) => {\n    const delta = ((today - date) / (1000 * 3600 * 24)).toFixed()\n    let label\n    switch (delta) {\n        case '0':\n        case '-0':\n            label = 'Today'\n            break\n        case '1':\n            label = 'Yesterday'\n            break\n        default:\n            label = `${delta} days ago`\n            break\n    }\n    return label\n}\n\nexport default daysAgo","import { useContext, useState, useMemo, useRef } from 'react'\nimport {\n  Grid, Box, Alert, AlertTitle, Divider, Chip, Stack, Typography, Button,\n  Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText\n} from '@mui/material';\nimport { Alarm } from '@mui/icons-material'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport axios from 'axios'\n\nimport {\n  PostContext, UserContext, UserSettingsContext\n} from '../tools/contexts'\nimport { api_url } from '../tools/routes'\nimport daysAgo from '../tools/daysAgo'\n\nimport style from './markdownStyle.module.css'\n\n\nconst PostPreview = (props) => {\n\n  const { newPost, newSeverity, to, userSettings } = props\n\n  let post_props\n  switch (newSeverity) {\n    case 'Reminder':\n      post_props = {\n        icon: <Alarm />, severity: 'success'\n      }\n      break\n    case 'Normal':\n      post_props = { severity: 'warning' }\n      break\n    case 'Urgent':\n      post_props = { severity: 'error' }\n      break\n    default:\n      post_props = {}\n      break\n  }\n\n  const date = () => {\n    return new Date(\n      new Date().setDate(\n        new Date().getDate() + (parseInt(newPost.days_offset) || 0)\n      )\n    ).toLocaleDateString()\n  }\n\n  return (\n    < Grid item>\n      <Alert variant='outlined' {...post_props}\n        style={{\n          fontFamily: `${userSettings.postsFontFamily}, Helvetica`\n          , fontSize: '1em'\n        }}\n      >\n        <AlertTitle>\n          <Typography variant='h5'>\n            {newPost.title} (Preview)\n          </Typography>\n        </AlertTitle>\n        <ReactMarkdown className={style.mdStyle}\n          remarkPlugins={[remarkGfm]} children={\n            `${newPost.content}\\n\\n*Own ${to}* | *${date()}*`\n          }\n        />\n      </Alert>\n    </Grid >\n  )\n}\n\nconst Posts = (props) => {\n\n\n  const {\n    filter: { severity, owner },\n    newPost, setNewPost, newSeverity, to, contentFocus, handleMessage\n  } = props\n  const stackRef = useRef(null)\n  const { fetchedPosts } = useContext(PostContext)\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [postToDelete, setPostToDelete] = useState('')\n\n  const goUp = () => {\n    stackRef.current.scrollTo({ top: 0, behavior: 'smooth' })\n    contentFocus()\n  }\n\n  const posts = useMemo(() => {\n    if (fetchedPosts.length > 0) {\n      let severity_filter\n      switch (severity) {\n        case 'Reminder':\n          severity_filter = 'rem'\n          break\n        case 'Normal':\n          severity_filter = 'nor'\n          break\n        case 'Urgent':\n          severity_filter = 'urg'\n          break\n        default:\n          severity_filter = null\n          break\n      }\n      const owner_filter = owner === 'from All' ? null : user?.email\n\n      let filteredPosts = fetchedPosts.filter(post =>\n        (severity_filter ? post.severity === severity_filter : true)\n        && (owner_filter ? post.owner._id === owner_filter : true)\n      )\n\n      const dividedPosts = []\n      const today = new Date().getTime()\n      let last_day = today\n\n      if (filteredPosts.length > 0) {\n        filteredPosts.forEach(post => {\n          const date = new Date(post._id.$date)\n          const other_day = daysAgo(\n            today,\n            new Date(\n              date.setHours(date.getHours() + date.getTimezoneOffset() / 60)\n            )\n          )\n          if (last_day !== other_day) {\n            dividedPosts.push({ divider: other_day })\n            last_day = other_day\n          }\n          dividedPosts.push(post)\n        })\n      } else {\n        dividedPosts.push(\n          { divider: 'There are no posts with those conditions' }\n        )\n      }\n\n      return dividedPosts\n    }\n  }, [fetchedPosts, severity, owner, user])\n\n  const handleDelete = (post) => {\n    (async () => {\n      const res = await axios.delete(\n        api_url + '/news/delete-post',\n        {\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user?.token}`\n          },\n          data: post\n        }\n      )\n      if (res.data['msg']) {\n        handleMessage(res.data['msg'], 'info')\n      }\n      if (res.data['wrn']) {\n        handleMessage(res.data['wrn'], 'warning')\n      }\n      if (res.data['err']) {\n        handleMessage(res.data['err'], 'error')\n      }\n    })()\n    setPostToDelete('')\n  }\n\n  const justClose = () => {\n    setPostToDelete('')\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={7}>\n        <Box border={2} p={2} borderRadius={1} borderColor='primary.main'\n          sx={{ height: '80vh' }}\n        >\n          <Stack spacing={1} pr={1} ref={stackRef}\n            sx={{ paddingBlockEnd: 2, height: '75vh', overflow: 'auto' }}\n          >\n            {(newPost.title || newPost.content) &&\n              <PostPreview\n                newPost={newPost}\n                newSeverity={newSeverity}\n                to={to}\n                userSettings={userSettings}\n              />\n            }\n            {posts?.length > 0 ? posts?.map(element => {\n              let component\n              if (element.divider) {\n                component = (\n                  <Grid item key={element.divider}>\n                    <Divider>\n                      <Chip color='primary' label={element.divider} />\n                    </Divider>\n                  </Grid>\n                )\n              }\n              if (element._id) {\n                let post_props\n                switch (element.severity) {\n                  case 'rem':\n                    post_props = {\n                      icon: <Alarm />, severity: 'success'\n                    }\n                    break\n                  case 'nor':\n                    post_props = { severity: 'warning' }\n                    break\n                  case 'urg':\n                    post_props = { severity: 'error' }\n                    break\n                  default:\n                    post_props = {}\n                    break\n                }\n                let canEdit = {}\n                if (user?.is_admin || element.owner._id === user?.email) {\n                  post_props = {\n                    ...post_props,\n                    onClose: () => { setPostToDelete(element._id) }\n                  }\n                  canEdit = {\n                    onClick: () => {\n                      setNewPost({\n                        title: '', content: element.content, days_offset: ''\n                      })\n                      goUp()\n                    }\n                  }\n                }\n                const content = element.content\n                const owner = `**${element.owner.username}**`\n                const pub = element.is_public ? 'to **All**' : 'just for **Me**'\n                const date = new Date(element._id.$date).toLocaleDateString()\n                component = (\n                  <Grid item key={element._id['$date']}>\n                    <Alert variant='filled' {...post_props}\n                      style={{\n                        fontFamily: `${userSettings.postsFontFamily}, Helvetica`\n                        , fontSize: '1em'\n                      }}\n                    >\n                      <AlertTitle>\n                        <Typography variant='h5'>\n                          {element.title}\n                        </Typography>\n                      </AlertTitle>\n                      <div {...canEdit}>\n                        <ReactMarkdown className={style.mdStyle}\n                          remarkPlugins={[remarkGfm]} children={\n                            `${content}\\n\\n*${owner} ${pub}* | *${date}*`\n                          }\n                        />\n                      </div>\n                    </Alert>\n                  </Grid>\n                )\n              }\n              return component\n            }) :\n              <Typography variant='h4' color='secondary'>\n                Loading...\n              </Typography>\n            }\n          </Stack>\n        </Box>\n      </Grid >\n      <Dialog\n        open={Boolean(postToDelete)}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            Confirm delete post?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button\n            onClick={() => handleDelete(postToDelete)} color='error' autoFocus\n          >\n            DELETE </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Posts","import { FormControl, Select, MenuItem } from '@mui/material'\n\n\nconst PostSelect = (props) => {\n\n  const { options, option, setOption, ...others } = props\n\n  const handleChange = (e) => {\n    setOption(e.target.value)\n  }\n\n  return (\n    <FormControl fullWidth {...others}>\n      <Select size='small' value={option} onChange={handleChange}>\n        {options.map(op => {\n          return <MenuItem key={op} value={op}>{op}</MenuItem>\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default PostSelect","import {\n  Typography, Grid, Box, Divider, TextField, Button, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\n\nconst FullPanel = (props) => {\n\n  const {\n    filter: { severity, setSeverity, owner, setOwner },\n    newPost, newSeverity, setNewSeverity, to, setTo, contentRef,\n    handleChange, handleSend, send_props\n  } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '75vh', overflow: 'auto' }}\n          >\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='TITLE'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField \n                inputRef={contentRef}\n                fullWidth rows={12} multiline size='small' \n                label='CONTENT (Markdown Supported)'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default FullPanel","import { Grid, Box, Paper } from '@mui/material';\nimport PostSelect from './PostSelect'\n\nconst Filter = (props) => {\n\n  const { filter: { severity, setSeverity, owner, setOwner } } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2 }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Filter","import {\n  Typography, Grid, Box, Divider, TextField, Button, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\n\nconst CreatePost = (props) => {\n\n  const { \n    newPost, newSeverity, setNewSeverity, to, setTo,\n    handleChange, handleSend, send_props \n  } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '60vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '55vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='TITLE'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth rows={8} multiline size='small'\n                label='CONTENT (Markdown Supported)'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default CreatePost","import { useState, useRef } from 'react'\nimport { Container, Grid, Snackbar, Alert } from '@mui/material';\n\nimport { useAxios } from '../tools/axiosTool'\n\nimport Posts from './Posts'\nimport FullPanel from './FullPanel'\nimport Filter from './Filter'\nimport CreatePost from './CreatePost'\n\nconst News = () => {\n\n  const contentRef = useRef(null)\n  const [severity, setSeverity] = useState('All')\n  const [owner, setOwner] = useState('from All')\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n  const [newPost, setNewPost] = useState({\n    title: '', content: '', days_offset: ''\n  })\n  const [newSeverity, setNewSeverity] = useState('Normal')\n  const [to, setTo] = useState('to Me')\n\n  const contentFocus = () => {\n    contentRef.current.focus()\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setNewPost({ ...newPost, [name]: value })\n  }\n\n  const getSeverity = () => {\n    switch (newSeverity) {\n      case 'Reminder':\n        return 'rem'\n      default:\n      case 'Normal':\n        return 'nor'\n      case 'Urgent':\n        return 'urg'\n    }\n  }\n\n  const getPublic = () => {\n    switch (to) {\n      default:\n      case 'to Me':\n        return false\n      case 'to All':\n        return true\n    }\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const sender = useAxios(\n    'post', '/news/create-post', 'msg',\n    (d) => {\n      handleMessage(d.msg, 'success')\n      setNewPost({ title: '', content: '', days_offset: '' })\n      setNewSeverity('Normal')\n      setTo('to Me')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleSend = () => {\n\n    if (!newPost.title) {\n      handleMessage('You must provide a Title', 'error')\n      return\n    }\n    if (!newPost.content) {\n      handleMessage('You must provide a Content', 'error')\n      return\n    }\n    const days_offset = parseInt((newPost.days_offset || 0))\n    if (0 > days_offset || 7 < days_offset) {\n      handleMessage('\"within days\" must be between 0 and 7', 'error')\n      return\n    }\n\n    sender({\n      title: newPost.title,\n      content: newPost.content,\n      severity: getSeverity(),\n      days_offset: days_offset,\n      is_public: getPublic(),\n      localeTimeOffset: new Date().getTimezoneOffset() / 60\n    })\n  }\n\n  let send_props\n  switch (newSeverity) {\n    case 'Reminder':\n      send_props = { color: 'success' }\n      break\n    case 'Normal':\n      send_props = { color: 'warning' }\n      break\n    case 'Urgent':\n      send_props = { color: 'error' }\n      break\n    default:\n      send_props = {}\n      break\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const filter = {\n    severity: severity,\n    setSeverity: setSeverity,\n    owner: owner,\n    setOwner: setOwner\n  }\n\n  const creation = {\n    newPost: newPost,\n    newSeverity: newSeverity,\n    setNewSeverity: setNewSeverity,\n    to: to,\n    setTo: setTo,\n    handleChange: handleChange,\n    handleSend: handleSend,\n    send_props: send_props\n  }\n\n  return (\n    <Container maxWidth='xl'>\n\n      <Grid\n        container spacing={1} margin={0} pt={3}\n        sx={{ display: { xs: 'none', md: 'flex' } }}\n      >\n        <FullPanel\n          filter={filter}\n          contentRef={contentRef}\n          {...creation}\n        />\n        <Posts\n          filter={{ severity: severity, owner: owner }}\n          newPost={newPost}\n          setNewPost={setNewPost}\n          newSeverity={newSeverity}\n          to={to}\n          contentFocus={contentFocus}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Grid\n        container spacing={1} margin={0} pt={1}\n        sx={{ display: { xs: 'flex', md: 'none' } }}\n      >\n        <Filter\n          filter={filter}\n        />\n        <Posts\n          filter={{ severity: severity, owner: owner }}\n          newPost={newPost}\n          setNewPost={setNewPost}\n          newSeverity={newSeverity}\n          to={to}\n          contentFocus={contentFocus}\n          handleMessage={handleMessage}\n        />\n        <CreatePost\n          {...creation}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default News;","import { useState, useContext, useRef } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button, Radio,\n  FormControl, RadioGroup, FormControlLabel, Divider\n} from '@mui/material'\nimport { LooksOne, LooksTwo, Looks3, Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Complete = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ first: '', second: '', third: '' })\n  const [sign, setSign] = useState('pri')\n  const [operation, setOperation] = useState('add')\n  const [expression, setExpression] = useState('')\n  const firstRef = useRef(null)\n  const secondRef = useRef(null)\n  const expRef = useRef(null)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleSign = (e) => {\n    const { value } = e.target\n    setSign(value)\n    setFields({ ...fields, first: '', third: '' })\n    firstRef.current.focus()\n  }\n\n  const handleOperation = (e) => {\n    const { value } = e.target\n    setOperation(value)\n    setFields({ ...fields, second: '' })\n    secondRef.current.focus()\n  }\n\n  const handleExpressionChange = (e) => {\n    const { value } = e.target\n    setExpression(value)\n  }\n\n  const handleQuery = (url, data, to_set) => {\n    for (let [field, value] of Object.entries(data)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    data = { ...data, sign: sign, operation: operation };\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + url,\n          data,\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ])\n          setFields({ ...fields, [to_set]: res.data.result })\n          if (!data.expression) {\n            setExpression(res.data.result);\n            (async () => {navigator.clipboard.writeText(\n              `$${res.data.result}`\n            )})()\n            handleMessage(`$${res.data.result} Copied`, 'success')\n          } else {\n            (async () => {navigator.clipboard.writeText(res.data.result)})()\n            handleMessage(`${res.data.result} Copied`, 'success')\n          }\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const handleGetFirst = () => {\n    let dataset = { second: fields.second, third: fields.third }\n    handleQuery('/calculator/get-first-term', dataset, 'first')\n    expRef.current.focus()\n  }\n  \n  const handleGetSecond = () => {\n    let dataset = { first: fields.first, third: fields.third }\n    handleQuery('/calculator/get-second-term', dataset, 'second')\n    expRef.current.focus()\n  }\n  \n  const handleGetThird = () => {\n    let dataset = { first: fields.first, second: fields.second }\n    handleQuery('/calculator/get-result', dataset, 'third')\n    expRef.current.focus()\n  }\n\n  const handleEvaluate = () => {\n    handleQuery('/calculator/resolve-expression', { expression: expression })\n  }\n\n  const handleEnterOnFields = () => {\n\n    if (fields.first === '' && fields.second !== '' && fields.third !== '') {\n      handleGetFirst()\n    } else if (\n      fields.first !== '' && fields.second === '' && fields.third !== ''\n    ) {\n      handleGetSecond()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third === ''\n    ) {\n      handleGetThird()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third !== ''\n    ) {\n      handleMessage('impossible to know which operation to perform!', 'warning')\n    } else {\n      handleMessage('You must provide 2 fields at least!', 'warning')\n    }\n  }\n\n  const handleClear = () => {\n    setFields({ first: '', second: '', third: '' })\n    setExpression('')\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '65vh' }} p={2}\n          onKeyPress={e => {\n            if (e.key === 'q') {expRef.current.focus()}\n          }}\n        >\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '60vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='sign'\n                  value={sign} onChange={handleSign}\n                >\n                  <Paper>\n                    <Grid item px={3}>\n                      <FormControlLabel\n                        value='pri'\n                        control={<Radio />} label={\n                          <Typography variant='h5' color='primary'>\n                            $\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='per'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h5' color='secondary'>\n                            %\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='operation'\n                  value={operation} onChange={handleOperation}\n                >\n                  <Paper>\n                    <Grid px={3}>\n                      <FormControlLabel\n                        value='add'\n                        control={<Radio />} label={\n                          <Typography variant='h4' color='primary'>\n                            +\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='sub'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h4' color='secondary'>\n                            -\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant='h5' color='initial'\n                sx={{ display: { xs: 'none', md: 'flex' } }}\n              >\n                complete calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth size='small' type='number' autoFocus\n                label={sign === 'pri' ? 'Price' : 'Percentage'}\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5'\n                      color={sign === 'pri' ? 'primary' : 'secondary'}\n                    >\n                      {sign === 'pri' ? '$' : ''}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='secondary'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                inputRef={firstRef}\n                name='first'\n                value={fields.first}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='day/month/year | Percentage'\n                size='small' InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4'\n                      color={operation === 'add' ? 'primary' : 'secondary'}\n                    >\n                      {operation === 'add' ? '+' : '-'}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      %\n                    </Typography>\n                  </InputAdornment>\n                }}\n                inputRef={secondRef}\n                name='second'\n                value={fields.second}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Result' type='number'\n                size='small' InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '= $' : '='}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='third'\n                value={fields.third}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetFirst} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksOne />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetSecond} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksTwo />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetThird} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<Looks3 />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth label='Evaluate Expression' size='small'\n                inputRef={expRef}\n                name='expression' InputProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4' color='primary'>\n                      {'>>>'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                InputLabelProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 }\n                }}\n                value={expression}\n                onChange={handleExpressionChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEvaluate()\n                }}\n              />\n            </Grid>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleClear} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='error'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Clear\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleEvaluate} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='primary'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Evaluate\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Complete","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button\n} from '@mui/material'\nimport { Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Basic = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ price: '', str_date: '' })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleGetPrice = () => {\n    for (let [field, value] of Object.entries(fields)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/calculator/price-add-percent',\n          {\n            ...fields,\n            str_date: fields.str_date.split('-').reverse().join('/')\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ]);\n          (async () => {navigator.clipboard.writeText(`$${res.data.result}`)})()\n          handleMessage(`$${res.data.result} Copied`, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '30vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '25vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h5' color='initial'>\n                basic calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Price' autoFocus\n                type='number'\n                name='price'\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='primary'>\n                      $\n                    </Typography>\n                  </InputAdornment>\n                }}\n                value={fields.price}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Date' type='date'\n                InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='body1' color='primary'>\n                      from\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='str_date'\n                value={fields.str_date}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetPrice} size='large'\n                sx={{ minHeight: '75%' }}\n                variant='contained' color='success' endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  GET PRICE\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Basic","import { useMemo } from 'react'\nimport {\n  Paper, Typography, Tooltip, Grid, Box, Divider, Chip\n} from '@mui/material'\n\nimport daysAgo from '../tools/daysAgo'\n\nconst CalcHistory = (props) => {\n\n  const { history } = props\n\n  const registries = useMemo(() => {\n\n    const dividedRegistries = []\n    const today = new Date().getTime()\n    let last_day = today\n\n    if (history.length > 0) {\n      history.forEach(reg => {\n        const other_day = daysAgo(today, reg._id['$date'])\n        if (last_day !== other_day) {\n          dividedRegistries.push({ divider: other_day })\n          last_day = other_day\n        }\n        dividedRegistries.push(reg)\n      })\n    } else {\n      dividedRegistries.push(\n        { divider: 'There are no previous calculations' }\n      )\n    }\n\n    return dividedRegistries\n\n  }, [history])\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Box sx={{\n        paddingBlockEnd: 2,\n        height: '75vh',\n        backgroundColor: 'info.main'\n      }} borderRadius={3} p={2}>\n        <Grid container spacing={1} align='center' pr={2} alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '70vh', overflow: 'auto' }}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" color=\"initial\">\n              Result / History\n            </Typography>\n          </Grid>\n          {registries.map((reg, item) => {\n            let component\n            if (reg.divider) {\n              component = (\n                <Grid item xs={12} key={reg.divider}>\n                  <Divider>\n                    <Chip color='warning' size='small' label={reg.divider} />\n                  </Divider>\n                </Grid>\n              )\n            }\n            if (reg._id) {\n\n              let tColor\n              if (item !== 1) {\n                tColor = { color: 'info.light' }\n              }\n\n              component = (\n                <Grid item xs={12} key={reg._id.$date}>\n                  <Paper elevation={7}>\n                    <Tooltip title={reg.footnote}\n                      placement='right' disableInteractive arrow followCursor\n                    >\n                      <Typography variant=\"h6\" {...tColor}\n                        sx={{ whiteSpace: 'pre-line' }}\n                      >\n                        {reg.calculation}\n                      </Typography>\n                    </Tooltip>\n                  </Paper>\n                </Grid>\n              )\n            }\n            return component\n          })}\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CalcHistory","import { useContext, useEffect, useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert, FormControlLabel, Switch, Typography\n} from '@mui/material'\nimport axios from 'axios'\n\nimport Complete from './Complete'\nimport Basic from './Basic'\nimport CalcHistory from './CalcHistory'\nimport { api_url } from '../tools/routes'\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\n\nconst Calculator = () => {\n\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [history, setHistory] = useState([])\n  const [openSB, setOpenSB] = useState(false)\n  const [basic, setBasic] = useState(Boolean(userSettings?.calculator))\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    (async () => {\n      const res = await axios.get(\n        api_url + '/calculator/get-history',\n        {\n          cancelToken: source.token,\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user.token}`\n          }\n        }\n      )\n      if (res.data['hist']) {\n        setHistory(res.data['hist'])\n      }\n      if (res.data['msg']) {\n        // console.warn(res.data['msg'])\n      }\n      if (res.data['err']) {\n        console.error(res.data['err'])\n      }\n    })()\n    return () => {\n      source.cancel()\n    }\n  }, [user, setHistory])\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpenSB(true)\n  }\n\n  const handleBasic = (e) => {\n    const { checked } = e.target\n    setBasic(checked)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12}>\n          <FormControlLabel labelPlacement='start'\n            label={\n              <Typography px={1}>\n                Calculator\n              </Typography>\n            }\n            control={\n              <FormControlLabel\n                control={<Switch checked={basic} onChange={handleBasic} />}\n                label=\"Basic\"\n              />\n            }\n          />\n        </Grid>\n        {basic\n          ?\n          <Basic\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n          :\n          <Complete\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n        }\n        <CalcHistory history={history} setHistory={setHistory} />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Calculator;","const strFormat = (str, regexs, args) => {\n\n\n  let mut_str = str\n  if (regexs !== undefined) {\n    regexs.forEach(({ pattern, replacement }) => {\n      mut_str = mut_str.replace(RegExp(pattern, 'ig'), replacement)\n    })\n  }\n  return mut_str.replace(/{([\\w\\s]+)}/g,\n  (match, index) => {\n      return typeof args[index] === 'undefined' ? match : args[index]\n    }\n  )\n}\n\nexport default strFormat","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, InputAdornment, Grid, Box, Paper, Tooltip\n} from '@mui/material'\nimport { ContentCopy } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst CreditCards = (props) => {\n\n  const { payMeths, sysRegex, handleMessage, priceRef } = props\n\n  const [price, setPrice] = useState('')\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      const total = (\n        parseFloat(price) * (1 + meth.increase / 100)\n      ).toFixed() | 0\n      const monthly = (total / meth.installments).toFixed()\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        total: total,\n        monthly: monthly,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths, price])\n\n  const handleChangePrice = (e) => {\n    setPrice(e.target.value)\n  }\n\n\n  const handleCopy = (item) => {\n\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(`${item.installments} ${item.monthly}`, sysRegex)\n      )\n    })()\n    handleMessage('Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6' color='primary.main'>\n              Credit Cards Payments\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField label='Price' size='small' autoFocus\n              inputProps={{\n                min: 0, step: 10\n              }}\n              InputProps={{\n                startAdornment: <InputAdornment position='start'>\n                  <Typography variant='h6' color='primary'>\n                    $\n                  </Typography>\n                </InputAdornment>\n              }}\n              inputRef={priceRef}\n              type='number'\n              value={price}\n              onChange={handleChangePrice}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n              <Paper elevation={3} sx={{\n                borderRadius: '15px 15px 0px 0px',\n                backgroundColor: 'warning.dark',\n                height: 40\n              }}\n              >\n                <Typography variant=\"body1\" color=\"initial\" p={1}>\n                  Card Name\n                </Typography>\n              </Paper>\n              <TableContainer\n                sx={{ height: { xs: '57vh', md: '60vh' } }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <CustomCell width='20%'>\n                        Installments\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'error.dark' }}\n                      >\n                        Total\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'success.dark' }}\n                      >\n                        Monthly\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Increase\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        PosCode\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Copy\n                      </CustomCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {paymentMethods.length > 0 ? paymentMethods.map(item => {\n                      const component = item.header ? (\n                        <TableRow key={item.header}>\n                          <CustomCell width='100%' colSpan={6}\n                            sx={{\n                              borderRadius: '20px 20px 0px 0px',\n                              backgroundColor: 'warning.dark'\n                            }}\n                          >\n                            {item.header}\n                          </CustomCell>\n                        </TableRow>\n                      ) : (\n                        <Tooltip key={item.id}\n                          title={item.description} disableInteractive\n                          placement='right' arrow followCursor\n                        >\n                          <TableRow hover>\n                            <CustomCell>\n                              {item.installments}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'error.dark' }}\n                            >\n                              ${item.total}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'success.dark' }}\n                            >\n                              ${item.monthly}\n                            </CustomCell>\n                            <CustomCell>\n                              {item.increase}%\n                            </CustomCell>\n                            <CustomCell>\n                              *{item.pos_code}*\n                            </CustomCell>\n                            <CustomCell>\n                              <IconButton size='small' color='primary'\n                                onClick={() => handleCopy(item)}\n                              >\n                                <ContentCopy fontSize='small' />\n                              </IconButton>\n                            </CustomCell>\n                          </TableRow>\n                        </Tooltip>\n                      )\n                      return component\n                    }) :\n                      <TableRow>\n                        <TableCell colSpan={6} align='center'>\n                          <Typography variant='h4' color='primary'>\n                            Loading...\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    }\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CreditCards\n","import { useState, useMemo } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Tooltip\n} from '@mui/material'\nimport { ContentCopy, Cancel } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\nconst AnswerButtons = (props) => {\n\n  const {\n    commonAnswers, ownAnswers, sysRegex, ownRegex, handleMessage,\n    commonStackRef, ownStackRef\n  } = props\n\n  const [text, setText] = useState('')\n\n  const answerList = useMemo(() => {\n    if (commonAnswers.length > 0 && ownAnswers.length > 0) {\n      return [...commonAnswers, ...ownAnswers].map(({ label, content }) => {\n        return { [label]: content }\n      }).reduce((resObj, curObj) => {\n        return { ...resObj, ...curObj }\n      })\n    }\n\n  }, [commonAnswers, ownAnswers])\n\n  const handleClickAnswer = (text) => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    setText(text)\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopy = () => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopyRaw = () => {\n    (async () => {\n      navigator.clipboard.writeText(text)\n    })()\n    handleMessage('Raw Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2}>\n          <Grid item xs={12} md={11}>\n            <TextField label='Content' focused color='warning'\n              fullWidth multiline rows={4}\n              InputProps={{ readOnly: true }}\n              value={text}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Tooltip title='Copy Formated Text' placement='left'>\n              <IconButton color='primary' onClick={handleCopy}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Copy Raw Text' placement='left'>\n              <IconButton color='info' onClick={handleCopyRaw}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Unselect Answer' placement='left'>\n              <IconButton color='warning' onClick={() => setText('')}>\n                <Cancel />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Commons\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {commonAnswers.length > 0 ? commonAnswers.map((ans, i) => {\n                const reference = i === 0 ? {\n                  ref: commonStackRef\n                } : {}\n\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                    enterDelay={1000} key={ans._id.$oid}\n                  >\n                    <Button fullWidth variant='contained' {...reference}\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              }) : \n                <Typography variant='h5' color='primary'>\n                  Loading...\n                </Typography>\n              }\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Own\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {ownAnswers.length > 0 ? ownAnswers.map((ans, i) => {\n\n                const reference = i === 0 ? {\n                  ref: ownStackRef\n                } : {}\n\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                    enterDelay={1000} key={ans._id.$oid}\n                  >\n                    <Button fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      {...reference}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              }) : \n              <Typography variant='h5' color='primary'>\n                Loading...\n              </Typography>\n            }\n            </Stack>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default AnswerButtons","import { useState, useRef } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material'\n\nimport { useAxiosEffect } from '../tools/axiosTool'\nimport CreditCards from './CreditCards'\nimport AnswerButtons from './AnswerButtons'\n\nconst Answers = () => {\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n  const priceRef = useRef(null)\n  const commonStackRef = useRef(null)\n  const ownStackRef = useRef(null)\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => { \n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods) \n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers) \n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers) \n      }\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n\n  return (\n    <Container maxWidth='xl' \n      onKeyPress={e => {\n        if (e.key === 'q') { priceRef.current.focus()}\n        if (e.key === 'w' && commonAnswers.length > 0) {\n          commonStackRef.current.focus()\n        }\n        if (e.key === 'e' && ownAnswers.length > 0) {\n          ownStackRef.current.focus()\n        }\n      }}\n    >\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12} md={6}>\n          <CreditCards\n            payMeths={payMeths}\n            sysRegex={sysRegex}\n            handleMessage={handleMessage}\n            priceRef={priceRef}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <AnswerButtons\n            commonAnswers={commonAnswers}\n            ownAnswers={ownAnswers}\n            sysRegex={sysRegex}\n            ownRegex={ownRegex}\n            handleMessage={handleMessage}\n            commonStackRef={commonStackRef}\n            ownStackRef={ownStackRef}\n          />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt} \n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Answers;","import { Outlet } from 'react-router'\nimport {Container, Grid } from '@mui/material'\n\nconst Settings = () => {\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Outlet />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Settings;","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, Grid, Box, Paper\n} from '@mui/material'\nimport { Done, Delete, Add, Edit, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst EditCreditCards = (props) => {\n\n  const { payMeths, setPayMeths, handleMessage } = props\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths])\n\n  const initialValue = {\n    id: '',\n    card_name: '',\n    installments: '',\n    increase: '',\n    pos_code: '',\n    description: ''\n  }\n\n  const [newCard, setNewCard] = useState('')\n  const [selected, setSelected] = useState(initialValue)\n  const [method, setMethod] = useState(initialValue)\n\n  const handleChangeNewCard = (e) => {\n    setNewCard(e.target.value)\n  }\n\n  const handleChangeMethod = (e) => {\n    const { name, value } = e.target\n    setMethod({ ...method, [name]: value })\n  }\n\n  // QUERIES -------------------------------------------------------------------\n\n  const handleAddCard = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleAddMethod = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateCardName = useAxios(\n    'put', '/answers/update-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateMethod = useAxios(\n    'put', '/answers/update-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropCard = useAxios(\n    'delete', '/answers/delete-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropMethod = useAxios(\n    'delete', '/answers/delete-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  // ---------------------------------------------------------------------------\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={12}>\n              <Typography variant='body1' color='secondary.main'>\n                Edit Credit Cards Payments Methods\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n                <Paper elevation={3} sx={{\n                  borderRadius: '15px 15px 0px 0px',\n                  backgroundColor: 'warning.main',\n                  height: 40\n                }}\n                >\n                  <Typography variant=\"body1\" color=\"initial\" p={1}>\n                    Card Name\n                  </Typography>\n                </Paper>\n                <TableContainer sx={{ height: '60vh' }}>\n                  <Table stickyHeader size='small'>\n                    <TableHead>\n                      <TableRow>\n                        <CustomCell width='25%'>\n                          Installments\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Description\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Increase\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Code\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Upg\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Drop\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Add\n                        </CustomCell>\n                      </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                      <TableRow>\n                        <CustomCell width='90%' colSpan={6}\n                          sx={{\n                            borderRadius: '50px 0px 0px 50px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <TextField fullWidth label='Card Name' size='small'\n                            variant='standard' value={newCard} color='secondary'\n                            inputProps={{ style: { textAlign: 'center' } }}\n                            onChange={handleChangeNewCard}\n                          />\n                        </CustomCell>\n                        <CustomCell\n                          sx={{\n                            borderRadius: '0px 50px 50px 0px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <IconButton size='small' color='secondary'\n                            disabled={!Boolean(newCard)}\n                            onClick={() => handleAddCard({\n                              method: {\n                                card_name: newCard, installments: 0,\n                                increase: 0, pos_code: 0, description: 'FIXME'\n                              }\n                            })}\n                          >\n                            <Add fontSize='small' />\n                          </IconButton>\n                        </CustomCell>\n                      </TableRow>\n\n                      {paymentMethods.length > 0 ? paymentMethods.map(item => {\n\n                        let component\n                        if (selected.id === item.id) {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <TextField label='Card Name' size='small'\n                                  variant='standard' value={method.header}\n                                  name='header'\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell\n                                sx={{ backgroundColor: 'warning.main' }}\n                              >\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='warning'\n                                  action={() => handleUpdateCardName(\n                                    { name: item.id, new_name: method.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'>\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                <TextField label='Installments' size='small'\n                                  variant='standard'\n                                  name='installments'\n                                  value={method.installments}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Description' size='small'\n                                  variant='standard'\n                                  name='description'\n                                  value={method.description}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Increase' size='small'\n                                  variant='standard'\n                                  name='increase'\n                                  value={method.increase}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Pos-Code' size='small'\n                                  variant='standard'\n                                  name='pos_code'\n                                  value={method.pos_code}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='success' action={\n                                    () => handleUpdateMethod(\n                                      { method: { ...method } }\n                                    )\n                                  }\n                                >\n                                  <IconButton size='small' color='success'\n                                  >\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        } else {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                {item.header}\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='error'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{ backgroundColor: 'warning.main' }}>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error' action={() => handleDropCard(\n                                    { card_name: item.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                {item.installments}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.description}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.increase}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.pos_code}\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='warning'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error'\n                                  action={() => handleDropMethod(\n                                    { method: { id: item.id } }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        }\n                        return component\n                      }) :\n                        <TableRow>\n                          <TableCell colSpan={7} align='center'>\n                            <Typography variant='h4' color='primary'>\n                              Loading...\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditCreditCards;\n","import { useState } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControl, FormControlLabel, MenuItem, Select\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\nconst EditAnswers = (props) => {\n\n  const {\n    user, commonAnswers, ownAnswers, setCommonAnswers, setOwnAnswers,\n    handleMessage\n  } = props\n\n  const colors = {\n    '#1976d2': 'BLUE',\n    '#0097a7': 'CYAN',\n    '#388e3c': 'GREEN',\n    '#fbc02d': 'YELLOW',\n    '#f57c00': 'ORANGE',\n    '#d32f2f': 'RED',\n    '#c2185b': 'PINK',\n    '#7b1fa2': 'PURPLE',\n    '#5d4037': 'BROWN',\n    '#455a64': 'GREY'\n  }\n\n  const initialAnswer = {\n    id: '',\n    label: '',\n    color: '',\n    content: '',\n    common: false,\n    order: 0\n  }\n\n  const [answer, setAnswer] = useState(initialAnswer)\n  const [edit, setEdit] = useState(false)\n\n  const handleChangeAnswer = (e) => {\n    const { name, value, checked } = e.target\n    setAnswer({\n      ...answer,\n      [name]: name !== 'common' ? value : checked\n    })\n  }\n\n  const handleClickAnswer = (ans) => {\n    setAnswer(ans)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setAnswer(initialAnswer)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n      handleMessage(d.msg, 'success')\n      setAnswer(initialAnswer)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-answer', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2}>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Label' color='warning'\n                fullWidth name='label'\n                value={answer.label} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Order' color='warning'\n                fullWidth name='order' type='number'\n                value={answer.order} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='color'\n                  value={answer.color}\n                  onChange={handleChangeAnswer}\n                >\n                  {Object.entries(colors).map(([hex, name]) => {\n                    return (\n                      <MenuItem key={name} value={hex}>\n                        <Typography color={hex}>\n                          {name}\n                        </Typography>\n                      </MenuItem>\n                    )\n                  })\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {user?.is_admin && !edit &&\n              <Grid item xs={12} md={3}>\n                <FormControlLabel control={\n                  <Switch\n                    name='common'\n                    checked={answer.common}\n                    onChange={handleChangeAnswer}\n                  />\n                }\n                  label='Common'\n                />\n              </Grid>\n            }\n            <Grid item xs={12} md={11}>\n              <TextField label='Content' color='warning'\n                fullWidth multiline rows={4} name='content'\n                value={answer.content} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={1}>\n              <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                confirmText={edit ? 'Update' : 'Create'} message={\n                  edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                } action={edit ? () => handleUpdateAnswer({\n                  answer: {\n                    ...answer, id: answer._id.$oid, color: colors[answer.color]\n                  }\n                }) : () => handleCreateAnswer({\n                  answer: {\n                    ...answer, color: colors[answer.color]\n                  }\n                })} color={edit ? 'warning' : 'success'}\n              >\n                <IconButton color={edit ? 'primary' : 'success'}\n                  disabled={!Boolean(answer.label)}\n                >\n                  <Save />\n                </IconButton>\n              </RDialog>\n              <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                confirmText='Delete' action={() => handleDeleteAnswer({\n                  answer: {\n                    id: answer._id.$oid\n                  }\n                })}\n              >\n                <IconButton color='error' disabled={!Boolean(answer.label)}>\n                  <Delete />\n                </IconButton>\n              </RDialog>\n              <IconButton color='warning' disabled={!Boolean(answer.label)}\n                onClick={handleCancel}\n              >\n                <Cancel />\n              </IconButton>\n            </Grid>\n            {user?.is_admin &&\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Commons\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n                >\n                  {commonAnswers.length > 0 ? commonAnswers.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        sx={{\n                          color: '#FFFFFF',\n                          background: ans.color, '&:hover': {\n                            background: ans.color, filter: 'brightness(90%)'\n                          }\n                        }}\n                        onClick={() => handleClickAnswer(ans)}\n                      >\n                        {ans.label}\n                      </Button>\n                    )\n                  }) :\n                    <Typography variant='h5' color='primary'>\n                      Loading...\n                    </Typography>\n                  }\n                </Stack>\n              </Grid>\n            }\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6'>\n                Own\n              </Typography>\n              <Stack spacing={1} p={1}\n                sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n              >\n                {ownAnswers.length > 0 ? ownAnswers.map((ans) => {\n                  return (\n                    <Button key={ans._id.$oid} fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans)}\n                    >\n                      {ans.label}\n                    </Button>\n                  )\n                }) :\n                <Typography variant='h5' color='primary'>\n                  Loading...\n                </Typography>\n              }\n              </Stack>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditAnswers","import { useState, useContext } from 'react'\nimport { Grid, Snackbar, Alert } from '@mui/material'\n\nimport { useAxiosEffect } from '../../tools/axiosTool'\nimport EditCreditCards from './EditCreditCards'\nimport EditAnswers from './EditAnswers'\nimport { UserContext } from '../../tools/contexts'\n\nconst AnswersSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => {\n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods)\n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <>\n      {user.is_admin &&\n        <Grid item xs={12} md={6}>\n          <EditCreditCards\n            payMeths={payMeths}\n            setPayMeths={setPayMeths}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      }\n      <Grid item xs={12} md={6}>\n        <EditAnswers\n          user={user}\n          commonAnswers={commonAnswers}\n          setCommonAnswers={setCommonAnswers}\n          ownAnswers={ownAnswers}\n          setOwnAnswers={setOwnAnswers}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default AnswersSettings;","import { useState } from 'react'\nimport {\n  Grid, Paper, Box, Button, TextField, Typography, FormControlLabel, Checkbox,\n  Divider\n} from '@mui/material'\nimport { ArrowUpward, Add } from '@mui/icons-material'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst NewItem = (props) => {\n\n  const { dates, setDates, setHasChanged, handleMessage } = props\n\n  const initialNewOne = { str_date: '', percent: '', increaseAll: true }\n\n  const [newOne, setNewOne] = useState(initialNewOne)\n  const [upAll, setUpAll] = useState('')\n\n  const handleChangeNewOne = (e) => {\n    const { name, value, checked } = e.target\n    setNewOne({ ...newOne, [name]: name === 'increaseAll' ? checked : value })\n  }\n\n  const addSuccessiveIncreases = (inc) => {\n    const b = parseFloat(inc)\n    return dates.map(item => {\n      const a = parseFloat(item.percent)\n      const newPercent = a + b + (a * b / 100)\n      return { _id: item._id, percent: newPercent.toFixed(2) }\n    })\n  }\n\n  const handleAddOne = () => {\n    const newDate = newOne.str_date.split('-').join('/')\n    const newPercent = parseFloat(newOne.percent)\n    for (let date of dates) {\n      if (date._id === newDate) {\n        handleMessage(`'${date._id}' is already on the list`, 'error')\n        return\n      }\n    }\n    let newDates = newOne.increaseAll\n      ? addSuccessiveIncreases(newPercent)\n      : dates\n    setDates([\n      { _id: newDate, percent: newPercent },\n      ...newDates\n    ])\n    setHasChanged(true)\n    setNewOne(initialNewOne)\n  }\n  \n  const handleUpdateAll = () => {\n    setDates(addSuccessiveIncreases(upAll))\n    setHasChanged(true)\n    setUpAll('')\n  }\n\n  return (\n    <Grid item pb='1vh'>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '39vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            sx={{ minHeight: '35vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h6' color='success.main'>\n                Add New Date - Percentage\n              </Typography>\n            </Grid>\n            <Grid item xs={8} md={4}>\n              <TextField fullWidth size='small' label='Date'\n                focused\n                type='date'\n                name='str_date'\n                value={newOne.str_date}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={4} md={2}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                name='percent'\n                value={newOne.percent}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <FormControlLabel label='Increase All' control={\n                <Checkbox color='warning'\n                  name='increaseAll'\n                  checked={newOne.increaseAll}\n                  onChange={handleChangeNewOne}\n                />\n              } />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <RDialog title='Add New Date-Percentage Pair'\n                message='Confirm add a new one?' confirmText='ADD'\n                color='success' action={handleAddOne}\n              >\n                <Button fullWidth variant='contained' color='success'\n                  disabled={\n                    !Boolean(newOne.str_date)\n                    || !Boolean(newOne.percent)\n                  }\n                  sx={{ height: '100%' }} startIcon={<Add />}\n                >\n                  ADD\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6' color='warning.main'>\n                Increase All Percentages\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                value={upAll}\n                onChange={(e) => setUpAll(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <RDialog title='Update Date-Percentage Table'\n                message='Confirm update table?' confirmText='UPDATE'\n                action={handleUpdateAll}\n              >\n                <Button fullWidth variant='contained' color='warning'\n                  disabled={!Boolean(upAll)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  UPDATE TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default NewItem","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  Button, IconButton, Typography\n} from '@mui/material'\nimport { ArrowUpward, Download, Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\n\nconst Lists = (props) => {\n\n  const { lists, setLists, setDates, setHasChanged, handleMessage } = props\n\n  const { user } = useContext(UserContext)\n  const [selectedList, setSelectedList] = useState('')\n\n  const fetchList = () => {\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleLoadList = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { list_name: selectedList },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          fetchList()\n          handleMessage(res.data.msg, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n      setSelectedList('')\n      setHasChanged(false)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDownloadList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/get-list-file',\n          { file_name: name },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['err']) {\n          console.error(res.data.err)\n        } else {\n          const fileToSave = window.URL.createObjectURL(\n            new Blob(\n              [JSON.stringify(res.data, undefined, 2)],\n              { type: 'application/json' }\n            )\n          )\n          const link = document.createElement('a')\n          link.href = fileToSave\n          link.setAttribute('download', `${name}`)\n          document.body.appendChild(link)\n          link.click()\n          link.remove()\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDropList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.delete(\n          api_url + '/calculator/drop-list',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            },\n            data: { file_name: name }\n          }\n        )\n        if (res.data['msg']) {\n          const new_list = lists.filter(i => i.list_name !== name)\n          setLists(new_list)\n          setSelectedList('')\n          handleMessage(res.data.msg, 'info')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Grid item>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '40vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            alignContent='flex-start'\n          >\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6' color='error.main'>\n                Load Table\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} pb={2}>\n              <RDialog title='Load Table'\n                message='Confirm load table?'\n                confirmText='LOAD' disabled={!Boolean(selectedList)}\n                action={handleLoadList}\n              >\n                <Button fullWidth variant='contained' color='error'\n                  disabled={!Boolean(selectedList)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  LOAD TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container align='center'\n                alignItems='center'\n                alignContent='flex-start'\n                sx={{ height: '25vh', overflow: 'auto' }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align='center' width='80%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Table Name\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Download\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Drop\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {lists.length > 0 ? lists.map(list => {\n                      const is_sel = selectedList === list.list_name\n                      return (\n                        <TableRow key={list._id.$oid} hover\n                          selected={is_sel}\n                        >\n                          <TableCell align='center'\n                            onClick={() => {\n                              is_sel ?\n                                setSelectedList('')\n                                :\n                                setSelectedList(list.list_name)\n                            }}>\n                            {list.list_name}\n                          </TableCell>\n                          <TableCell align='center'>\n                            <IconButton size='small' color='info'\n                              onClick={() =>\n                                handleDownloadList(list.list_name)\n                              }\n                            >\n                              <Download />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell align='center'>\n                            <RDialog title='Drop Data Table?'\n                              message='Confirm drop Table?'\n                              confirmText='DROP'\n                              action={() => {\n                                handleDropList(list.list_name)\n                              }}\n                            >\n                              <IconButton size='small' color='error'>\n                                <Delete />\n                              </IconButton>\n                            </RDialog>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    }) :\n                      <TableRow>\n                        <TableCell colSpan={3} align='center'>\n                          <Typography variant='h4' color='primary'>\n                            Loading...\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    }\n                  </TableBody>\n                </Table>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Lists","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  IconButton, TextField, Button, Typography\n} from '@mui/material'\nimport {\n  Done, Cancel, Edit, Delete\n} from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst Items = (props) => {\n\n  const {\n    dates, setDates, lists, setLists, hasChanged, setHasChanged, handleMessage\n  } = props\n\n  const { user } = useContext(UserContext)\n  const [selected, setSelected] = useState({ _id: '', percent: '' })\n  const [oneDate, setOneDate] = useState({ _id: '', percent: '' })\n\n  const handleChangeSelected = (e) => {\n    const { name, value } = e.target\n    setOneDate({ ...oneDate, [name]: value })\n  }\n\n  const handleUpdateOne = () => {\n    let newDates = dates.map(item => {\n      return item._id !== selected._id ? item\n        : { _id: oneDate._id, percent: parseFloat(oneDate.percent) }\n    })\n    if (selected._id !== oneDate._id) {\n      newDates.push({ ...selected, percent: -1 })\n    }\n    setDates(newDates)\n    setSelected({ _id: '', percent: '' })\n    setHasChanged(true)\n  }\n\n  const handleDeleteOne = (id) => {\n    const newDates = dates.filter(item => item._id !== id)\n    setDates(newDates)\n    setHasChanged(true)\n  }\n\n  const handleUpdateTable = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { dates: dates },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          const newLists = lists\n          newLists.unshift({\n            _id: { $oid: new Date().getTime() },\n            list_name: res.data.new_list\n          })\n          setLists(newLists)\n          const newDates = dates\n            .filter(item => item.percent !== -1)\n            .sort((a, b) => a._id > b._id ? -1 : (a._id < b._id ? 1 : 0))\n          setDates(newDates)\n          handleMessage(res.data.msg, 'success')\n          setHasChanged(false)\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Paper elevation={5} sx={{ borderRadius: 1 }}>\n      <Box borderRadius={3} p={2}\n        sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n      >\n        <Grid container spacing={1} align='center' pr={2}\n          alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '65vh', overflow: 'auto' }}\n        >\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' width='50%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Date (y/m/d)\n                </TableCell>\n                <TableCell align='center' width='30%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Percentage\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Edit\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Drop\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {dates?.length > 0 ?\n                dates?.map(date => {\n                  const dis = (\n                    selected._id === oneDate._id &&\n                    selected.percent.toString() ===\n                    oneDate.percent.toString()\n                  )\n                  const component = (selected._id === date._id\n                    ?\n                    <TableRow key={date._id} hover selected>\n                      <TableCell>\n                        {<TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' }\n                          }}\n                          name='_id'\n                          value={oneDate._id}\n                          onChange={handleChangeSelected}\n                        />}\n                      </TableCell>\n                      <TableCell>\n                        <TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' },\n                            min: 0\n                          }}\n                          type='number'\n                          name='percent'\n                          value={oneDate.percent}\n                          onChange={handleChangeSelected}\n                        />\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='success'\n                          disabled={dis}\n                          onClick={handleUpdateOne}\n                        >\n                          <Done />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='info'\n                          onClick={() =>\n                            setSelected({ _id: '', percent: '' })\n                          }\n                        >\n                          <Cancel />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                    :\n                    <TableRow key={date._id} hover>\n                      <TableCell align='center'>\n                        {date._id}\n                      </TableCell>\n                      <TableCell align='center'>\n                        {date.percent}\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='warning'\n                          onClick={() => {\n                            setOneDate({\n                              _id: date._id, percent: date.percent\n                            })\n                            setSelected({\n                              _id: date._id, percent: date.percent\n                            })\n                          }}\n                        >\n                          <Edit />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <RDialog title='Delete Data?'\n                          message='Confirm delete Data Percentage?'\n                          confirmText='Delete'\n                          action={() => handleDeleteOne(date._id)}\n                        >\n                          <IconButton size='small' color='error'>\n                            <Delete />\n                          </IconButton>\n                        </RDialog>\n                      </TableCell>\n                    </TableRow>\n                  )\n                  return component\n                })\n                :\n                <TableRow>\n                  <TableCell colSpan={4} align='center'>\n                    <Typography variant='h4' color='primary'>\n                      Loading...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              }\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid container spacing={2} py={2}>\n          <Grid item xs={6} md={9}></Grid>\n          <Grid item xs={6} md={3}>\n            <RDialog title='Update Table' message='Confirm Update Table?'\n              confirmText='UPDATE' action={handleUpdateTable} color='warning'\n              disabled={!hasChanged}\n            >\n              <Button fullWidth variant='contained' color='error'\n                disabled={!hasChanged}\n              >\n                Update Table\n              </Button>\n            </RDialog>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Items","import { useEffect, useState, useContext } from 'react'\nimport { Grid, Typography, Snackbar, Alert } from '@mui/material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport NewItem from './NewItem'\nimport Lists from './Lists'\nimport Items from './Items'\n\n\nconst CalculatorSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const [dates, setDates] = useState([])\n  const [lists, setLists] = useState([])\n  const [hasChanged, setHasChanged] = useState(false)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n          setLists(res.data.lists)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  return (\n    <>\n      {user?.is_admin ?\n        <>\n          <Grid item xs={12} md={6}>\n\n            <NewItem\n              dates={dates}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n            <Lists\n              lists={lists}\n              setLists={setLists}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n            <Items\n              dates={dates}\n              setDates={setDates}\n              lists={lists}\n              setLists={setLists}\n              hasChanged={hasChanged}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n\n        </>\n        :\n        <Grid item>\n          <Typography variant='h3' color='error'>\n            ⛔ This section is for admins only\n          </Typography>\n        </Grid>\n      }\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default CalculatorSettings;","import { useState, useContext } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControlLabel, Snackbar, Alert\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport { UserContext } from '../../tools/contexts'\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxiosEffect, useAxios } from '../../tools/axiosTool'\n\nconst ExpressionsSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const initialExpression = {\n    id: '',\n    is_system: false,\n    identifier: '',\n    pattern: '',\n    replacement: ''\n  }\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n  const [expression, setExpression] = useState(initialExpression)\n  const [edit, setEdit] = useState(false)\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  const handleChangeExpression = (e) => {\n    const { name, value, checked } = e.target\n    setExpression({\n      ...expression,\n      [name]: name !== 'is_system' ? value : checked\n    })\n  }\n\n  const handleClickExpression = (exp) => {\n    setExpression(exp)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setExpression(initialExpression)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n      if (d.msg) {\n        handleMessage(d.msg, 'success')\n      }\n      setExpression(initialExpression)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  useAxiosEffect(\n    '/answers/get-expressions', 'answers',\n    ...queryHandlers\n  )\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-expression', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={7}>\n          <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n            border={2} p={2} borderRadius={1} borderColor='info.main'\n          >\n            <Grid container spacing={1} align='center' pr={2}>\n              <Grid item xs={12} md={8}>\n                <TextField size='small' label='Identifier' color='warning'\n                  fullWidth name='identifier'\n                  value={expression.identifier}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n\n              {user?.is_admin && !edit &&\n                <Grid item xs={12} md={3}>\n                  <FormControlLabel control={\n                    <Switch\n                      name='is_system'\n                      checked={expression.is_system}\n                      onChange={handleChangeExpression}\n                    />\n                  }\n                    label='System'\n                  />\n                </Grid>\n              }\n              <Grid item xs={12} md={11}>\n                <TextField size='small' label='Pattern' color='warning'\n                  fullWidth name='pattern'\n                  value={expression.pattern} onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={11}>\n                <TextField label='Replacement' color='warning'\n                  fullWidth multiline rows={4} name='replacement'\n                  value={expression.replacement}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={1}>\n                <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                  confirmText={edit ? 'Update' : 'Create'} message={\n                    edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                  } action={edit ? () => handleUpdateAnswer({\n                    expression: {\n                      ...expression, id: expression._id.$oid\n                    }\n                  }) : () => handleCreateAnswer({\n                    expression: expression\n                  })} color={edit ? 'warning' : 'success'}\n                >\n                  <IconButton color={edit ? 'primary' : 'success'}\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Save />\n                  </IconButton>\n                </RDialog>\n                <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                  confirmText='Delete' action={() => handleDeleteAnswer({\n                    expression: {\n                      id: expression._id.$oid\n                    }\n                  })}\n                >\n                  <IconButton color='error'\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Delete />\n                  </IconButton>\n                </RDialog>\n                <IconButton color='warning'\n                  disabled={!Boolean(expression.identifier)}\n                  onClick={handleCancel}\n                >\n                  <Cancel />\n                </IconButton>\n              </Grid>\n              {user?.is_admin &&\n                <Grid item xs={12} md={6}>\n                  <Typography variant='h6'>\n                    System\n                  </Typography>\n                  <Stack spacing={1} p={1}\n                    sx={{\n                      paddingBlockEnd: 2, height: '38vh', overflow: 'auto'\n                    }}\n                  >\n                    {sysRegex.length > 0 ? sysRegex.map((exp) => {\n                      return (\n                        <Button key={exp._id.$oid} fullWidth variant='contained'\n                          color='error'\n                          onClick={() => handleClickExpression(exp)}\n                        >\n                          {exp.identifier}\n                        </Button>\n                      )\n                    }) :\n                    <Typography variant='h4' color='error'>\n                      Loading...\n                    </Typography>\n                    }\n                  </Stack>\n                </Grid>\n              }\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Own\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '38vh', overflow: 'auto' }}\n                >\n                  {ownRegex.length > 0 ? ownRegex.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        color='primary'\n                        onClick={() => handleClickExpression(ans)}\n                      >\n                        {ans.identifier}\n                      </Button>\n                    )\n                  }) :\n                  <Typography variant='h4' color='primary'>\n                    Loading...\n                  </Typography>\n                  }\n                </Stack>\n              </Grid>\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default ExpressionsSettings","import { useContext, useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport axios from 'axios'\nimport {\n  Typography, Button, Grid, TextField, Container, Alert, Fade\n} from '@mui/material'\n\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst UserLogin = () => {\n\n  const [uName, setUName] = useState('')\n  const [uPass, setUPass] = useState('')\n  const [loginState, setLoginState] = useState('')\n\n  const { user, setUser } = useContext(UserContext)\n  const { setUserSettings } = useContext(UserSettingsContext)\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  useEffect(() => {\n    if (user) {\n      navigate(\n        location.pathname === '/login' ? '/news' : location.pathname,\n        { replace: true }\n      )\n    }\n  })\n\n  const handleUName = e => {\n    setUName(e.target.value)\n  }\n\n  const handleUPass = e => {\n    setUPass(e.target.value)\n  }\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    const path = location.pathname === '/login' ? '/news' : location.pathname\n\n    try {\n      let res = await axios.post(\n        api_url + '/users/signin',\n        {\n          'username': uName,\n          'password': uPass\n        }\n      )\n      if (res.data['user']) {\n        setUser({ ...res.data.user, username: uName })\n        setUserSettings({ ...res.data.settings })\n      } else {\n        setUName('')\n        setUPass('')\n        setLoginState(res.data['msg'])\n        setTimeout(() => {\n          setLoginState('')\n        }, 2500);\n      }\n      // console.log(res.data['user'])\n    }\n    catch (error) {\n      console.log(error)\n    }\n    navigate(path, { replace: true })\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3} margin={0} >\n        <Grid item xs={12}>\n          <Typography variant='h3' color='primary'>User Login</Typography>\n        </Grid>\n        <Grid item >\n          <Fade in={Boolean(loginState)} timeout={1000}>\n            <Alert severity='warning' variant='outlined'>\n              {loginState}\n            </Alert>\n          </Fade>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uName'\n            label='Username'\n            value={uName}\n            onChange={handleUName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uPass'\n            label='Password'\n            type='password'\n            value={uPass}\n            onChange={handleUPass}\n            onKeyPress={\n              e => { if (e.key === 'Enter') { handleLogin(e) } }\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='contained' color='primary' onClick={handleLogin}>\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default UserLogin;","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel,\n  Fade, Alert\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst UpdateUserForm = (props) => {\n\n  const { user, setUser, ...others } = props\n\n  const initialUser = {\n    username: '',\n    email: '',\n    password: '',\n    new_password: '',\n    confirm_new_password: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n  const [userData, setUserData] = useState(initialUser)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-user-data',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUserData({\n            ...res.data,\n            password: '',\n            new_password: '',\n            confirm_new_password: ''\n          })\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleChangeUser = (e) => {\n    const { name, value, checked } = e.target\n    setUserData({\n      ...userData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [samePassword, setSamePassword] = useState(true)\n  const handleSamePassword = (e) => {\n    const { name, value } = e.target\n    if (name === 'new_password') {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['confirm_new_password'] === value\n      )\n    } else {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['new_password'] === value\n      )\n    }\n  }\n\n  const [updateState, setUpdateState] = useState({ msg: '', vnt: 'info' })\n  const handleUpdateUser = () => {\n    if (!samePassword) {\n      setUpdateState({ msg: \"new password doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUpdateState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-user',\n          userData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUpdateState({ msg: res.data['msg'], vnt: 'success' })\n          const resultUser = {\n            ...user,\n            username: userData['username'],\n            first_name: userData['first_name'],\n            last_name: userData['last_name'],\n            is_admin: userData['is_admin']\n          }\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'success' })\n          }, 2500)\n          if (res.data['wrn']) {\n            setTimeout(() => {\n              setUpdateState({ msg: res.data['wrn'], vnt: 'warning' })\n            }, 2600)\n            setTimeout(() => {\n              setUpdateState({ msg: '', vnt: 'warning' })\n              setUser(resultUser)\n            }, 5100)\n          } else {\n            setUser(resultUser)\n          }\n        } else {\n          setUpdateState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSamePassword(true)\n    }, 500);\n  }\n\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update My User Account\n              </Typography>\n            </Grid>\n            <Grid item xs={12} mx={1}>\n              <Typography variant='h6' color='GrayText'>\n                {userData['email']}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={userData['username']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            {user['is_admin'] &&\n              <Grid item mb={0}>\n                <FormControlLabel control={\n                  <Switch\n                    name='is_admin'\n                    checked={userData['is_admin']}\n                    onChange={handleChangeUser}\n                  />\n                }\n                  label='Is Admin'\n                />\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='First Name'\n                value={userData['first_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={userData['last_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <Paper elevation={1} sx={{\n                background: 'darkGray2',\n                display: 'inline-block'\n              }}>\n                <Grid item pb={2}>\n                  <TextField size='small' error={!samePassword}\n                    name='new_password'\n                    label='New Password'\n                    type='password'\n                    value={userData['new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField size='small' error={!samePassword}\n                    name='confirm_new_password'\n                    label='Confirm New Password'\n                    type='password'\n                    value={userData['confirm_new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n              </Paper>\n              <Grid container columns={2} pt={2}>\n                <Grid item pb={2}>\n                  <TextField size='small' color='warning'\n                    focused\n                    name='password'\n                    label='Password'\n                    type='password'\n                    value={userData['password']}\n                    onChange={handleChangeUser}\n                    onKeyPress={\n                      e => {if (e.key === 'Enter') {handleUpdateUser()}}\n                    }\n                  />\n                </Grid>\n                <RDialog\n                  title='Update User' message='Confirm user update?'\n                  confirmText='UPDATE' color='secondary'\n                  action={handleUpdateUser}\n                >\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"warning\">\n                      UPDATE\n                    </Button>\n                  </Grid>\n                </RDialog>\n              </Grid>\n              <Grid item pb={2}>\n                <Fade in={Boolean(updateState['msg'])} timeout={1000}>\n                  <Alert severity={updateState['vnt']} variant='outlined'>\n                    {updateState['msg']}\n                  </Alert>\n                </Fade>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n    </Fragment >\n  )\n}\n\nexport default UpdateUserForm","import { Fragment, useState, useContext } from 'react'\nimport {\n  Grid, Typography, Paper, Button, Switch, FormControlLabel, FormControl,\n  Select, MenuItem, Snackbar, Alert, TextField\n} from '@mui/material'\n\nimport { UserSettingsContext } from '../tools/contexts'\nimport RDialog from '../tools/ReusableDialog'\nimport { useAxios } from '../tools/axiosTool'\n\n\nconst UserOptions = (props) => {\n\n  const { userSettings, setUserSettings } = useContext(UserSettingsContext)\n  const [settings, setSettings] = useState(userSettings)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const handleChangeSettings = (e) => {\n    const { name, value, checked } = e.target\n    setSettings({\n      ...settings,\n      [name]: name !== 'calculator' ? value : checked\n    })\n  }\n\n  const handleSaveSettings = useAxios(\n    'put', '/users/update-user-settings', 'settings',\n    (d) => {\n      setUserSettings(d.settings)\n      handleMessage(d.msg, 'success')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  return (\n    <Fragment {...props}>\n      <Grid item xs={12}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"primary\">\n                User Settings\n              </Typography>\n            </Grid>\n            <Grid item xs={11}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='theme_mode'\n                  value={settings.theme_mode}\n                  onChange={handleChangeSettings}\n                >\n                  <MenuItem value='dark'> DARK THEME </MenuItem>\n                  <MenuItem value='light'> LIGHT THEME</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel control={\n                <Switch\n                  name='calculator'\n                  checked={settings.calculator}\n                  onChange={handleChangeSettings}\n                />\n              }\n                label='Basic Calculator for Default'\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Posts Font Family'\n                name='postsFontFamily'\n                value={settings.postsFontFamily}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Notification Volume'\n                type='range'\n                inputProps={{ min: 0, max: 1, step: 0.1}}\n                name='notifVol'\n                value={settings.notifVol}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={12} px={2} pb={2}>\n              <RDialog\n                title='Save User Settings' confirmText='UPDATE'\n                message='Confirm Save user settings?' color='warning'\n                action={() => handleSaveSettings({\n                  settings: {\n                    theme_mode: settings.theme_mode,\n                    calculator: settings.calculator,\n                    postsFontFamily: settings.postsFontFamily,\n                    notifVol: parseFloat(settings.notifVol)\n                  }\n                })}\n              >\n                <Button variant=\"contained\" color=\"warning\">\n                  CONFIGURE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Fragment >\n  )\n}\n\nexport default UserOptions\n","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, ListItem, ListItemButton, IconButton, ListItemText,\n  Fade, Alert\n} from '@mui/material'\nimport { Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst OtherUsersList = (props) => {\n\n  const {\n    user, setEdit, usersSate, setUsersState,\n    initialOtherUser, setOtherUserData, ...others\n  } = props\n  const [usersData, setUsersData] = useState([])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-users',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUsersData(res.data)\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user, usersSate])\n\n  const handleEditUser = (user) => {\n    setOtherUserData({ ...user })\n    setEdit(true)\n  }\n\n  const handleDeleteUser = (email) => {\n    (async () => {\n      try {\n        const res = await axios.delete(\n          api_url + '/users/delete-other-user',\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            },\n            data: { email: email }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'info' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'info' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n    setEdit(false)\n    setOtherUserData(initialOtherUser)\n  }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                List of Active Users\n              </Typography>\n            </Grid>\n            {usersData.length > 0 ? usersData.map((otherUser) => {\n              return (\n                <ListItem key={otherUser['username']} secondaryAction={\n                  <RDialog title='Delete' message='Confirm user Delete?'\n                    confirmText='DELETE' action={() =>\n                      handleDeleteUser(otherUser['email'])\n                    }\n                  >\n                    <IconButton edge='end'>\n                      <Delete fontSize='large' color='error' />\n                    </IconButton>\n                  </RDialog>\n                }>\n                  <ListItemButton onClick={() => { handleEditUser(otherUser) }}>\n                    <ListItemText\n                      primary={[\n                        `${otherUser['username']} -`,\n                        otherUser['first_name'],\n                        otherUser['last_name']\n                      ].join(' ')}\n                      secondary={otherUser['email']}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              )\n            }) :\n              <Grid item xs={12}>\n                <Typography variant='h4' color='secondary'>\n                  Loading...\n                </Typography>\n              </Grid>\n            }\n          </Grid>\n        </Paper>\n        <Grid item pt={3}>\n          <Fade in={Boolean(usersSate['msg'])} timeout={1000}>\n            <Alert severity={usersSate['vnt']} variant='outlined'>\n              {usersSate['msg']}\n            </Alert>\n          </Fade>\n        </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default OtherUsersList","import { Fragment, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst CreateUpdateOtherUser = (props) => {\n\n  const {\n    user, edit, setEdit, setUsersState, initialOtherUser,\n    otherUserData, setOtherUserData, ...others\n  } = props\n\n  const handleChangeOtherUser = (e) => {\n    const { name, value, checked } = e.target\n    setOtherUserData({\n      ...otherUserData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [sameEmail, setSameEmail] = useState(true)\n  const handleSameEmail = (e) => {\n    const { name, value } = e.target\n    if (name === 'email') {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['confirm_email'] === value\n      )\n    } else {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['email'] === value\n      )\n    }\n  }\n\n  const handleCreateOtherUser = () => {\n    for (let [field, value] of Object.entries(otherUserData)) {\n      if (value === '') {\n        setUsersState({ msg: `Missing Value ${field}`, vnt: 'error' })\n        setTimeout(() => {\n          setUsersState({ msg: '', vnt: 'error' })\n        }, 2500);\n        return\n      }\n    }\n    if (!sameEmail) {\n      setUsersState({ msg: \"Email doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUsersState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/signup',\n          otherUserData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setOtherUserData(initialOtherUser)\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSameEmail(true)\n    }, 500);\n  }\n\n  const handleUpdateOtherUser = () => {\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-other-user',\n          (({ email, username, first_name, last_name, is_admin }) => (\n            { email, username, first_name, last_name, is_admin }\n          ))(otherUserData),\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n  }\n\n  const handleCancelEditUser = () => {\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n    setSameEmail(true)\n  }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update/Create User Account\n              </Typography>\n            </Grid>\n            {!edit ? <>\n              <Grid item>\n                <Paper elevation={1} sx={{\n                  background: 'darkGray2',\n                  display: 'inline-block'\n                }}>\n                  <Grid item pb={2}>\n                    <TextField size='small' error={!sameEmail}\n                      name='email'\n                      label='Email (ID - immutable)'\n                      value={otherUserData['email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField size='small' error={!sameEmail}\n                      name='confirm_email'\n                      label='Confirm Email'\n                      value={otherUserData['confirm_email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                </Paper>\n              </Grid>\n            </> :\n              <Grid item xs={12} mx={1}>\n                <Typography variant='h6' color='GrayText'>\n                  {otherUserData['email']}\n                </Typography>\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={otherUserData['username']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item mb={0}>\n              <FormControlLabel control={\n                <Switch\n                  name='is_admin'\n                  checked={otherUserData['is_admin']}\n                  onChange={handleChangeOtherUser}\n                />\n              }\n                label='Is Admin'\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='Fisrs Name'\n                value={otherUserData['first_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={otherUserData['last_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <Grid container columns={2} sx={{ alignItems: 'flex-end' }}>\n                {edit ? <>\n                  <Grid item pl={2} pb={2}>\n                    <Button variant=\"contained\" color=\"error\"\n                      onClick={handleCancelEditUser}\n                    >\n                      CANCEL\n                    </Button>\n                  </Grid>\n                  <RDialog title='Update Other User'\n                    message='Confirm user update?' color='secondary'\n                    confirmText='UPDATE' action={handleUpdateOtherUser}\n                  >\n                    <Grid item pl={2} pb={2}>\n                      <Button variant=\"contained\" color=\"warning\">\n                        UPDATE\n                      </Button>\n                    </Grid>\n                  </RDialog>\n                </> : <>\n                  <Grid item pb={2}>\n                    <Paper elevation={1} sx={{\n                      maxWidth: '230px',\n                      background: 'darkGray2',\n                      display: 'inline-block'\n                    }}>\n                      <Grid item p={2}>\n                        <Typography variant=\"body1\"\n                          color=\"warning.main\"\n                        >\n                          By default the password will be \"abc123\"\n                          the user must change it later\n                        </Typography>\n                      </Grid>\n                    </Paper>\n                  </Grid>\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"success\"\n                      onClick={handleCreateOtherUser}\n                    >\n                      CREATE\n                    </Button>\n                  </Grid>\n                </>}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default CreateUpdateOtherUser","import { useContext, useState } from 'react'\nimport {\n  Container, Grid, Typography,\n} from '@mui/material'\n\nimport { UserContext } from '../tools/contexts'\nimport UpdateUserForm from './UpdateUserFrom'\nimport UserOptions from './UserOptions'\nimport OtherUsersList from './OtherUsersList'\nimport CreateUpdateOtherUser from './CreateUpdateOtherUser'\n\n\nconst UserAccount = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  const initialOtherUser = {\n    username: '',\n    email: '',\n    confirm_email: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n\n  const [edit, setEdit] = useState(false)\n  const [otherUserData, setOtherUserData] = useState(initialOtherUser)\n  const [usersSate, setUsersState] = useState({ msg: '', vnt: 'success' })\n\n  const displayAdmin = user.is_admin ? 'block' : 'none'\n  const displayNoAdmin = user.is_admin ? 'none' : 'block'\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" color=\"secondary\">User Account</Typography>\n      </Grid>\n      <Grid container spacing={2}>\n\n        <Grid item xs={12} md={4} sx={{ display: displayAdmin }}>\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n          <Grid item mt={2}> </Grid>\n          <UserOptions />\n        </Grid>\n\n        <Grid item xs={12} md={4} sx={{ display: displayNoAdmin }}>\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4} sx={{ display: displayNoAdmin }} >\n          <UserOptions />\n        </Grid>\n\n        {user.is_admin && <>\n          <OtherUsersList\n            user={user}\n            setEdit={setEdit}\n            usersSate={usersSate}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            setOtherUserData={setOtherUserData}\n          />\n\n          <CreateUpdateOtherUser\n            user={user}\n            edit={edit}\n            setEdit={setEdit}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            otherUserData={otherUserData}\n            setOtherUserData={setOtherUserData}\n          />\n        </>}\n\n      </Grid>\n    </Container >\n  )\n}\n\nexport default UserAccount;","import { useContext, useEffect, useMemo } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { cyan, deepOrange, deepPurple } from \"@mui/material/colors\"\nimport { Paper, CssBaseline } from \"@mui/material\"\n\nimport Navbar from './NavBar'\nimport AuthenticatedContent from './AuthenticatedContent'\nimport { routes, sub_routes } from './tools/routes'\n\nimport News from './_news/News'\nimport Calculators from './_calculator/Calculators'\nimport Answers from './_answers/Answers'\nimport Settings from './_settings/Settings'\nimport AnswersSettings from './_settings/answers/AnswersSettings'\nimport CalculatorSettings from './_settings/calculator/CalculatorSettings'\nimport ExpressionsSettings from './_settings/expressions/ExpressionsSettings'\nimport UserLogin from './_user/UserLogin'\nimport UserAccount from './_user/UserAccount'\n\nimport { UserContext, AuthContext, UserSettingsContext } from './tools/contexts'\n\nconst App = () => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { userSettings } = useContext(UserSettingsContext)\n\n  const theme = useMemo(() => {\n\n    const paperLightBG = userSettings.theme_mode === 'light' ? {\n      background: {\n        ...window.lightBG\n      }\n    } : {}\n\n    return createTheme({\n      palette: {\n        mode: userSettings.theme_mode,\n        primary: cyan,\n        secondary: deepOrange,\n        info: deepPurple,\n        ...paperLightBG\n      },\n      typography: {\n        fontSize: window.globalFontSize\n      }\n    })\n  }\n    , [userSettings.theme_mode]\n  )\n\n  useEffect(() => {\n    if (user?.token) {\n      setAuth(true)\n    }\n  }, [user, setAuth])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme>\n        <Paper sx={{ paddingBlockEnd: 2, minHeight: '100vh' }} square>\n          <Navbar />\n          {(auth ?\n            <AuthenticatedContent\n              setAuth={setAuth} user={user} setUser={setUser}\n            >\n              <Routes>\n                <Route path={'/'} element={<Navigate to={routes[0]} />} />\n                <Route path={routes[0]} element={<News />} />\n                <Route path={routes[1]} element={<Calculators />} />\n                <Route path={routes[2]} element={<Answers />} />\n                <Route path={routes[3]} element={<Settings />} >\n                  <Route\n                    path={sub_routes[0]} element={<AnswersSettings />} />\n                  <Route\n                    path={sub_routes[1]} element={<CalculatorSettings />} />\n                  <Route\n                    path={sub_routes[2]} element={<ExpressionsSettings />} />\n                </Route>\n                <Route path={'login'} element={<UserLogin />} />\n                <Route path={'account'} element={<UserAccount />} />\n              </Routes>\n            </AuthenticatedContent>\n            :\n            <UserLogin />\n          )}\n        </Paper>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalContext from './components/tools/contexts'\n\nimport App from './components/App';\n\nReactDOM.render(\n    <>\n      <BrowserRouter>\n        <GlobalContext>\n          <App />\n        </GlobalContext>\n      </BrowserRouter>\n    </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}