{"version":3,"sources":["components/_news/markdownStyle.module.css","components/tools/useUser.js","components/tools/useSettings.js","components/tools/contexts.jsx","components/tools/routes.js","components/MenuTab.jsx","components/tools/ReusableDialog.jsx","components/AvatarMenu.jsx","components/NavMenu.jsx","components/NavBar.jsx","components/tools/beep.mp3","components/AuthenticatedContent.jsx","components/tools/axiosTool.js","components/tools/daysAgo.js","components/_news/Posts.jsx","components/_news/PostSelect.jsx","components/_news/FullPanel.jsx","components/_news/Filter.jsx","components/_news/CreatePost.jsx","components/_news/News.jsx","components/_calculator/Complete.jsx","components/_calculator/Basic.jsx","components/_calculator/CalcHistory.jsx","components/_calculator/Calculators.jsx","components/tools/strFormat.js","components/_answers/CreditCards.jsx","components/_answers/AnswerButtons.jsx","components/_answers/Answers.jsx","components/_settings/Settings.jsx","components/_settings/answers/EditCreditCards.jsx","components/_settings/answers/EditAnswers.jsx","components/_settings/answers/AnswersSettings.jsx","components/_settings/calculator/NewItem.jsx","components/_settings/calculator/Lists.jsx","components/_settings/calculator/Items.jsx","components/_settings/calculator/CalculatorSettings.jsx","components/_settings/expressions/ExpressionsSettings.jsx","components/_user/UserLogin.jsx","components/_user/UpdateUserFrom.jsx","components/_user/UserOptions.jsx","components/_user/OtherUsersList.jsx","components/_user/CreateUpdateOtherUser.jsx","components/_user/UserAccount.jsx","components/App.jsx","index.js"],"names":["module","exports","useUser","useState","userString","localStorage","getItem","JSON","parse","getUser","user","setUser","setItem","stringify","useSettings","defaultSettings","theme_mode","calculator","postsFontFamily","notifVol","settingsStr","getSettings","settings","setSettings","UserContext","createContext","AuthContext","auth","setAuth","PostContext","fetchedPosts","setFetchedPosts","UserSettingsContext","userSettings","setUserSettings","GlobalContext","children","userValue","useMemo","authValue","postsValue","userSettingsValue","Provider","value","routes","sub_routes","api_url","host","MenuTab","props","items","setTabValue","icon","label","disabled","others","navigate","useNavigate","anchorEl","setAnchorEl","open","Boolean","Tab","iconPosition","id","onClick","e","currentTarget","undefined","Menu","onClose","TransitionComponent","Fade","map","item","MenuItem","sub_route","RDialog","title","message","confirmText","color","action","setOpen","justClose","divProps","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","error","console","autoFocus","stringAvatar","first_name","last_name","join","toUpperCase","AvatarMenu","useContext","location","useLocation","bg","pathname","split","openMenu","IconButton","variant","Avatar","sx","bgcolor","Typography","marginX","mb","email","Divider","ListItemIcon","Person","removeItem","Logout","NavMenu","Newspaper","key","route","Calculate","ViewList","Settings","is_admin","push","display","xs","sm","textAlign","ArrowForwardIos","Navbar","tabValue","count","setCount","path","includes","newPosts","length","AppBar","position","Toolbar","justifyContent","Tabs","visibility","indicatorColor","onChange","_","newValue","Badge","badgeContent","anchorOrigin","vertical","horizontal","component","Link","to","AuthenticatedContent","timeStamp","setTimeStamp","soundOptions","volume","parseFloat","useSound","beep","playBeep","useEffect","source","axios","CancelToken","checkForNewPosts","a","post","last_post","cancelToken","token","headers","Accept","Authorization","res","data","posts","warn","errCode","response","status","watcher","setInterval","clearInterval","cancel","refreshing","get","useAxios","method","uri","expected","suc","wrn","err","TCErr","put","delete","useAxiosEffect","daysAgo","today","date","delta","toFixed","PostPreview","post_props","newPost","newSeverity","Alarm","severity","Grid","Alert","style","fontFamily","fontSize","AlertTitle","className","mdStyle","remarkPlugins","remarkGfm","content","Date","setDate","getDate","parseInt","days_offset","toLocaleDateString","Posts","filter","owner","setNewPost","contentRef","handleMessage","stackRef","useRef","postToDelete","setPostToDelete","severity_filter","owner_filter","filteredPosts","_id","dividedPosts","getTime","last_day","forEach","other_day","divider","md","Box","border","p","borderRadius","borderColor","height","Stack","spacing","pr","ref","paddingBlockEnd","overflow","element","Chip","canEdit","onDoubleClick","current","scrollTo","top","behavior","focus","username","pub","is_public","$date","PostSelect","options","option","setOption","FormControl","fullWidth","Select","size","target","op","FullPanel","setSeverity","setOwner","setNewSeverity","setTo","handleChange","handleSend","send_props","Paper","elevation","container","align","alignItems","TextField","name","inputRef","rows","multiline","type","inputProps","min","max","step","endIcon","Send","Filter","CreatePost","News","msg","vnt","setMessage","getSeverity","getPublic","sender","d","creation","Container","maxWidth","margin","pt","Snackbar","autoHideDuration","Complete","history","setHistory","first","second","third","fields","setFields","sign","setSign","operation","setOperation","expression","setExpression","handleQuery","url","to_set","Object","entries","field","calculation","footnote","result","navigator","clipboard","writeText","handleGetFirst","dataset","handleGetSecond","handleGetThird","handleEvaluate","handleEnterOnFields","minHeight","width","RadioGroup","px","FormControlLabel","control","Radio","InputProps","startAdornment","InputAdornment","endAdornment","onKeyPress","LooksOne","LooksTwo","Looks3","py","InputLabelProps","Basic","price","str_date","handleGetPrice","reverse","CalcHistory","registries","dividedRegistries","reg","backgroundColor","alignContent","tColor","Tooltip","placement","disableInteractive","arrow","followCursor","whiteSpace","Calculator","openSB","setOpenSB","basic","setBasic","labelPlacement","Switch","checked","strFormat","str","regexs","args","mut_str","pattern","replacement","replace","RegExp","match","index","CustomCell","TableCell","CreditCards","payMeths","sysRegex","setPrice","paymentMethods","last_card","formatedPayMeths","meth","card_name","header","total","increase","monthly","installments","$oid","pos_code","description","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","colSpan","hover","handleCopy","ContentCopy","AnswerButtons","commonAnswers","ownAnswers","ownRegex","text","setText","answerList","reduce","resObj","curObj","handleClickAnswer","focused","readOnly","Cancel","ans","enterDelay","background","Answers","setPayMeths","setCommonAnswers","setOwnAnswers","setSysRegex","setOwnRegex","answers","payment_methods","common_answers","own_answers","sys_regex","own_regex","EditCreditCards","initialValue","newCard","setNewCard","selected","setSelected","setMethod","handleChangeMethod","handleAddCard","handleAddMethod","handleUpdateCardName","handleUpdateMethod","handleDropCard","handleDropMethod","Add","new_name","Done","Edit","Delete","EditAnswers","colors","initialAnswer","common","order","answer","setAnswer","edit","setEdit","handleChangeAnswer","queryHandlers","handleCreateAnswer","handleUpdateAnswer","handleDeleteAnswer","hex","Save","AnswersSettings","NewItem","dates","setDates","setHasChanged","initialNewOne","percent","increaseAll","newOne","setNewOne","upAll","setUpAll","handleChangeNewOne","addSuccessiveIncreases","inc","b","newPercent","pb","Checkbox","newDate","newDates","startIcon","ArrowUpward","Lists","lists","setLists","selectedList","setSelectedList","fetchList","list_name","list","is_sel","file_name","fileToSave","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleDownloadList","Download","new_list","i","handleDropList","Items","hasChanged","oneDate","setOneDate","handleChangeSelected","handleUpdateOne","dis","toString","handleDeleteOne","newLists","unshift","sort","CalculatorSettings","ExpressionsSettings","initialExpression","is_system","identifier","handleChangeExpression","handleClickExpression","exp","UserLogin","uName","setUName","uPass","setUPass","loginState","setLoginState","handleLogin","preventDefault","setTimeout","log","in","timeout","UpdateUserForm","password","new_password","confirm_new_password","userData","setUserData","handleChangeUser","samePassword","setSamePassword","handleSamePassword","updateState","setUpdateState","handleUpdateUser","resultUser","mx","columns","UserOptions","handleChangeSettings","handleSaveSettings","OtherUsersList","usersSate","setUsersState","initialOtherUser","setOtherUserData","usersData","setUsersData","otherUser","ListItem","secondaryAction","edge","ListItemButton","handleEditUser","ListItemText","primary","secondary","CreateUpdateOtherUser","otherUserData","handleChangeOtherUser","sameEmail","setSameEmail","handleSameEmail","pl","UserAccount","confirm_email","displayAdmin","displayNoAdmin","mt","App","theme","createTheme","palette","mode","cyan","deepOrange","info","deepPurple","paper","default","ThemeProvider","CssBaseline","enableColorScheme","square","Calculators","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.85123e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdStyle\":\"markdownStyle_mdStyle__38Iau\"};","import { useState } from 'react';\n\nconst useUser = () => {\n  \n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const userObj = JSON.parse(userString);\n    return userObj\n  };\n\n  const [user, setUser] = useState(getUser());\n\n  const saveUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  };\n\n  return [\n    user,\n    saveUser\n  ]\n}\n\nexport default useUser;","import { useState } from 'react';\n\nconst useSettings = () => {\n\n  const defaultSettings = {\n    theme_mode: 'dark',\n    calculator: true,\n    postsFontFamily: 'Helvetica',\n    notifVol: 0.1\n  }\n  \n  const getSettings = () => {\n    const settingsStr = localStorage.getItem('settings');\n    const settingsObj = {...defaultSettings, ...JSON.parse(settingsStr)};\n    return settingsObj\n  };\n\n  const [settings, setSettings] = useState(getSettings());\n\n  const saveSettings = settings => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    setSettings(settings);\n  };\n\n  return [\n    settings,\n    saveSettings\n  ]\n}\n\nexport default useSettings;","import { useMemo, createContext, useState } from \"react\"\nimport useUser from './useUser'\nimport useSettings from \"./useSettings\"\n\n// 1. Create and export contexts\nexport const UserContext = createContext(\n  { user: '', setUser: () => { } })\nexport const AuthContext = createContext(\n  { auth: '', setAuth: () => { } })\nexport const PostContext = createContext(\n  { fetchedPosts: [], setFetchedPosts: () => { } })\nexport const UserSettingsContext = createContext(\n  { userSettings: '', setUserSettings: () => { } })\n// -----------------------------\n\nconst GlobalContext = ({ children }) => {\n\n  // 2. Packing the value and setter function\n  const [user, setUser] = useUser()\n  const userValue = useMemo(\n    () => ({ user, setUser }),\n    [user, setUser]\n  )\n  const [auth, setAuth] = useState(false)\n  const authValue = useMemo(\n    () => ({ auth, setAuth }),\n    [auth, setAuth]\n  )\n  const [fetchedPosts, setFetchedPosts] = useState([])\n  const postsValue = useMemo(\n    () => ({ fetchedPosts, setFetchedPosts }),\n    [fetchedPosts, setFetchedPosts]\n  )\n  const [userSettings, setUserSettings] = useSettings()\n  const userSettingsValue = useMemo(\n    () => ({ userSettings, setUserSettings }),\n    [userSettings, setUserSettings]\n  )\n  // ----------------------------------------\n\n  return (\n\n    // 3. Provide the contexts\n    <UserContext.Provider value={userValue}>\n      <AuthContext.Provider value={authValue}>\n        <PostContext.Provider value={postsValue}>\n          <UserSettingsContext.Provider value={userSettingsValue}>\n            {children}\n          </UserSettingsContext.Provider>\n        </PostContext.Provider>\n      </AuthContext.Provider>\n    </UserContext.Provider>\n    // -----------------------\n  )\n}\n\nexport default GlobalContext","// Do not change the order of \"routes\" and \"sub_routes\", \n// append new ones (to the tail) to make the app grow.\nexport const routes = [\n  '/news',\n  '/calculators',\n  '/answers',\n  '/settings',\n]\n\nexport const sub_routes = [\n  'answers',\n  'calculator',\n  'expressions'\n]\n\nconst host = {\n  development: 'http://localhost:5000/',\n  production: 'https://audiocenter-in.herokuapp.com/'\n}[process.env.NODE_ENV]\n\nconst api_root = '/api-v1'\n\nexport const api_url = host + api_root","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Tab, Menu, MenuItem, Fade } from '@mui/material'\n\nconst MenuTab = (props) => {\n\n  const { value, items, setTabValue, icon, label, disabled, ...others } = props\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (sub_route) => {\n    setAnchorEl(null)\n    navigate(`${value}/${sub_route}`)\n    setTabValue(value)\n  }\n\n  return (\n    <>\n      <Tab label={label} {...others}\n        icon={icon} iconPosition='start'\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined} disabled={disabled} />\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          return (\n            <MenuItem\n              onClick={() => { handleClose(item.sub_route) }} key={item.label}>\n              {item.label}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </>\n  )\n\n}\n\nexport default MenuTab;","import { useState } from 'react'\nimport {\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button\n} from '@mui/material'\n\nconst RDialog = (props) => {\n\n  const {\n    title = 'add <title> prop', message = 'add <message> prop',\n    confirmText = 'add <confirmText> prop', color = 'error', disabled = false,\n    action, children, ...others\n  } = props\n\n  const [open, setOpen] = useState(false)\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (e) => {\n    setOpen(false)\n    try {\n      action(e)\n    }\n    catch (error) {\n      console.error(`add <action> prop, or: ${error}`)\n    }\n  }\n\n  const justClose = () => {\n    setOpen(false)\n  }\n\n  const divProps = !disabled ? {\n    onClick: handleOpen\n  } : {}\n\n  return (\n    <>\n      <div {...divProps}>\n        {children}\n      </div>\n      <Dialog {...others}\n        open={open}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button onClick={handleClose} color={color} autoFocus>\n            {confirmText} </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default RDialog","import { useState, useContext } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Avatar, Menu, MenuItem, Typography, Divider, Fade, ListItemIcon\n} from '@mui/material'\nimport { PersonOff as AvIcon, Person, Logout } from '@mui/icons-material'\n\nimport { UserContext, AuthContext } from './tools/contexts'\nimport RDialog from './tools/ReusableDialog'\n\nconst stringAvatar = (user, auth) => {\n\n  if (user && auth) {\n    return [user.first_name[0], user.last_name[0]].join('').toUpperCase()\n  }\n  return <AvIcon />\n}\n\nconst AvatarMenu = props => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { setTabValue, disabled, ...others } = props\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  let bg = location.pathname.split('/')[1] === 'account' ?\n    'secondary.main' :\n    'primary.main'\n\n  if (disabled) { bg = 'default' }\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleOptions = () => {\n    setAnchorEl(null)\n    setTabValue(false)\n    navigate('/account')\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    setUser(null)\n    setAuth(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('settings')\n  }\n\n  return (\n    <>\n      <IconButton variant='outlined' {...others}\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={openMenu ? 'true' : undefined}\n        color='secondary'\n        disabled={disabled} >\n\n        <Avatar sx={{ bgcolor: bg }} children={stringAvatar(user, auth)} />\n\n      </IconButton>\n\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={justClose}\n        TransitionComponent={Fade} >\n        <Typography variant='overline' color='secondary' marginX={2} mb={1} >\n          {[user?.first_name, user?.last_name].join(' ')}\n        </Typography>\n        <Typography variant='subtitle1' color='GrayText' marginX={2} mb={1} >\n          {user?.email}\n        </Typography>\n        <Divider />\n        <MenuItem onClick={handleOptions}>\n          <ListItemIcon>\n            <Person />\n          </ListItemIcon>\n          Options\n        </MenuItem>\n        <RDialog\n          title='LOGOUT' message='Confirm logout?'\n          confirmText='Logout' action={handleLogout}\n        >\n          <MenuItem>\n            <ListItemIcon>\n              <Logout />\n            </ListItemIcon>\n            Logout\n          </MenuItem>\n        </RDialog>\n      </Menu>\n\n\n    </>\n  )\n}\n\nexport default AvatarMenu;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Menu, MenuItem, Fade, Divider, ListItemIcon\n} from '@mui/material'\nimport {\n  Newspaper, Calculate, ViewList, Settings, ArrowForwardIos\n} from '@mui/icons-material'\nimport { Menu as MI } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\n\n\nconst NavMenu = props => {\n\n  const { setTabValue, disabled, user, ...others } = props\n\n  const items = [\n    { label: 'DIVIDER', icon: Newspaper, key: 0 },\n    { label: 'News', route: routes[0] },\n    { label: 'DIVIDER', icon: Calculate, key: 1 },\n    { label: 'Calculators', route: `${routes[1]}` },\n    { label: 'DIVIDER', icon: ViewList, key: 2 },\n    { label: 'Answers', route: routes[2] },\n    { label: 'DIVIDER', icon: Settings, key: 3 },\n    { label: 'Answers Settings', route: `${routes[3]}/${sub_routes[0]}` }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', route: `${routes[3]}/${sub_routes[1]}` }\n    )\n  }\n  items.push(\n    { label: 'Expressions Settings', route: `${routes[3]}/${sub_routes[2]}` }\n  )\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (route) => {\n    setAnchorEl(null)\n    navigate(route)\n    setTabValue(`/${route.split('/')[1]}`)\n  }\n\n  return (\n    <>\n      <IconButton aria-label=\"Go to...\" onClick={handleClick} {...others}\n        sx={{ display: { xs: 'inline-flex', sm: 'none' } }}\n        disabled={disabled}\n      >\n        <MI />\n      </IconButton>\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          if (item.label === 'DIVIDER') {\n            return (\n              <Divider key={item.key} textAlign='right'>\n                {<item.icon />}\n              </Divider>\n            )\n          } else {\n            return (\n              <MenuItem\n                onClick={() => { handleClose(item.route) }} key={item.label}>\n                <ListItemIcon>\n                  <ArrowForwardIos />\n                </ListItemIcon>\n                {item.label}\n              </MenuItem>\n            )\n          }\n        })}\n      </Menu>\n    </>\n  )\n}\n\nexport default NavMenu;","import { useState, useContext, useMemo } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { AppBar, Toolbar, Tabs, Tab, Badge } from '@mui/material'\nimport { Newspaper, Calculate, ViewList, Settings } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\nimport { AuthContext, UserContext, PostContext } from './tools/contexts'\nimport MenuTab from './MenuTab'\nimport AvatarMenu from './AvatarMenu'\nimport NavMenu from './NavMenu'\n\n\n\nconst Navbar = () => {\n\n  const { auth } = useContext(AuthContext)\n  const { user } = useContext(UserContext)\n  const { fetchedPosts } = useContext(PostContext)\n  const disabled = !Boolean(auth)\n\n  const location = useLocation()\n\n  const [tabValue, setTabValue] = useState(false)\n  const [count, setCount] = useState(0)\n  \n  useMemo(() => {\n    const path = `/${location.pathname.split('/')[1]}`\n    setTabValue(routes.includes(path) ? path : false)\n  }, [location])\n  \n  const handleChange = (_, newValue) => {\n    switch (newValue) {\n      case routes[0]:\n      case routes[1]:\n      case routes[2]:\n        setTabValue(newValue)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const newPosts = useMemo(() => {\n\n    const length = fetchedPosts.length\n    if (tabValue === routes[0]) {\n      setCount(length)\n    }\n\n    return length - count\n  }, [fetchedPosts.length, count, tabValue])\n\n  const items = [\n    { label: 'Answers Settings', sub_route: sub_routes[0] }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', sub_route: sub_routes[1] }\n    )\n  }\n  items.push({ label: 'Expressions Settings', sub_route: sub_routes[2] })\n\n  return (\n    <>\n      <AppBar position='sticky' color='default'>\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\n\n          <NavMenu setTabValue={setTabValue} disabled={disabled}\n            user={user}\n          />\n\n          <Tabs sx={{ visibility: { xs: 'hidden', sm: 'visible' } }}\n            indicatorColor='primary'\n            onChange={handleChange}\n            value={tabValue}>\n\n            <Tab value={routes[0]} label='News'\n              icon={\n                <Badge color='error' badgeContent={newPosts}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                >\n                  <Newspaper />\n                </Badge>\n              } iconPosition='start'\n              component={Link} to={routes[0]} disabled={disabled} />\n\n            <Tab value={routes[1]} label='Calculators'\n              icon={<Calculate />} iconPosition='start'\n              component={Link} to={routes[1]} disabled={disabled} />\n\n            <Tab value={routes[2]} label='Answers'\n              icon={<ViewList />} iconPosition='start'\n              component={Link} to={routes[2]} disabled={disabled} />\n\n            <MenuTab value={routes[3]}\n              label='Settings' icon={<Settings />}\n              setTabValue={setTabValue} items={items} disabled={disabled} />\n\n          </Tabs>\n\n          <AvatarMenu setTabValue={setTabValue} disabled={disabled} />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/beep.6fea501e.mp3\";","import { useContext, useEffect, useState, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport useSound from 'use-sound'\n\nimport { api_url } from './tools/routes'\nimport { PostContext, UserSettingsContext } from './tools/contexts'\nimport beep from './tools/beep.mp3'\n\nconst AuthenticatedContent = (props) => {\n\n  const { children, setAuth, user, setUser } = props\n\n  const { fetchedPosts, setFetchedPosts } = useContext(PostContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [timeStamp, setTimeStamp] = useState(null)\n  const navigate = useNavigate()\n  const soundOptions = useMemo(() => {\n    return { volume: parseFloat(userSettings.notifVol) }\n  }, [userSettings])\n  const [playBeep] = useSound(beep, soundOptions)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const checkForNewPosts = async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/fetch-posts',\n          { last_post: timeStamp },\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['newest_post']) {\n          if (\n            timeStamp !== null && res.data.posts.length > fetchedPosts.length\n          ) {\n            playBeep()\n          }\n          setTimeStamp(res.data['newest_post'])\n          setFetchedPosts(res.data['posts'])\n        } else if (res.data['wrn']) {\n          console.warn(res.data['wrn'])\n        } else if (res.data['err']) {\n          setAuth(false)\n          console.error(res.data['err'])\n        }\n      }\n      catch (error) {\n        const errCode = error.response?.status\n        if (errCode === 422 || errCode === 401) {\n          navigate('/login')\n          setUser(null)\n          setAuth(false)\n          localStorage.removeItem('user')\n        }\n      }\n    }\n    if (user) {\n      checkForNewPosts()\n    }\n    const watcher = setInterval(() => {\n      if (user?.token) {\n        checkForNewPosts()\n      }\n    }, 3000)\n    return () => {\n      clearInterval(watcher)\n      source.cancel('Leaving News page or the data is already loaded')\n    }\n    // eslint-disable-next-line\n  }, [user, timeStamp, fetchedPosts.length])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const refreshing = setInterval(() => {\n      if (user?.token) {\n        (async () => {\n          try {\n            const res = await axios.get(\n              api_url + '/users/refresh-auth',\n              {\n                cancelToken: source.token,\n                headers: {\n                  Accept: '*/*',\n                  Authorization: `Bearer ${user.token}`\n                }\n              }\n            )\n            if (res.data['user']) {\n              setUser(res.data.user)\n            }\n          }\n          catch (error) {\n            console.error(error)\n          }\n        })()\n      }\n    }, 60 * 60 * 1000)\n    return () => {\n      clearInterval(refreshing)\n      source.cancel('Abort refresh token')\n    }\n  }, [user, setUser])\n\n  return children\n}\n\nexport default AuthenticatedContent","import { useContext, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { UserContext } from './contexts'\nimport { api_url } from './routes'\n\nexport const useAxios = (\n  method, uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  const headers = {\n    Accept: '*/*',\n    Authorization: `Bearer ${user?.token}`\n  }\n\n  return async (data) => {\n    try {\n      let res\n      switch (method) {\n        default:\n          res = await axios.get(\n            api_url + uri, { headers: headers }\n          )\n          break\n        case 'post':\n          res = await axios.post(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'put':\n          res = await axios.put(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'delete':\n          res = await axios.delete(\n            api_url + uri, { headers: headers, data: data }\n          )\n          break\n      }\n      if (res.data[expected]) {\n        suc(res.data)\n      }\n      if (res.data['wrn']) {\n        wrn(res.data)\n      }\n      if (res.data['err']) {\n        err(res.data)\n      }\n    }\n    catch (error) {\n      TCErr(error)\n    }\n  }\n}\n\nexport const useAxiosEffect = (\n  uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    const headers = {\n      Accept: '*/*',\n      Authorization: `Bearer ${user?.token}`\n    }\n    const source = axios.CancelToken.source();\n    (async () => {\n      try {\n        const res = await axios.get(\n          api_url + uri, { cancelToken: source.token, headers: headers }\n        )\n        if (res.data[expected]) {\n          suc(res.data)\n        }\n        if (res.data['wrn']) {\n          wrn(res.data)\n        }\n        if (res.data['err']) {\n          err(res.data)\n        }\n      }\n      catch (error) {\n        TCErr(error)\n      }\n    })()\n    return () => {\n      source.cancel('useAxios: canceled')\n    }\n    // eslint-disable-next-line\n  }, [user])\n}","const daysAgo = (today, date) => {\n    const delta = ((today - date) / (1000 * 3600 * 24)).toFixed()\n    let label\n    switch (delta) {\n        case '0':\n        case '-0':\n            label = 'Today'\n            break\n        case '1':\n            label = 'Yesterday'\n            break\n        default:\n            label = `${delta} days ago`\n            break\n    }\n    return label\n}\n\nexport default daysAgo","import { useContext, useState, useMemo, useRef } from 'react'\nimport {\n  Grid, Box, Alert, AlertTitle, Divider, Chip, Stack, Typography, Button,\n  Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText\n} from '@mui/material';\nimport { Alarm } from '@mui/icons-material'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport axios from 'axios'\n\nimport {\n  PostContext, UserContext, UserSettingsContext\n} from '../tools/contexts'\nimport { api_url } from '../tools/routes'\nimport daysAgo from '../tools/daysAgo'\n\nimport style from './markdownStyle.module.css'\n\n\nconst PostPreview = (props) => {\n\n  const { newPost, newSeverity, to, userSettings } = props\n\n  let post_props\n  switch (newSeverity) {\n    case 'Reminder':\n      post_props = {\n        icon: <Alarm />, severity: 'success'\n      }\n      break\n    case 'Normal':\n      post_props = { severity: 'warning' }\n      break\n    case 'Urgent':\n      post_props = { severity: 'error' }\n      break\n    default:\n      post_props = {}\n      break\n  }\n\n  const date = () => {\n    return new Date(\n      new Date().setDate(\n        new Date().getDate() + (parseInt(newPost.days_offset) || 0)\n      )\n    ).toLocaleDateString()\n  }\n\n  return (\n    < Grid item>\n      <Alert variant='outlined' {...post_props}\n        style={{\n          fontFamily: `${userSettings.postsFontFamily}, Helvetica`\n          , fontSize: '1em'\n        }}\n      >\n        <AlertTitle>\n          <Typography variant='h5'>\n            {newPost.title} (Preview)\n          </Typography>\n        </AlertTitle>\n        <ReactMarkdown className={style.mdStyle}\n          remarkPlugins={[remarkGfm]} children={\n            `${newPost.content}\\n\\n*Own ${to}* | *${date()}*`\n          }\n        />\n      </Alert>\n    </Grid >\n  )\n}\n\nconst Posts = (props) => {\n\n\n  const {\n    filter: { severity, owner },\n    newPost, setNewPost, newSeverity, to, contentRef, handleMessage\n  } = props\n  const stackRef = useRef(null)\n  const { fetchedPosts } = useContext(PostContext)\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [postToDelete, setPostToDelete] = useState('')\n\n  const goUp = () => {\n    stackRef.current.scrollTo({ top: 0, behavior: 'smooth' })\n    contentRef.current.focus()\n  }\n\n  const posts = useMemo(() => {\n    if (fetchedPosts.length > 0) {\n      let severity_filter\n      switch (severity) {\n        case 'Reminder':\n          severity_filter = 'rem'\n          break\n        case 'Normal':\n          severity_filter = 'nor'\n          break\n        case 'Urgent':\n          severity_filter = 'urg'\n          break\n        default:\n          severity_filter = null\n          break\n      }\n      const owner_filter = owner === 'from All' ? null : user?.email\n\n      let filteredPosts = fetchedPosts.filter(post =>\n        (severity_filter ? post.severity === severity_filter : true)\n        && (owner_filter ? post.owner._id === owner_filter : true)\n      )\n\n      const dividedPosts = []\n      const today = new Date().getTime()\n      let last_day = today\n\n      if (filteredPosts.length > 0) {\n        filteredPosts.forEach(post => {\n          const other_day = daysAgo(today, post._id['$date'])\n          if (last_day !== other_day) {\n            dividedPosts.push({ divider: other_day })\n            last_day = other_day\n          }\n          dividedPosts.push(post)\n        })\n      } else {\n        dividedPosts.push(\n          { divider: 'There are no posts with those conditions' }\n        )\n      }\n\n      return dividedPosts\n    }\n  }, [fetchedPosts, severity, owner, user])\n\n  const handleDelete = (post) => {\n    (async () => {\n      const res = await axios.delete(\n        api_url + '/news/delete-post',\n        {\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user?.token}`\n          },\n          data: post\n        }\n      )\n      if (res.data['msg']) {\n        handleMessage(res.data['msg'], 'info')\n      }\n      if (res.data['wrn']) {\n        handleMessage(res.data['wrn'], 'warning')\n      }\n      if (res.data['err']) {\n        handleMessage(res.data['err'], 'error')\n      }\n    })()\n    setPostToDelete('')\n  }\n\n  const justClose = () => {\n    setPostToDelete('')\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={7}>\n        <Box border={2} p={2} borderRadius={1} borderColor='primary.main'\n          sx={{ height: '80vh' }}\n        >\n          <Stack spacing={1} pr={1} ref={stackRef}\n            sx={{ paddingBlockEnd: 2, height: '75vh', overflow: 'auto' }}\n          >\n            {(newPost.title || newPost.content) &&\n              <PostPreview\n                newPost={newPost}\n                newSeverity={newSeverity}\n                to={to}\n                userSettings={userSettings}\n              />\n            }\n            {posts?.map(element => {\n              let component\n              if (element.divider) {\n                component = (\n                  <Grid item key={element.divider}>\n                    <Divider>\n                      <Chip color='primary' label={element.divider} />\n                    </Divider>\n                  </Grid>\n                )\n              }\n              if (element._id) {\n                let post_props\n                switch (element.severity) {\n                  case 'rem':\n                    post_props = {\n                      icon: <Alarm />, severity: 'success'\n                    }\n                    break\n                  case 'nor':\n                    post_props = { severity: 'warning' }\n                    break\n                  case 'urg':\n                    post_props = { severity: 'error' }\n                    break\n                  default:\n                    post_props = {}\n                    break\n                }\n                let canEdit = {}\n                if (user?.is_admin || element.owner._id === user?.email) {\n                  post_props = {\n                    ...post_props,\n                    onClose: () => { setPostToDelete(element._id) }\n                  }\n                  canEdit = {\n                    onDoubleClick: () => {\n                      setNewPost({\n                        title: '', content: element.content, days_offset: ''\n                      })\n                      goUp()\n                    }\n                  }\n                }\n                const content = element.content\n                const owner = `**${element.owner.username}**`\n                const pub = element.is_public ? 'to **All**' : 'just for **Me**'\n                const date = new Date(element._id.$date).toLocaleDateString()\n                component = (\n                  <Grid item key={element._id['$date']}>\n                    <Alert variant='filled' {...post_props}\n                      style={{\n                        fontFamily: `${userSettings.postsFontFamily}, Helvetica`\n                        , fontSize: '1em'\n                      }}\n                    >\n                      <AlertTitle>\n                        <Typography variant='h5'>\n                          {element.title}\n                        </Typography>\n                      </AlertTitle>\n                      <div {...canEdit}>\n                        <ReactMarkdown className={style.mdStyle}\n                          remarkPlugins={[remarkGfm]} children={\n                            `${content}\\n\\n*${owner} ${pub}* | *${date}*`\n                          }\n                        />\n                      </div>\n                    </Alert>\n                  </Grid>\n                )\n              }\n              return component\n            })}\n          </Stack>\n        </Box>\n      </Grid >\n      <Dialog\n        open={Boolean(postToDelete)}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            Confirm delete post?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button\n            onClick={() => handleDelete(postToDelete)} color='error' autoFocus\n          >\n            DELETE </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Posts","import { FormControl, Select, MenuItem } from '@mui/material'\n\n\nconst PostSelect = (props) => {\n\n  const { options, option, setOption, ...others } = props\n\n  const handleChange = (e) => {\n    setOption(e.target.value)\n  }\n\n  return (\n    <FormControl fullWidth {...others}>\n      <Select size='small' value={option} onChange={handleChange}>\n        {options.map(op => {\n          return <MenuItem key={op} value={op}>{op}</MenuItem>\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default PostSelect","import {\n  Typography, Grid, Box, Divider, TextField, Button, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\n\nconst FullPanel = (props) => {\n\n  const {\n    filter: { severity, setSeverity, owner, setOwner },\n    newPost, newSeverity, setNewSeverity, to, setTo, contentRef,\n    handleChange, handleSend, send_props\n  } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '75vh', overflow: 'auto' }}\n          >\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='TITLE'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField \n                inputRef={contentRef}\n                fullWidth rows={12} multiline size='small' \n                label='CONTENT (Markdown Supported)'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default FullPanel","import { Grid, Box, Paper } from '@mui/material';\nimport PostSelect from './PostSelect'\n\nconst Filter = (props) => {\n\n  const { filter: { severity, setSeverity, owner, setOwner } } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2 }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Filter","import {\n  Typography, Grid, Box, Divider, TextField, Button, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\n\nconst CreatePost = (props) => {\n\n  const { \n    newPost, newSeverity, setNewSeverity, to, setTo, contentRef,\n    handleChange, handleSend, send_props \n  } = props\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '60vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '55vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='TITLE'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField inputRef={contentRef}\n                fullWidth rows={8} multiline size='small'\n                label='CONTENT (Markdown Supported)'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default CreatePost","import { useState, useRef } from 'react'\nimport { Container, Grid, Snackbar, Alert } from '@mui/material';\n\nimport { useAxios } from '../tools/axiosTool'\n\nimport Posts from './Posts'\nimport FullPanel from './FullPanel'\nimport Filter from './Filter'\nimport CreatePost from './CreatePost'\n\nconst News = () => {\n\n  const contentRef = useRef(null)\n  const [severity, setSeverity] = useState('All')\n  const [owner, setOwner] = useState('from All')\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const [newPost, setNewPost] = useState({\n    title: '', content: '', days_offset: ''\n  })\n  const [newSeverity, setNewSeverity] = useState('Normal')\n  const [to, setTo] = useState('to Me')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setNewPost({ ...newPost, [name]: value })\n  }\n\n  const getSeverity = () => {\n    switch (newSeverity) {\n      case 'Reminder':\n        return 'rem'\n      default:\n      case 'Normal':\n        return 'nor'\n      case 'Urgent':\n        return 'urg'\n    }\n  }\n\n  const getPublic = () => {\n    switch (to) {\n      default:\n      case 'to Me':\n        return false\n      case 'to All':\n        return true\n    }\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const sender = useAxios(\n    'post', '/news/create-post', 'msg',\n    (d) => {\n      handleMessage(d.msg, 'success')\n      setNewPost({ title: '', content: '', days_offset: '' })\n      setNewSeverity('Normal')\n      setTo('to Me')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleSend = () => {\n\n    if (!newPost.title) {\n      handleMessage('You must provide a Title', 'error')\n      return\n    }\n    if (!newPost.content) {\n      handleMessage('You must provide a Content', 'error')\n      return\n    }\n    const days_offset = parseInt((newPost.days_offset || 0))\n    if (0 > days_offset || 7 < days_offset) {\n      handleMessage('\"within days\" must be between 0 and 7', 'error')\n      return\n    }\n\n    sender({\n      title: newPost.title,\n      content: newPost.content,\n      severity: getSeverity(),\n      days_offset: days_offset,\n      is_public: getPublic()\n    })\n  }\n\n  let send_props\n  switch (newSeverity) {\n    case 'Reminder':\n      send_props = { color: 'success' }\n      break\n    case 'Normal':\n      send_props = { color: 'warning' }\n      break\n    case 'Urgent':\n      send_props = { color: 'error' }\n      break\n    default:\n      send_props = {}\n      break\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const filter = {\n    severity: severity,\n    setSeverity: setSeverity,\n    owner: owner,\n    setOwner: setOwner\n  }\n\n  const creation = {\n    newPost: newPost,\n    newSeverity: newSeverity,\n    setNewSeverity: setNewSeverity,\n    to: to,\n    setTo: setTo,\n    handleChange: handleChange,\n    handleSend: handleSend,\n    send_props: send_props\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n\n      <Grid\n        container spacing={1} margin={0} pt={3}\n        sx={{ display: { xs: 'none', md: 'flex' } }}\n      >\n        <FullPanel\n          filter={filter}\n          contentRef={contentRef}\n          {...creation}\n        />\n        <Posts\n          filter={{ severity: severity, owner: owner }}\n          newPost={newPost}\n          setNewPost={setNewPost}\n          newSeverity={newSeverity}\n          to={to}\n          contentRef={contentRef}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Grid\n        container spacing={1} margin={0} pt={1}\n        sx={{ display: { xs: 'flex', md: 'none' } }}\n      >\n        <Filter\n          filter={filter}\n        />\n        <Posts\n          filter={{ severity: severity, owner: owner }}\n          newPost={newPost}\n          setNewPost={setNewPost}\n          newSeverity={newSeverity}\n          to={to}\n          contentRef={contentRef}\n          handleMessage={handleMessage}\n        />\n        <CreatePost\n          {...creation}\n          contentRef={contentRef}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default News;","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button, Radio,\n  FormControl, RadioGroup, FormControlLabel, Divider\n} from '@mui/material'\nimport { LooksOne, LooksTwo, Looks3, Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Complete = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ first: '', second: '', third: '' })\n  const [sign, setSign] = useState('pri')\n  const [operation, setOperation] = useState('add')\n  const [expression, setExpression] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleSign = (e) => {\n    const { value } = e.target\n    setSign(value)\n    setFields({ ...fields, first: '', third: '' })\n  }\n\n  const handleOperation = (e) => {\n    const { value } = e.target\n    setOperation(value)\n    setFields({ ...fields, second: '' })\n  }\n\n  const handleExpressionChange = (e) => {\n    const { value } = e.target\n    setExpression(value)\n  }\n\n  const handleQuery = (url, data, to_set) => {\n    for (let [field, value] of Object.entries(data)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    data = { ...data, sign: sign, operation: operation };\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + url,\n          data,\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ])\n          setFields({ ...fields, [to_set]: res.data.result })\n          if (!data.expression) {\n            setExpression(res.data.result);\n            (async () => {navigator.clipboard.writeText(\n              `$${res.data.result}`\n            )})()\n            handleMessage(`$${res.data.result} Copied`, 'success')\n          } else {\n            (async () => {navigator.clipboard.writeText(res.data.result)})()\n            handleMessage(`${res.data.result} Copied`, 'success')\n          }\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const handleGetFirst = () => {\n    let dataset = { second: fields.second, third: fields.third }\n    handleQuery('/calculator/get-first-term', dataset, 'first')\n  }\n\n  const handleGetSecond = () => {\n    let dataset = { first: fields.first, third: fields.third }\n    handleQuery('/calculator/get-second-term', dataset, 'second')\n  }\n\n  const handleGetThird = () => {\n    let dataset = { first: fields.first, second: fields.second }\n    handleQuery('/calculator/get-result', dataset, 'third')\n  }\n\n  const handleEvaluate = () => {\n    handleQuery('/calculator/resolve-expression', { expression: expression })\n  }\n\n  const handleEnterOnFields = () => {\n\n    if (fields.first === '' && fields.second !== '' && fields.third !== '') {\n      handleGetFirst()\n    } else if (\n      fields.first !== '' && fields.second === '' && fields.third !== ''\n    ) {\n      handleGetSecond()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third === ''\n    ) {\n      handleGetThird()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third !== ''\n    ) {\n      handleMessage('impossible to know which operation to perform!', 'warning')\n    } else {\n      handleMessage('You must provide 2 fields at least!', 'warning')\n    }\n  }\n\n  const handleClear = () => {\n    setFields({ first: '', second: '', third: '' })\n    setExpression('')\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '65vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '60vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='sign'\n                  value={sign} onChange={handleSign}\n                >\n                  <Paper>\n                    <Grid item px={3}>\n                      <FormControlLabel\n                        value='pri'\n                        control={<Radio />} label={\n                          <Typography variant='h5' color='primary'>\n                            $\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='per'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h5' color='secondary'>\n                            %\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='operation'\n                  value={operation} onChange={handleOperation}\n                >\n                  <Paper>\n                    <Grid px={3}>\n                      <FormControlLabel\n                        value='add'\n                        control={<Radio />} label={\n                          <Typography variant='h4' color='primary'>\n                            +\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='sub'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h4' color='secondary'>\n                            -\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant='h5' color='initial'\n                sx={{ display: { xs: 'none', md: 'flex' } }}\n              >\n                complete calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth size='small' type='number'\n                label={sign === 'pri' ? 'Price' : 'Percentage'}\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5'\n                      color={sign === 'pri' ? 'primary' : 'secondary'}\n                    >\n                      {sign === 'pri' ? '$' : ''}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='secondary'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n\n                name='first'\n                value={fields.first}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='day/month/year | Percentage'\n                size='small' InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4'\n                      color={operation === 'add' ? 'primary' : 'secondary'}\n                    >\n                      {operation === 'add' ? '+' : '-'}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      %\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='second'\n                value={fields.second}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Result' type='number'\n                size='small' InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '= $' : '='}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='third'\n                value={fields.third}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetFirst} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksOne />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetSecond} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksTwo />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetThird} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<Looks3 />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth label='Evaluate Expression' size='small'\n                name='expression' InputProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4' color='primary'>\n                      {'>>>'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                InputLabelProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 }\n                }}\n                value={expression}\n                onChange={handleExpressionChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEvaluate()\n                }}\n              />\n            </Grid>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleClear} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='error'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Clear\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleEvaluate} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='primary'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Evaluate\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Complete","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button\n} from '@mui/material'\nimport { Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Basic = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ price: '', str_date: '' })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleGetPrice = () => {\n    for (let [field, value] of Object.entries(fields)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/calculator/price-add-percent',\n          {\n            ...fields,\n            str_date: fields.str_date.split('-').reverse().join('/')\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ]);\n          (async () => {navigator.clipboard.writeText(`$${res.data.result}`)})()\n          handleMessage(`$${res.data.result} Copied`, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '30vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '25vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h5' color='initial'>\n                basic calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Price'\n                type='number'\n                name='price'\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='primary'>\n                      $\n                    </Typography>\n                  </InputAdornment>\n                }}\n                value={fields.price}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Date' type='date'\n                InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='body1' color='primary'>\n                      from\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='str_date'\n                value={fields.str_date}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetPrice} size='large'\n                sx={{ minHeight: '75%' }}\n                variant='contained' color='success' endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  GET PRICE\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Basic","import { useMemo } from 'react'\nimport {\n  Paper, Typography, Tooltip, Grid, Box, Divider, Chip\n} from '@mui/material'\n\nimport daysAgo from '../tools/daysAgo'\n\nconst CalcHistory = (props) => {\n\n  const { history } = props\n\n  const registries = useMemo(() => {\n\n    const dividedRegistries = []\n    const today = new Date().getTime()\n    let last_day = today\n\n    if (history.length > 0) {\n      history.forEach(reg => {\n        const other_day = daysAgo(today, reg._id['$date'])\n        if (last_day !== other_day) {\n          dividedRegistries.push({ divider: other_day })\n          last_day = other_day\n        }\n        dividedRegistries.push(reg)\n      })\n    } else {\n      dividedRegistries.push(\n        { divider: 'There are no previous calculations' }\n      )\n    }\n\n    return dividedRegistries\n\n  }, [history])\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Box sx={{\n        paddingBlockEnd: 2,\n        height: '75vh',\n        backgroundColor: 'info.main'\n      }} borderRadius={3} p={2}>\n        <Grid container spacing={1} align='center' pr={2} alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '70vh', overflow: 'auto' }}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" color=\"initial\">\n              Result / History\n            </Typography>\n          </Grid>\n          {registries.map((reg, item) => {\n            let component\n            if (reg.divider) {\n              component = (\n                <Grid item xs={12} key={reg.divider}>\n                  <Divider>\n                    <Chip color='warning' size='small' label={reg.divider} />\n                  </Divider>\n                </Grid>\n              )\n            }\n            if (reg._id) {\n\n              let tColor\n              if (item !== 1) {\n                tColor = { color: 'info.light' }\n              }\n\n              component = (\n                <Grid item xs={12} key={reg._id.$date}>\n                  <Paper elevation={7}>\n                    <Tooltip title={reg.footnote}\n                      placement='right' disableInteractive arrow followCursor\n                    >\n                      <Typography variant=\"h6\" {...tColor}\n                        sx={{ whiteSpace: 'pre-line' }}\n                      >\n                        {reg.calculation}\n                      </Typography>\n                    </Tooltip>\n                  </Paper>\n                </Grid>\n              )\n            }\n            return component\n          })}\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CalcHistory","import { useContext, useEffect, useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert, FormControlLabel, Switch, Typography\n} from '@mui/material'\nimport axios from 'axios'\n\nimport Complete from './Complete'\nimport Basic from './Basic'\nimport CalcHistory from './CalcHistory'\nimport { api_url } from '../tools/routes'\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\n\nconst Calculator = () => {\n\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [history, setHistory] = useState([])\n  const [openSB, setOpenSB] = useState(false)\n  const [basic, setBasic] = useState(Boolean(userSettings?.calculator))\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    (async () => {\n      const res = await axios.get(\n        api_url + '/calculator/get-history',\n        {\n          cancelToken: source.token,\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user.token}`\n          }\n        }\n      )\n      if (res.data['hist']) {\n        setHistory(res.data['hist'])\n      }\n      if (res.data['msg']) {\n        // console.warn(res.data['msg'])\n      }\n      if (res.data['err']) {\n        console.error(res.data['err'])\n      }\n    })()\n    return () => {\n      source.cancel()\n    }\n  }, [user, setHistory])\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpenSB(true)\n  }\n\n  const handleBasic = (e) => {\n    const { checked } = e.target\n    setBasic(checked)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12}>\n          <FormControlLabel labelPlacement='start'\n            label={\n              <Typography px={1}>\n                Calculator\n              </Typography>\n            }\n            control={\n              <FormControlLabel\n                control={<Switch checked={basic} onChange={handleBasic} />}\n                label=\"Basic\"\n              />\n            }\n          />\n        </Grid>\n        {basic\n          ?\n          <Basic\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n          :\n          <Complete\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n        }\n        <CalcHistory history={history} setHistory={setHistory} />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Calculator;","const strFormat = (str, regexs, args) => {\n\n\n  let mut_str = str\n  if (regexs !== undefined) {\n    regexs.forEach(({ pattern, replacement }) => {\n      mut_str = mut_str.replace(RegExp(pattern, 'ig'), replacement)\n    })\n  }\n  return mut_str.replace(/{([\\w\\s]+)}/g,\n  (match, index) => {\n      return typeof args[index] === 'undefined' ? match : args[index]\n    }\n  )\n}\n\nexport default strFormat","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, InputAdornment, Grid, Box, Paper, Tooltip\n} from '@mui/material'\nimport { ContentCopy } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst CreditCards = (props) => {\n\n  const { payMeths, sysRegex, handleMessage } = props\n\n  const [price, setPrice] = useState('')\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      const total = (\n        parseFloat(price) * (1 + meth.increase / 100)\n      ).toFixed() | 0\n      const monthly = (total / meth.installments).toFixed()\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        total: total,\n        monthly: monthly,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths, price])\n\n  const handleChangePrice = (e) => {\n    setPrice(e.target.value)\n  }\n\n\n  const handleCopy = (item) => {\n\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(`${item.installments} ${item.monthly}`, sysRegex)\n      )\n    })()\n    handleMessage('Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6' color='primary.main'>\n              Credit Cards Payments\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField label='Price' size='small'\n              inputProps={{\n                min: 0, step: 10\n              }}\n              InputProps={{\n                startAdornment: <InputAdornment position='start'>\n                  <Typography variant='h6' color='primary'>\n                    $\n                  </Typography>\n                </InputAdornment>\n              }}\n              type='number'\n              value={price}\n              onChange={handleChangePrice}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n              <Paper elevation={3} sx={{\n                borderRadius: '15px 15px 0px 0px',\n                backgroundColor: 'warning.dark',\n                height: 40\n              }}\n              >\n                <Typography variant=\"body1\" color=\"initial\" p={1}>\n                  Card Name\n                </Typography>\n              </Paper>\n              <TableContainer\n                sx={{ height: { xs: '57vh', md: '60vh' } }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <CustomCell width='20%'>\n                        Installments\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'error.dark' }}\n                      >\n                        Total\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'success.dark' }}\n                      >\n                        Monthly\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Increase\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        PosCode\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Copy\n                      </CustomCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {paymentMethods.map(item => {\n                      const component = item.header ? (\n                        <TableRow key={item.header}>\n                          <CustomCell width='100%' colSpan={6}\n                            sx={{\n                              borderRadius: '20px 20px 0px 0px',\n                              backgroundColor: 'warning.dark'\n                            }}\n                          >\n                            {item.header}\n                          </CustomCell>\n                        </TableRow>\n                      ) : (\n                        <Tooltip key={item.id}\n                          title={item.description} disableInteractive\n                          placement='right' arrow followCursor\n                        >\n                          <TableRow hover>\n                            <CustomCell>\n                              {item.installments}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'error.dark' }}\n                            >\n                              ${item.total}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'success.dark' }}\n                            >\n                              ${item.monthly}\n                            </CustomCell>\n                            <CustomCell>\n                              {item.increase}%\n                            </CustomCell>\n                            <CustomCell>\n                              *{item.pos_code}*\n                            </CustomCell>\n                            <CustomCell>\n                              <IconButton size='small' color='primary'\n                                onClick={() => handleCopy(item)}\n                              >\n                                <ContentCopy fontSize='small' />\n                              </IconButton>\n                            </CustomCell>\n                          </TableRow>\n                        </Tooltip>\n                      )\n                      return component\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CreditCards\n","import { useState, useMemo } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Tooltip\n} from '@mui/material'\nimport { ContentCopy, Cancel } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\nconst AnswerButtons = (props) => {\n\n  const { commonAnswers, ownAnswers, sysRegex, ownRegex, handleMessage } = props\n\n  const [text, setText] = useState('')\n\n  const answerList = useMemo(() => {\n    if (commonAnswers.length > 0 && ownAnswers.length > 0) {\n      return [...commonAnswers, ...ownAnswers].map(({ label, content }) => {\n        return { [label]: content }\n      }).reduce((resObj, curObj) => {\n        return { ...resObj, ...curObj }\n      })\n    }\n\n  }, [commonAnswers, ownAnswers])\n\n  const handleClickAnswer = (text) => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    setText(text)\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopy = () => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, [...sysRegex, ...ownRegex], answerList)\n      )\n    })()\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopyRaw = () => {\n    (async () => {\n      navigator.clipboard.writeText(text)\n    })()\n    handleMessage('Raw Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2}>\n          <Grid item xs={12} md={11}>\n            <TextField label='Content' focused color='warning'\n              fullWidth multiline rows={4}\n              InputProps={{ readOnly: true }}\n              value={text}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Tooltip title='Copy Formated Text' placement='left'>\n              <IconButton color='primary' onClick={handleCopy}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Copy Raw Text' placement='left'>\n              <IconButton color='info' onClick={handleCopyRaw}>\n                <ContentCopy />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title='Unselect Answer' placement='left'>\n              <IconButton color='warning' onClick={() => setText('')}>\n                <Cancel />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Commons\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {commonAnswers.map((ans) => {\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                  enterDelay={1000} key={ans._id.$oid}\n                >\n                    <Button fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              })}\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Own\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '49vh', overflow: 'auto' }}\n            >\n              {ownAnswers.map((ans) => {\n                return (\n                  <Tooltip title='Select and Copy Formatted Text' followCursor\n                    enterDelay={1000} key={ans._id.$oid}\n                  >\n                    <Button fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans.content)}\n                    >\n                      {ans.label}\n                    </Button>\n                  </Tooltip>\n                )\n              })}\n            </Stack>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default AnswerButtons","import { useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material'\n\nimport { useAxiosEffect } from '../tools/axiosTool'\nimport CreditCards from './CreditCards'\nimport AnswerButtons from './AnswerButtons'\n\nconst Answers = () => {\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => { \n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods) \n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers) \n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers) \n      }\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12} md={6}>\n          <CreditCards\n            payMeths={payMeths}\n            sysRegex={sysRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <AnswerButtons\n            commonAnswers={commonAnswers}\n            ownAnswers={ownAnswers}\n            sysRegex={sysRegex}\n            ownRegex={ownRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt} \n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Answers;","import { Outlet } from 'react-router'\nimport {Container, Grid } from '@mui/material'\n\nconst Settings = () => {\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Outlet />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Settings;","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, Grid, Box, Paper\n} from '@mui/material'\nimport { Done, Delete, Add, Edit, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst EditCreditCards = (props) => {\n\n  const { payMeths, setPayMeths, handleMessage } = props\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths])\n\n  const initialValue = {\n    id: '',\n    card_name: '',\n    installments: '',\n    increase: '',\n    pos_code: '',\n    description: ''\n  }\n\n  const [newCard, setNewCard] = useState('')\n  const [selected, setSelected] = useState(initialValue)\n  const [method, setMethod] = useState(initialValue)\n\n  const handleChangeNewCard = (e) => {\n    setNewCard(e.target.value)\n  }\n\n  const handleChangeMethod = (e) => {\n    const { name, value } = e.target\n    setMethod({ ...method, [name]: value })\n  }\n\n  // QUERIES -------------------------------------------------------------------\n\n  const handleAddCard = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleAddMethod = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateCardName = useAxios(\n    'put', '/answers/update-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateMethod = useAxios(\n    'put', '/answers/update-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropCard = useAxios(\n    'delete', '/answers/delete-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropMethod = useAxios(\n    'delete', '/answers/delete-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  // ---------------------------------------------------------------------------\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={12}>\n              <Typography variant='body1' color='secondary.main'>\n                Edit Credit Cards Payments Methods\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n                <Paper elevation={3} sx={{\n                  borderRadius: '15px 15px 0px 0px',\n                  backgroundColor: 'warning.main',\n                  height: 40\n                }}\n                >\n                  <Typography variant=\"body1\" color=\"initial\" p={1}>\n                    Card Name\n                  </Typography>\n                </Paper>\n                <TableContainer sx={{ height: '60vh' }}>\n                  <Table stickyHeader size='small'>\n                    <TableHead>\n                      <TableRow>\n                        <CustomCell width='25%'>\n                          Installments\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Description\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Increase\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Code\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Upg\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Drop\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Add\n                        </CustomCell>\n                      </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                      <TableRow>\n                        <CustomCell width='90%' colSpan={6}\n                          sx={{\n                            borderRadius: '50px 0px 0px 50px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <TextField fullWidth label='Card Name' size='small'\n                            variant='standard' value={newCard} color='secondary'\n                            inputProps={{ style: { textAlign: 'center' } }}\n                            onChange={handleChangeNewCard}\n                          />\n                        </CustomCell>\n                        <CustomCell\n                          sx={{\n                            borderRadius: '0px 50px 50px 0px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <IconButton size='small' color='secondary'\n                            disabled={!Boolean(newCard)}\n                            onClick={() => handleAddCard({\n                              method: {\n                                card_name: newCard, installments: 0,\n                                increase: 0, pos_code: 0, description: 'FIXME'\n                              }\n                            })}\n                          >\n                            <Add fontSize='small' />\n                          </IconButton>\n                        </CustomCell>\n                      </TableRow>\n\n                      {paymentMethods.map(item => {\n\n                        let component\n                        if (selected.id === item.id) {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <TextField label='Card Name' size='small'\n                                  variant='standard' value={method.header}\n                                  name='header'\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell \n                                sx={{ backgroundColor: 'warning.main' }}\n                              >\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='warning'\n                                  action={() => handleUpdateCardName(\n                                    { name: item.id, new_name: method.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'>\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                <TextField label='Installments' size='small'\n                                  variant='standard'\n                                  name='installments'\n                                  value={method.installments}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Description' size='small'\n                                  variant='standard'\n                                  name='description'\n                                  value={method.description}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Increase' size='small'\n                                  variant='standard'\n                                  name='increase'\n                                  value={method.increase}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Pos-Code' size='small'\n                                  variant='standard'\n                                  name='pos_code'\n                                  value={method.pos_code}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='success' action={\n                                    () => handleUpdateMethod(\n                                      { method: { ...method } }\n                                    )\n                                  }\n                                >\n                                  <IconButton size='small' color='success'\n                                  >\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        } else {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                {item.header}\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='error'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{ backgroundColor: 'warning.main' }}>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error' action={() => handleDropCard(\n                                    { card_name: item.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                {item.installments}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.description}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.increase}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.pos_code}\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='warning'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error'\n                                  action={() => handleDropMethod(\n                                    { method: { id: item.id } }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        }\n                        return component\n                      })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditCreditCards;\n","import { useState } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControl, FormControlLabel, MenuItem, Select\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\nconst EditAnswers = (props) => {\n\n  const {\n    user, commonAnswers, ownAnswers, setCommonAnswers, setOwnAnswers,\n    handleMessage\n  } = props\n\n  const colors = {\n    '#1976d2': 'BLUE',\n    '#0097a7': 'CYAN',\n    '#388e3c': 'GREEN',\n    '#fbc02d': 'YELLOW',\n    '#f57c00': 'ORANGE',\n    '#d32f2f': 'RED',\n    '#c2185b': 'PINK',\n    '#7b1fa2': 'PURPLE',\n    '#5d4037': 'BROWN',\n    '#455a64': 'GREY'\n  }\n\n  const initialAnswer = {\n    id: '',\n    label: '',\n    color: '',\n    content: '',\n    common: false,\n    order: 0\n  }\n\n  const [answer, setAnswer] = useState(initialAnswer)\n  const [edit, setEdit] = useState(false)\n\n  const handleChangeAnswer = (e) => {\n    const { name, value, checked } = e.target\n    setAnswer({\n      ...answer,\n      [name]: name !== 'common' ? value : checked\n    })\n  }\n\n  const handleClickAnswer = (ans) => {\n    setAnswer(ans)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setAnswer(initialAnswer)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n      handleMessage(d.msg, 'success')\n      setAnswer(initialAnswer)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-answer', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2}>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Label' color='warning'\n                fullWidth name='label'\n                value={answer.label} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Order' color='warning'\n                fullWidth name='order' type='number'\n                value={answer.order} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='color'\n                  value={answer.color}\n                  onChange={handleChangeAnswer}\n                >\n                  {Object.entries(colors).map(([hex, name]) => {\n                    return (\n                      <MenuItem key={name} value={hex}>\n                        <Typography color={hex}>\n                          {name}\n                        </Typography>\n                      </MenuItem>\n                    )\n                  })\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {user?.is_admin && !edit &&\n              <Grid item xs={12} md={3}>\n                <FormControlLabel control={\n                  <Switch\n                    name='common'\n                    checked={answer.common}\n                    onChange={handleChangeAnswer}\n                  />\n                }\n                  label='Common'\n                />\n              </Grid>\n            }\n            <Grid item xs={12} md={11}>\n              <TextField label='Content' color='warning'\n                fullWidth multiline rows={4} name='content'\n                value={answer.content} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={1}>\n              <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                confirmText={edit ? 'Update' : 'Create'} message={\n                  edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                } action={edit ? () => handleUpdateAnswer({\n                  answer: {\n                    ...answer, id: answer._id.$oid, color: colors[answer.color]\n                  }\n                }) : () => handleCreateAnswer({\n                  answer: {\n                    ...answer, color: colors[answer.color]\n                  }\n                })} color={edit ? 'warning' : 'success'}\n              >\n                <IconButton color={edit ? 'primary' : 'success'}\n                  disabled={!Boolean(answer.label)}\n                >\n                  <Save />\n                </IconButton>\n              </RDialog>\n              <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                confirmText='Delete' action={() => handleDeleteAnswer({\n                  answer: {\n                    id: answer._id.$oid\n                  }\n                })}\n              >\n                <IconButton color='error' disabled={!Boolean(answer.label)}>\n                  <Delete />\n                </IconButton>\n              </RDialog>\n              <IconButton color='warning' disabled={!Boolean(answer.label)}\n                onClick={handleCancel}\n              >\n                <Cancel />\n              </IconButton>\n            </Grid>\n            {user?.is_admin &&\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Commons\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n                >\n                  {commonAnswers.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        sx={{\n                          color: '#FFFFFF',\n                          background: ans.color, '&:hover': {\n                            background: ans.color, filter: 'brightness(90%)'\n                          }\n                        }}\n                        onClick={() => handleClickAnswer(ans)}\n                      >\n                        {ans.label}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            }\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6'>\n                Own\n              </Typography>\n              <Stack spacing={1} p={1}\n                sx={{ paddingBlockEnd: 2, height: '40vh', overflow: 'auto' }}\n              >\n                {ownAnswers.map((ans) => {\n                  return (\n                    <Button key={ans._id.$oid} fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans)}\n                    >\n                      {ans.label}\n                    </Button>\n                  )\n                })}\n              </Stack>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditAnswers","import { useState, useContext } from 'react'\nimport { Grid, Snackbar, Alert } from '@mui/material'\n\nimport { useAxiosEffect } from '../../tools/axiosTool'\nimport EditCreditCards from './EditCreditCards'\nimport EditAnswers from './EditAnswers'\nimport { UserContext } from '../../tools/contexts'\n\nconst AnswersSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => {\n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods)\n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <>\n      {user.is_admin &&\n        <Grid item xs={12} md={6}>\n          <EditCreditCards\n            payMeths={payMeths}\n            setPayMeths={setPayMeths}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      }\n      <Grid item xs={12} md={6}>\n        <EditAnswers\n          user={user}\n          commonAnswers={commonAnswers}\n          setCommonAnswers={setCommonAnswers}\n          ownAnswers={ownAnswers}\n          setOwnAnswers={setOwnAnswers}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default AnswersSettings;","import { useState } from 'react'\nimport {\n  Grid, Paper, Box, Button, TextField, Typography, FormControlLabel, Checkbox,\n  Divider\n} from '@mui/material'\nimport { ArrowUpward, Add } from '@mui/icons-material'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst NewItem = (props) => {\n\n  const { dates, setDates, setHasChanged, handleMessage } = props\n\n  const initialNewOne = { str_date: '', percent: '', increaseAll: true }\n\n  const [newOne, setNewOne] = useState(initialNewOne)\n  const [upAll, setUpAll] = useState('')\n\n  const handleChangeNewOne = (e) => {\n    const { name, value, checked } = e.target\n    setNewOne({ ...newOne, [name]: name === 'increaseAll' ? checked : value })\n  }\n\n  const addSuccessiveIncreases = (inc) => {\n    const b = parseFloat(inc)\n    return dates.map(item => {\n      const a = parseFloat(item.percent)\n      const newPercent = a + b + (a * b / 100)\n      return { _id: item._id, percent: newPercent.toFixed(2) }\n    })\n  }\n\n  const handleAddOne = () => {\n    const newDate = newOne.str_date.split('-').join('/')\n    const newPercent = parseFloat(newOne.percent)\n    for (let date of dates) {\n      if (date._id === newDate) {\n        handleMessage(`'${date._id}' is already on the list`, 'error')\n        return\n      }\n    }\n    let newDates = newOne.increaseAll\n      ? addSuccessiveIncreases(newPercent)\n      : dates\n    setDates([\n      { _id: newDate, percent: newPercent },\n      ...newDates\n    ])\n    setHasChanged(true)\n    setNewOne(initialNewOne)\n  }\n  \n  const handleUpdateAll = () => {\n    setDates(addSuccessiveIncreases(upAll))\n    setHasChanged(true)\n    setUpAll('')\n  }\n\n  return (\n    <Grid item pb='1vh'>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '39vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            sx={{ minHeight: '35vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h6' color='success.main'>\n                Add New Date - Percentage\n              </Typography>\n            </Grid>\n            <Grid item xs={8} md={4}>\n              <TextField fullWidth size='small' label='Date'\n                focused\n                type='date'\n                name='str_date'\n                value={newOne.str_date}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={4} md={2}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                name='percent'\n                value={newOne.percent}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <FormControlLabel label='Increase All' control={\n                <Checkbox color='warning'\n                  name='increaseAll'\n                  checked={newOne.increaseAll}\n                  onChange={handleChangeNewOne}\n                />\n              } />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <RDialog title='Add New Date-Percentage Pair'\n                message='Confirm add a new one?' confirmText='ADD'\n                color='success' action={handleAddOne}\n              >\n                <Button fullWidth variant='contained' color='success'\n                  disabled={\n                    !Boolean(newOne.str_date)\n                    || !Boolean(newOne.percent)\n                  }\n                  sx={{ height: '100%' }} startIcon={<Add />}\n                >\n                  ADD\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6' color='warning.main'>\n                Increase All Percentages\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                value={upAll}\n                onChange={(e) => setUpAll(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <RDialog title='Update Date-Percentage Table'\n                message='Confirm update table?' confirmText='UPDATE'\n                action={handleUpdateAll}\n              >\n                <Button fullWidth variant='contained' color='warning'\n                  disabled={!Boolean(upAll)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  UPDATE TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default NewItem","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  Button, IconButton, Typography\n} from '@mui/material'\nimport { ArrowUpward, Download, Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\n\nconst Lists = (props) => {\n\n  const { lists, setLists, setDates, setHasChanged, handleMessage } = props\n\n  const { user } = useContext(UserContext)\n  const [selectedList, setSelectedList] = useState('')\n\n  const fetchList = () => {\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleLoadList = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { list_name: selectedList },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          fetchList()\n          handleMessage(res.data.msg, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n      setSelectedList('')\n      setHasChanged(false)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDownloadList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/get-list-file',\n          { file_name: name },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['err']) {\n          console.error(res.data.err)\n        } else {\n          const fileToSave = window.URL.createObjectURL(\n            new Blob(\n              [JSON.stringify(res.data, undefined, 2)],\n              { type: 'application/json' }\n            )\n          )\n          const link = document.createElement('a')\n          link.href = fileToSave\n          link.setAttribute('download', `${name}`)\n          document.body.appendChild(link)\n          link.click()\n          link.remove()\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDropList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.delete(\n          api_url + '/calculator/drop-list',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            },\n            data: { file_name: name }\n          }\n        )\n        if (res.data['msg']) {\n          const new_list = lists.filter(i => i.list_name !== name)\n          setLists(new_list)\n          setSelectedList('')\n          handleMessage(res.data.msg, 'info')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Grid item>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '40vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            alignContent='flex-start'\n          >\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6' color='error.main'>\n                Load Table\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} pb={2}>\n              <RDialog title='Load Table'\n                message='Confirm load table?'\n                confirmText='LOAD' disabled={!Boolean(selectedList)}\n                action={handleLoadList}\n              >\n                <Button fullWidth variant='contained' color='error'\n                  disabled={!Boolean(selectedList)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  LOAD TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container align='center'\n                alignItems='center'\n                alignContent='flex-start'\n                sx={{ height: '25vh', overflow: 'auto' }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align='center' width='80%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Table Name\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Download\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Drop\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {lists.map(list => {\n                      const is_sel = selectedList === list.list_name\n                      return (\n                        <TableRow key={list._id.$oid} hover\n                          selected={is_sel}\n                        >\n                          <TableCell align='center'\n                            onClick={() => {\n                              is_sel ?\n                                setSelectedList('')\n                                :\n                                setSelectedList(list.list_name)\n                            }}>\n                            {list.list_name}\n                          </TableCell>\n                          <TableCell align='center'>\n                            <IconButton size='small' color='info'\n                              onClick={() =>\n                                handleDownloadList(list.list_name)\n                              }\n                            >\n                              <Download />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell align='center'>\n                            <RDialog title='Drop Data Table?'\n                              message='Confirm drop Table?'\n                              confirmText='DROP'\n                              action={() => {\n                                handleDropList(list.list_name)\n                              }}\n                            >\n                              <IconButton size='small' color='error'>\n                                <Delete />\n                              </IconButton>\n                            </RDialog>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Lists","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  IconButton, TextField, Button\n} from '@mui/material'\nimport {\n  Done, Cancel, Edit, Delete\n} from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst Items = (props) => {\n\n  const {\n    dates, setDates, lists, setLists, hasChanged, setHasChanged, handleMessage\n  } = props\n\n  const { user } = useContext(UserContext)\n  const [selected, setSelected] = useState({ _id: '', percent: '' })\n  const [oneDate, setOneDate] = useState({ _id: '', percent: '' })\n\n  const handleChangeSelected = (e) => {\n    const { name, value } = e.target\n    setOneDate({ ...oneDate, [name]: value })\n  }\n\n  const handleUpdateOne = () => {\n    let newDates = dates.map(item => {\n      return item._id !== selected._id ? item\n        : { _id: oneDate._id, percent: parseFloat(oneDate.percent) }\n    })\n    if (selected._id !== oneDate._id) {\n      newDates.push({ ...selected, percent: -1 })\n    }\n    setDates(newDates)\n    setSelected({ _id: '', percent: '' })\n    setHasChanged(true)\n  }\n\n  const handleDeleteOne = (id) => {\n    const newDates = dates.filter(item => item._id !== id)\n    setDates(newDates)\n    setHasChanged(true)\n  }\n\n  const handleUpdateTable = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { dates: dates },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          const newLists = lists\n          newLists.unshift({\n            _id: { $oid: new Date().getTime() },\n            list_name: res.data.new_list\n          })\n          setLists(newLists)\n          const newDates = dates\n            .filter(item => item.percent !== -1)\n            .sort((a, b) => a._id > b._id ? -1 : (a._id < b._id ? 1 : 0))\n          setDates(newDates)\n          handleMessage(res.data.msg, 'success')\n          setHasChanged(false)\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Paper elevation={5} sx={{ borderRadius: 1 }}>\n      <Box borderRadius={3} p={2}\n        sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n      >\n        <Grid container spacing={1} align='center' pr={2}\n          alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '65vh', overflow: 'auto' }}\n        >\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' width='50%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Date (y/m/d)\n                </TableCell>\n                <TableCell align='center' width='30%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Percentage\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Edit\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Drop\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                dates?.map(date => {\n                  const dis = (\n                    selected._id === oneDate._id &&\n                    selected.percent.toString() ===\n                    oneDate.percent.toString()\n                  )\n                  const component = (selected._id === date._id\n                    ?\n                    <TableRow key={date._id} hover selected>\n                      <TableCell>\n                        {<TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' }\n                          }}\n                          name='_id'\n                          value={oneDate._id}\n                          onChange={handleChangeSelected}\n                        />}\n                      </TableCell>\n                      <TableCell>\n                        <TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' },\n                            min: 0\n                          }}\n                          type='number'\n                          name='percent'\n                          value={oneDate.percent}\n                          onChange={handleChangeSelected}\n                        />\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='success'\n                          disabled={dis}\n                          onClick={handleUpdateOne}\n                        >\n                          <Done />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='info'\n                          onClick={() =>\n                            setSelected({ _id: '', percent: '' })\n                          }\n                        >\n                          <Cancel />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                    :\n                    <TableRow key={date._id} hover>\n                      <TableCell align='center'>\n                        {date._id}\n                      </TableCell>\n                      <TableCell align='center'>\n                        {date.percent}\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='warning'\n                          onClick={() => {\n                            setOneDate({\n                              _id: date._id, percent: date.percent\n                            })\n                            setSelected({\n                              _id: date._id, percent: date.percent\n                            })\n                          }}\n                        >\n                          <Edit />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <RDialog title='Delete Data?'\n                          message='Confirm delete Data Percentage?'\n                          confirmText='Delete'\n                          action={() => handleDeleteOne(date._id)}\n                        >\n                          <IconButton size='small' color='error'>\n                            <Delete />\n                          </IconButton>\n                        </RDialog>\n                      </TableCell>\n                    </TableRow>\n                  )\n                  return component\n                })\n              }\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid container spacing={2} py={2}>\n          <Grid item xs={6} md={9}></Grid>\n          <Grid item xs={6} md={3}>\n            <RDialog title='Update Table' message='Confirm Update Table?'\n              confirmText='UPDATE' action={handleUpdateTable} color='warning'\n              disabled={!hasChanged}\n            >\n              <Button fullWidth variant='contained' color='error'\n                disabled={!hasChanged}\n              >\n                Update Table\n              </Button>\n            </RDialog>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Items","import { useEffect, useState, useContext } from 'react'\nimport { Grid, Typography, Snackbar, Alert } from '@mui/material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport NewItem from './NewItem'\nimport Lists from './Lists'\nimport Items from './Items'\n\n\nconst CalculatorSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const [dates, setDates] = useState([])\n  const [lists, setLists] = useState([])\n  const [hasChanged, setHasChanged] = useState(false)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n          setLists(res.data.lists)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  return (\n    <>\n      {user?.is_admin ?\n        <>\n          <Grid item xs={12} md={6}>\n\n            <NewItem\n              dates={dates}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n            <Lists\n              lists={lists}\n              setLists={setLists}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n            <Items\n              dates={dates}\n              setDates={setDates}\n              lists={lists}\n              setLists={setLists}\n              hasChanged={hasChanged}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n\n        </>\n        :\n        <Grid item>\n          <Typography variant='h3' color='error'>\n            ⛔ This section is for admins only\n          </Typography>\n        </Grid>\n      }\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default CalculatorSettings;","import { useState, useContext } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControlLabel, Snackbar, Alert\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport { UserContext } from '../../tools/contexts'\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxiosEffect, useAxios } from '../../tools/axiosTool'\n\nconst ExpressionsSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const initialExpression = {\n    id: '',\n    is_system: false,\n    identifier: '',\n    pattern: '',\n    replacement: ''\n  }\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n  const [expression, setExpression] = useState(initialExpression)\n  const [edit, setEdit] = useState(false)\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  const handleChangeExpression = (e) => {\n    const { name, value, checked } = e.target\n    setExpression({\n      ...expression,\n      [name]: name !== 'is_system' ? value : checked\n    })\n  }\n\n  const handleClickExpression = (exp) => {\n    setExpression(exp)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setExpression(initialExpression)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n      if (d.msg) {\n        handleMessage(d.msg, 'success')\n      }\n      setExpression(initialExpression)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  useAxiosEffect(\n    '/answers/get-expressions', 'answers',\n    ...queryHandlers\n  )\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-expression', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={7}>\n          <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n            border={2} p={2} borderRadius={1} borderColor='info.main'\n          >\n            <Grid container spacing={1} align='center' pr={2}>\n              <Grid item xs={12} md={8}>\n                <TextField size='small' label='Identifier' color='warning'\n                  fullWidth name='identifier'\n                  value={expression.identifier}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n\n              {user?.is_admin && !edit &&\n                <Grid item xs={12} md={3}>\n                  <FormControlLabel control={\n                    <Switch\n                      name='is_system'\n                      checked={expression.is_system}\n                      onChange={handleChangeExpression}\n                    />\n                  }\n                    label='System'\n                  />\n                </Grid>\n              }\n              <Grid item xs={12} md={11}>\n                <TextField size='small' label='Pattern' color='warning'\n                  fullWidth name='pattern'\n                  value={expression.pattern} onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={11}>\n                <TextField label='Replacement' color='warning'\n                  fullWidth multiline rows={4} name='replacement'\n                  value={expression.replacement}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={1}>\n                <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                  confirmText={edit ? 'Update' : 'Create'} message={\n                    edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                  } action={edit ? () => handleUpdateAnswer({\n                    expression: {\n                      ...expression, id: expression._id.$oid\n                    }\n                  }) : () => handleCreateAnswer({\n                    expression: expression\n                  })} color={edit ? 'warning' : 'success'}\n                >\n                  <IconButton color={edit ? 'primary' : 'success'}\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Save />\n                  </IconButton>\n                </RDialog>\n                <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                  confirmText='Delete' action={() => handleDeleteAnswer({\n                    expression: {\n                      id: expression._id.$oid\n                    }\n                  })}\n                >\n                  <IconButton color='error'\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Delete />\n                  </IconButton>\n                </RDialog>\n                <IconButton color='warning'\n                  disabled={!Boolean(expression.identifier)}\n                  onClick={handleCancel}\n                >\n                  <Cancel />\n                </IconButton>\n              </Grid>\n              {user?.is_admin &&\n                <Grid item xs={12} md={6}>\n                  <Typography variant='h6'>\n                    System\n                  </Typography>\n                  <Stack spacing={1} p={1}\n                    sx={{\n                      paddingBlockEnd: 2, height: '38vh', overflow: 'auto'\n                    }}\n                  >\n                    {sysRegex.map((exp) => {\n                      return (\n                        <Button key={exp._id.$oid} fullWidth variant='contained'\n                          color='error'\n                          onClick={() => handleClickExpression(exp)}\n                        >\n                          {exp.identifier}\n                        </Button>\n                      )\n                    })}\n                  </Stack>\n                </Grid>\n              }\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Own\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '38vh', overflow: 'auto' }}\n                >\n                  {ownRegex.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        color='primary'\n                        onClick={() => handleClickExpression(ans)}\n                      >\n                        {ans.identifier}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default ExpressionsSettings","import { useContext, useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport axios from 'axios'\nimport {\n  Typography, Button, Grid, TextField, Container, Alert, Fade\n} from '@mui/material'\n\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst UserLogin = () => {\n\n  const [uName, setUName] = useState('')\n  const [uPass, setUPass] = useState('')\n  const [loginState, setLoginState] = useState('')\n\n  const { user, setUser } = useContext(UserContext)\n  const { setUserSettings } = useContext(UserSettingsContext)\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  useEffect(() => {\n    if (user) {\n      navigate(\n        location.pathname === '/login' ? '/news' : location.pathname,\n        { replace: true }\n      )\n    }\n  })\n\n  const handleUName = e => {\n    setUName(e.target.value)\n  }\n\n  const handleUPass = e => {\n    setUPass(e.target.value)\n  }\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    const path = location.pathname === '/login' ? '/news' : location.pathname\n\n    try {\n      let res = await axios.post(\n        api_url + '/users/signin',\n        {\n          'username': uName,\n          'password': uPass\n        }\n      )\n      if (res.data['user']) {\n        setUser({ ...res.data.user, username: uName })\n        setUserSettings({ ...res.data.settings })\n      } else {\n        setUName('')\n        setUPass('')\n        setLoginState(res.data['msg'])\n        setTimeout(() => {\n          setLoginState('')\n        }, 2500);\n      }\n      // console.log(res.data['user'])\n    }\n    catch (error) {\n      console.log(error)\n    }\n    navigate(path, { replace: true })\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3} margin={0} >\n        <Grid item xs={12}>\n          <Typography variant='h3' color='primary'>User Login</Typography>\n        </Grid>\n        <Grid item >\n          <Fade in={Boolean(loginState)} timeout={1000}>\n            <Alert severity='warning' variant='outlined'>\n              {loginState}\n            </Alert>\n          </Fade>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uName'\n            label='Username'\n            value={uName}\n            onChange={handleUName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uPass'\n            label='Password'\n            type='password'\n            value={uPass}\n            onChange={handleUPass}\n            onKeyPress={\n              e => { if (e.key === 'Enter') { handleLogin(e) } }\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='contained' color='primary' onClick={handleLogin}>\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default UserLogin;","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel,\n  Fade, Alert\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst UpdateUserForm = (props) => {\n\n  const { user, setUser, ...others } = props\n\n  const initialUser = {\n    username: '',\n    email: '',\n    password: '',\n    new_password: '',\n    confirm_new_password: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n  const [userData, setUserData] = useState(initialUser)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-user-data',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUserData({\n            ...res.data,\n            password: '',\n            new_password: '',\n            confirm_new_password: ''\n          })\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleChangeUser = (e) => {\n    const { name, value, checked } = e.target\n    setUserData({\n      ...userData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [samePassword, setSamePassword] = useState(true)\n  const handleSamePassword = (e) => {\n    const { name, value } = e.target\n    if (name === 'new_password') {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['confirm_new_password'] === value\n      )\n    } else {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['new_password'] === value\n      )\n    }\n  }\n\n  const [updateState, setUpdateState] = useState({ msg: '', vnt: 'info' })\n  const handleUpdateUser = () => {\n    if (!samePassword) {\n      setUpdateState({ msg: \"new password doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUpdateState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-user',\n          userData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUpdateState({ msg: res.data['msg'], vnt: 'success' })\n          const resultUser = {\n            ...user,\n            username: userData['username'],\n            first_name: userData['first_name'],\n            last_name: userData['last_name'],\n            is_admin: userData['is_admin']\n          }\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'success' })\n          }, 2500)\n          if (res.data['wrn']) {\n            setTimeout(() => {\n              setUpdateState({ msg: res.data['wrn'], vnt: 'warning' })\n            }, 2600)\n            setTimeout(() => {\n              setUpdateState({ msg: '', vnt: 'warning' })\n              setUser(resultUser)\n            }, 5100)\n          } else {\n            setUser(resultUser)\n          }\n        } else {\n          setUpdateState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSamePassword(true)\n    }, 500);\n  }\n\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update My User Account\n              </Typography>\n            </Grid>\n            <Grid item xs={12} mx={1}>\n              <Typography variant='h6' color='GrayText'>\n                {userData['email']}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={userData['username']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            {user['is_admin'] &&\n              <Grid item mb={0}>\n                <FormControlLabel control={\n                  <Switch\n                    name='is_admin'\n                    checked={userData['is_admin']}\n                    onChange={handleChangeUser}\n                  />\n                }\n                  label='Is Admin'\n                />\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='First Name'\n                value={userData['first_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={userData['last_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <Paper elevation={1} sx={{\n                background: 'darkGray2',\n                display: 'inline-block'\n              }}>\n                <Grid item pb={2}>\n                  <TextField size='small' error={!samePassword}\n                    name='new_password'\n                    label='New Password'\n                    type='password'\n                    value={userData['new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField size='small' error={!samePassword}\n                    name='confirm_new_password'\n                    label='Confirm New Password'\n                    type='password'\n                    value={userData['confirm_new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n              </Paper>\n              <Grid container columns={2} pt={2}>\n                <Grid item pb={2}>\n                  <TextField size='small' color='warning'\n                    focused\n                    name='password'\n                    label='Password'\n                    type='password'\n                    value={userData['password']}\n                    onChange={handleChangeUser}\n                    onKeyPress={\n                      e => {if (e.key === 'Enter') {handleUpdateUser()}}\n                    }\n                  />\n                </Grid>\n                <RDialog\n                  title='Update User' message='Confirm user update?'\n                  confirmText='UPDATE' color='secondary'\n                  action={handleUpdateUser}\n                >\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"warning\">\n                      UPDATE\n                    </Button>\n                  </Grid>\n                </RDialog>\n              </Grid>\n              <Grid item pb={2}>\n                <Fade in={Boolean(updateState['msg'])} timeout={1000}>\n                  <Alert severity={updateState['vnt']} variant='outlined'>\n                    {updateState['msg']}\n                  </Alert>\n                </Fade>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n    </Fragment >\n  )\n}\n\nexport default UpdateUserForm","import { Fragment, useState, useContext } from 'react'\nimport {\n  Grid, Typography, Paper, Button, Switch, FormControlLabel, FormControl,\n  Select, MenuItem, Snackbar, Alert, TextField\n} from '@mui/material'\n\nimport { UserSettingsContext } from '../tools/contexts'\nimport RDialog from '../tools/ReusableDialog'\nimport { useAxios } from '../tools/axiosTool'\n\n\nconst UserOptions = (props) => {\n\n  const { userSettings, setUserSettings } = useContext(UserSettingsContext)\n  const [settings, setSettings] = useState(userSettings)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const handleChangeSettings = (e) => {\n    const { name, value, checked } = e.target\n    setSettings({\n      ...settings,\n      [name]: name !== 'calculator' ? value : checked\n    })\n  }\n\n  const handleSaveSettings = useAxios(\n    'put', '/users/update-user-settings', 'settings',\n    (d) => {\n      setUserSettings(d.settings)\n      handleMessage(d.msg, 'success')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  return (\n    <Fragment {...props}>\n      <Grid item xs={12}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"primary\">\n                User Settings\n              </Typography>\n            </Grid>\n            <Grid item xs={11}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='theme_mode'\n                  value={settings.theme_mode}\n                  onChange={handleChangeSettings}\n                >\n                  <MenuItem value='dark'> DARK THEME </MenuItem>\n                  <MenuItem value='light'> LIGHT THEME</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel control={\n                <Switch\n                  name='calculator'\n                  checked={settings.calculator}\n                  onChange={handleChangeSettings}\n                />\n              }\n                label='Basic Calculator for Default'\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Posts Font Family'\n                name='postsFontFamily'\n                value={settings.postsFontFamily}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={11}>\n              <TextField fullWidth size='small' label='Notification Volume'\n                type='range'\n                inputProps={{ min: 0, max: 1, step: 0.1}}\n                name='notifVol'\n                value={settings.notifVol}\n                onChange={handleChangeSettings}\n              />\n            </Grid>\n            <Grid item xs={12} px={2} pb={2}>\n              <RDialog\n                title='Save User Settings' confirmText='UPDATE'\n                message='Confirm Save user settings?' color='warning'\n                action={() => handleSaveSettings({\n                  settings: {\n                    theme_mode: settings.theme_mode,\n                    calculator: settings.calculator,\n                    postsFontFamily: settings.postsFontFamily,\n                    notifVol: parseFloat(settings.notifVol)\n                  }\n                })}\n              >\n                <Button variant=\"contained\" color=\"warning\">\n                  CONFIGURE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Fragment >\n  )\n}\n\nexport default UserOptions\n","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, ListItem, ListItemButton, IconButton, ListItemText,\n  Fade, Alert\n} from '@mui/material'\nimport { Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst OtherUsersList = (props) => {\n\n  const { \n    user, setEdit, usersSate, setUsersState,\n    initialOtherUser, setOtherUserData, ...others \n  } = props\n  const [usersData, setUsersData] = useState([])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-users',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUsersData(res.data)\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user, usersSate])\n\n  const handleEditUser = (user) => {\n    setOtherUserData({ ...user })\n    setEdit(true)\n  }\n\n  const handleDeleteUser = (email) => {\n    (async () => {\n      try {\n        const res = await axios.delete(\n          api_url + '/users/delete-other-user',\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            },\n            data: { email: email }\n          }\n          )\n          if (res.data['msg']) {\n            setUsersState({ msg: res.data['msg'], vnt: 'info' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'info' })\n            }, 2500)\n          } else {\n            setUsersState({ msg: res.data['err'], vnt: 'error' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'error' })\n            }, 2500)\n          }\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n      setEdit(false)\n      setOtherUserData(initialOtherUser)\n    }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                List of Active Users\n              </Typography>\n            </Grid>\n            {usersData.map((otherUser) => {\n              return (\n                <ListItem key={otherUser['username']} secondaryAction={\n                  <RDialog title='Delete' message='Confirm user Delete?'\n                    confirmText='DELETE' action={() => \n                      handleDeleteUser(otherUser['email'])\n                    }\n                  >\n                    <IconButton edge='end'>\n                      <Delete fontSize='large' color='error' />\n                    </IconButton>\n                  </RDialog>\n                }>\n                  <ListItemButton onClick={() => { handleEditUser(otherUser) }}>\n                    <ListItemText\n                      primary={[\n                        `${otherUser['username']} -`,\n                        otherUser['first_name'],\n                        otherUser['last_name']\n                      ].join(' ')}\n                      secondary={otherUser['email']}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              )\n            })}\n          </Grid>\n        </Paper>\n          <Grid item pt={3}>\n            <Fade in={Boolean(usersSate['msg'])} timeout={1000}>\n              <Alert severity={usersSate['vnt']} variant='outlined'>\n                {usersSate['msg']}\n              </Alert>\n            </Fade>\n          </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default OtherUsersList","import { Fragment, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst CreateUpdateOtherUser = (props) => {\n\n  const {\n    user, edit, setEdit, setUsersState, initialOtherUser,\n    otherUserData, setOtherUserData, ...others\n  } = props\n\n  const handleChangeOtherUser = (e) => {\n    const { name, value, checked } = e.target\n    setOtherUserData({\n      ...otherUserData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [sameEmail, setSameEmail] = useState(true)\n  const handleSameEmail = (e) => {\n    const { name, value } = e.target\n    if (name === 'email') {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['confirm_email'] === value\n      )\n    } else {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['email'] === value\n      )\n    }\n  }\n\n  const handleCreateOtherUser = () => {\n    for (let [field, value] of Object.entries(otherUserData)) {\n      if (value === '') {\n        setUsersState({ msg: `Missing Value ${field}`, vnt: 'error' })\n        setTimeout(() => {\n          setUsersState({ msg: '', vnt: 'error' })\n        }, 2500);\n        return\n      }\n    }\n    if (!sameEmail) {\n      setUsersState({ msg: \"Email doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUsersState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/signup',\n          otherUserData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setOtherUserData(initialOtherUser)\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSameEmail(true)\n    }, 500);\n  }\n\n  const handleUpdateOtherUser = () => {\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-other-user',\n          (({ email, username, first_name, last_name, is_admin }) => (\n            { email, username, first_name, last_name, is_admin }\n          ))(otherUserData),\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n  }\n\n  const handleCancelEditUser = () => {\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n    setSameEmail(true)\n  }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update/Create User Account\n              </Typography>\n            </Grid>\n            {!edit ? <>\n              <Grid item>\n                <Paper elevation={1} sx={{\n                  background: 'darkGray2',\n                  display: 'inline-block'\n                }}>\n                  <Grid item pb={2}>\n                    <TextField size='small' error={!sameEmail}\n                      name='email'\n                      label='Email (ID - immutable)'\n                      value={otherUserData['email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField size='small' error={!sameEmail}\n                      name='confirm_email'\n                      label='Confirm Email'\n                      value={otherUserData['confirm_email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                </Paper>\n              </Grid>\n            </> :\n              <Grid item xs={12} mx={1}>\n                <Typography variant='h6' color='GrayText'>\n                  {otherUserData['email']}\n                </Typography>\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={otherUserData['username']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item mb={0}>\n              <FormControlLabel control={\n                <Switch\n                  name='is_admin'\n                  checked={otherUserData['is_admin']}\n                  onChange={handleChangeOtherUser}\n                />\n              }\n                label='Is Admin'\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='Fisrs Name'\n                value={otherUserData['first_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={otherUserData['last_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <Grid container columns={2} sx={{ alignItems: 'flex-end' }}>\n                {edit ? <>\n                  <Grid item pl={2} pb={2}>\n                    <Button variant=\"contained\" color=\"error\"\n                      onClick={handleCancelEditUser}\n                    >\n                      CANCEL\n                    </Button>\n                  </Grid>\n                  <RDialog title='Update Other User'\n                    message='Confirm user update?' color='secondary'\n                    confirmText='UPDATE' action={handleUpdateOtherUser}\n                  >\n                    <Grid item pl={2} pb={2}>\n                      <Button variant=\"contained\" color=\"warning\">\n                        UPDATE\n                      </Button>\n                    </Grid>\n                  </RDialog>\n                </> : <>\n                  <Grid item pb={2}>\n                    <Paper elevation={1} sx={{\n                      maxWidth: '230px',\n                      background: 'darkGray2',\n                      display: 'inline-block'\n                    }}>\n                      <Grid item p={2}>\n                        <Typography variant=\"body1\"\n                          color=\"warning.main\"\n                        >\n                          By default the password will be \"abc123\"\n                          the user must change it later\n                        </Typography>\n                      </Grid>\n                    </Paper>\n                  </Grid>\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"success\"\n                      onClick={handleCreateOtherUser}\n                    >\n                      CREATE\n                    </Button>\n                  </Grid>\n                </>}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default CreateUpdateOtherUser","import { useContext, useState } from 'react'\nimport {\n  Container, Grid, Typography,\n} from '@mui/material'\n\nimport { UserContext } from '../tools/contexts'\nimport UpdateUserForm from './UpdateUserFrom'\nimport UserOptions from './UserOptions'\nimport OtherUsersList from './OtherUsersList'\nimport CreateUpdateOtherUser from './CreateUpdateOtherUser'\n\n\nconst UserAccount = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  const initialOtherUser = {\n    username: '',\n    email: '',\n    confirm_email: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n\n  const [edit, setEdit] = useState(false)\n  const [otherUserData, setOtherUserData] = useState(initialOtherUser)\n  const [usersSate, setUsersState] = useState({ msg: '', vnt: 'success' })\n\n  const displayAdmin = user.is_admin ? 'block' : 'none'\n  const displayNoAdmin = user.is_admin ? 'none' : 'block'\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" color=\"secondary\">User Account</Typography>\n      </Grid>\n      <Grid container spacing={2}>\n\n        <Grid item xs={12} md={4} sx={{ display: displayAdmin }}>\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n          <Grid item mt={2}> </Grid>\n          <UserOptions />\n        </Grid>\n\n        <Grid item xs={12} md={4} sx={{ display: displayNoAdmin }}>\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4} sx={{ display: displayNoAdmin }} >\n          <UserOptions />\n        </Grid>\n\n        {user.is_admin && <>\n          <OtherUsersList\n            user={user}\n            setEdit={setEdit}\n            usersSate={usersSate}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            setOtherUserData={setOtherUserData}\n          />\n\n          <CreateUpdateOtherUser\n            user={user}\n            edit={edit}\n            setEdit={setEdit}\n            setUsersState={setUsersState}\n            initialOtherUser={initialOtherUser}\n            otherUserData={otherUserData}\n            setOtherUserData={setOtherUserData}\n          />\n        </>}\n\n      </Grid>\n    </Container >\n  )\n}\n\nexport default UserAccount;","import { useContext, useEffect, useMemo } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { cyan, deepOrange, deepPurple } from \"@mui/material/colors\"\nimport { Paper, CssBaseline } from \"@mui/material\"\n\nimport Navbar from './NavBar'\nimport AuthenticatedContent from './AuthenticatedContent'\nimport { routes, sub_routes } from './tools/routes'\n\nimport News from './_news/News'\nimport Calculators from './_calculator/Calculators'\nimport Answers from './_answers/Answers'\nimport Settings from './_settings/Settings'\nimport AnswersSettings from './_settings/answers/AnswersSettings'\nimport CalculatorSettings from './_settings/calculator/CalculatorSettings'\nimport ExpressionsSettings from './_settings/expressions/ExpressionsSettings'\nimport UserLogin from './_user/UserLogin'\nimport UserAccount from './_user/UserAccount'\n\nimport { UserContext, AuthContext, UserSettingsContext } from './tools/contexts'\n\nconst App = () => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { userSettings } = useContext(UserSettingsContext)\n\n  const theme = useMemo(() =>\n    userSettings.theme_mode !== 'light' ?\n      createTheme({\n        palette: {\n          mode: 'dark',\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple\n        }\n      })\n      :\n      createTheme({\n        palette: {\n          mode: userSettings.theme_mode,\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple,\n          background: {\n            paper: '#eaeaea',\n            default: '#fafafa'\n          }\n        }\n      })\n    , [userSettings.theme_mode]\n  )\n\n  useEffect(() => {\n    if (user?.token) {\n      setAuth(true)\n    }\n  }, [user, setAuth])\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme>\n        <Paper sx={{ paddingBlockEnd: 2, minHeight: '100vh' }} square>\n          <Navbar />\n          {(auth ?\n            <AuthenticatedContent\n              setAuth={setAuth} user={user} setUser={setUser}\n            >\n              <Routes>\n                <Route path={'/'} element={<Navigate to={routes[0]} />} />\n                <Route path={routes[0]} element={<News />} />\n                <Route path={routes[1]} element={<Calculators />} />\n                <Route path={routes[2]} element={<Answers />} />\n                <Route path={routes[3]} element={<Settings />} >\n                  <Route\n                    path={sub_routes[0]} element={<AnswersSettings />} />\n                  <Route\n                    path={sub_routes[1]} element={<CalculatorSettings />} />\n                  <Route\n                    path={sub_routes[2]} element={<ExpressionsSettings />} />\n                </Route>\n                <Route path={'login'} element={<UserLogin />} />\n                <Route path={'account'} element={<UserAccount />} />\n              </Routes>\n            </AuthenticatedContent>\n            :\n            <UserLogin />\n          )}\n        </Paper>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalContext from './components/tools/contexts'\n\nimport App from './components/App';\n\nReactDOM.render(\n    <>\n      <BrowserRouter>\n        <GlobalContext>\n          <App />\n        </GlobalContext>\n      </BrowserRouter>\n    </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}