{"version":3,"sources":["components/tools/useUser.js","components/tools/useSettings.js","components/tools/contexts.jsx","components/tools/routes.js","components/MenuTab.jsx","components/tools/ReusableDialog.jsx","components/AvatarMenu.jsx","components/NavMenu.jsx","components/NavBar.jsx","components/AuthenticatedContent.jsx","components/tools/daysAgo.js","components/_news/Posts.jsx","components/_news/PostSelect.jsx","components/_news/Panel.jsx","components/_news/News.jsx","components/_calculator/Complete.jsx","components/_calculator/Basic.jsx","components/_calculator/CalcHistory.jsx","components/_calculator/Calculators.jsx","components/tools/axiosTool.js","components/tools/strFormat.js","components/_answers/CreditCards.jsx","components/_answers/AnswerButtons.jsx","components/_answers/Answers.jsx","components/_settings/Settings.jsx","components/_settings/answers/EditCreditCards.jsx","components/_settings/answers/EditAnswers.jsx","components/_settings/answers/AnswersSettings.jsx","components/_settings/calculator/NewItem.jsx","components/_settings/calculator/Lists.jsx","components/_settings/calculator/Items.jsx","components/_settings/calculator/CalculatorSettings.jsx","components/_settings/expressions/ExpressionsSettings.jsx","components/_user/UserLogin.jsx","components/_user/UpdateUserFrom.jsx","components/_user/UserOptions.jsx","components/_user/OtherUsersList.jsx","components/_user/CreateUpdateOtherUser.jsx","components/_user/UserAccount.jsx","components/App.jsx","index.js"],"names":["useUser","useState","userString","localStorage","getItem","JSON","parse","getUser","user","setUser","setItem","stringify","useSettings","defaultSettings","theme_mode","calculator","settingsStr","getSettings","settings","setSettings","UserContext","createContext","AuthContext","auth","setAuth","PostContext","fetchedPosts","setFetchedPosts","UserSettingsContext","userSettings","setUserSettings","GlobalContext","children","userValue","useMemo","authValue","postsValue","userSettingsValue","Provider","value","routes","sub_routes","api_url","host","MenuTab","props","items","setTabValue","icon","label","disabled","others","navigate","useNavigate","anchorEl","setAnchorEl","open","Boolean","Tab","iconPosition","id","onClick","e","currentTarget","undefined","Menu","onClose","TransitionComponent","Fade","map","item","MenuItem","sub_route","RDialog","title","message","confirmText","color","action","setOpen","justClose","divProps","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","error","console","autoFocus","stringAvatar","first_name","last_name","join","toUpperCase","AvatarMenu","useContext","location","useLocation","bg","pathname","split","openMenu","IconButton","variant","Avatar","sx","bgcolor","Typography","marginX","mb","email","Divider","ListItemIcon","Person","removeItem","Logout","NavMenu","Newspaper","key","route","Calculate","ViewList","Settings","is_admin","push","display","xs","sm","textAlign","ArrowForwardIos","Navbar","currentTab","tabValue","count","setCount","newPosts","length","AppBar","position","Toolbar","justifyContent","Tabs","visibility","indicatorColor","onChange","_","newValue","Badge","badgeContent","anchorOrigin","vertical","horizontal","component","Link","to","AuthenticatedContent","timeStamp","setTimeStamp","useEffect","source","axios","CancelToken","checkForNewPosts","a","post","last_post","cancelToken","token","headers","Accept","Authorization","res","data","warn","errCode","response","status","watcher","setInterval","clearInterval","cancel","refreshing","get","daysAgo","today","date","delta","toFixed","Posts","filter","severity","owner","handleMessage","postToDelete","setPostToDelete","posts","severity_filter","owner_filter","filteredPosts","_id","dividedPosts","Date","getTime","last_day","forEach","other_day","divider","Grid","md","Box","border","p","borderRadius","borderColor","height","Stack","spacing","pr","paddingBlockEnd","overflow","element","Chip","post_props","Alarm","Alert","AlertTitle","username","whiteSpace","content","delete","PostSelect","options","option","setOption","FormControl","fullWidth","Select","size","target","op","Panel","send_props","setSeverity","setOwner","days_offset","newPost","setNewPost","newSeverity","setNewSeverity","setTo","handleChange","name","getSeverity","getPublic","ROWS","rows","useMediaQuery","theme","breakpoints","down","Paper","elevation","container","align","alignItems","TextField","multiline","type","inputProps","min","max","step","parseInt","is_public","endIcon","Send","News","msg","vnt","setMessage","Container","maxWidth","margin","pt","Snackbar","autoHideDuration","Complete","history","setHistory","first","second","third","fields","setFields","sign","setSign","operation","setOperation","expression","setExpression","handleQuery","url","to_set","Object","entries","field","result","$date","calculation","footnote","handleGetFirst","dataset","handleGetSecond","handleGetThird","handleEvaluate","handleEnterOnFields","minHeight","width","RadioGroup","px","FormControlLabel","control","Radio","InputProps","startAdornment","InputAdornment","endAdornment","onKeyPress","LooksOne","LooksTwo","Looks3","py","style","fontFamily","fontSize","InputLabelProps","Basic","price","str_date","handleGetPrice","reverse","err","CalcHistory","registries","dividedRegistries","reg","backgroundColor","alignContent","tColor","Tooltip","placement","disableInteractive","arrow","followCursor","Calculator","openSB","setOpenSB","basic","setBasic","labelPlacement","Switch","checked","useAxios","method","uri","expected","suc","wrn","TCErr","put","useAxiosEffect","strFormat","str","regexs","args","mut_str","pattern","replacement","replace","RegExp","match","index","CustomCell","TableCell","CreditCards","payMeths","sysRegex","setPrice","paymentMethods","last_card","formatedPayMeths","meth","card_name","header","total","parseFloat","increase","monthly","installments","$oid","pos_code","description","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","colSpan","hover","navigator","clipboard","writeText","handleCopy","ContentCopy","AnswerButtons","commonAnswers","ownAnswers","ownRegex","text","setText","answerList","reduce","resObj","curObj","handleClickAnswer","focused","readOnly","Cancel","ans","background","Answers","setPayMeths","setCommonAnswers","setOwnAnswers","setSysRegex","setOwnRegex","d","answers","payment_methods","common_answers","own_answers","sys_regex","own_regex","EditCreditCards","initialValue","newCard","setNewCard","selected","setSelected","setMethod","handleChangeMethod","handleAddCard","handleAddMethod","handleUpdateCardName","handleUpdateMethod","handleDropCard","handleDropMethod","Add","new_name","Done","Edit","Delete","EditAnswers","colors","initialAnswer","common","order","answer","setAnswer","edit","setEdit","handleChangeAnswer","queryHandlers","handleCreateAnswer","handleUpdateAnswer","handleDeleteAnswer","hex","Save","AnswersSettings","NewItem","dates","setDates","setHasChanged","initialNewOne","percent","increaseAll","newOne","setNewOne","upAll","setUpAll","handleChangeNewOne","addSuccessiveIncreases","inc","b","newPercent","pb","Checkbox","newDate","newDates","startIcon","ArrowUpward","Lists","lists","setLists","selectedList","setSelectedList","fetchList","list_name","list","is_sel","file_name","fileToSave","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleDownloadList","Download","new_list","i","handleDropList","Items","hasChanged","oneDate","setOneDate","handleChangeSelected","handleUpdateOne","dis","toString","handleDeleteOne","newLists","unshift","sort","CalculatorSettings","ExpressionsSettings","initialExpression","is_system","identifier","handleChangeExpression","handleClickExpression","exp","UserLogin","uName","setUName","uPass","setUPass","loginState","setLoginState","handleLogin","preventDefault","path","setTimeout","log","in","timeout","UpdateUserForm","password","new_password","confirm_new_password","userData","setUserData","handleChangeUser","samePassword","setSamePassword","handleSamePassword","updateState","setUpdateState","handleUpdateUser","resultUser","mx","columns","UserOptions","handleChangeSettings","handleSaveSettings","OtherUsersList","usersSate","setUsersState","initialOtherUser","setOtherUserData","usersData","setUsersData","otherUser","ListItem","secondaryAction","edge","ListItemButton","handleEditUser","ListItemText","primary","secondary","CreateUpdateOtherUser","otherUserData","handleChangeOtherUser","sameEmail","setSameEmail","handleSameEmail","pl","UserAccount","confirm_email","App","createTheme","palette","mode","cyan","deepOrange","info","deepPurple","paper","default","ThemeProvider","CssBaseline","enableColorScheme","square","Calculators","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.543acdc9.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useUser = () => {\n  \n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const userObj = JSON.parse(userString);\n    return userObj\n  };\n\n  const [user, setUser] = useState(getUser());\n\n  const saveUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  };\n\n  return [\n    user,\n    saveUser\n  ]\n}\n\nexport default useUser;","import { useState } from 'react';\n\nconst useSettings = () => {\n\n  const defaultSettings = {\n    theme_mode: 'dark',\n    calculator: true\n  }\n  \n  const getSettings = () => {\n    const settingsStr = localStorage.getItem('settings');\n    const settingsObj = JSON.parse(settingsStr) || defaultSettings;\n    return settingsObj\n  };\n\n  const [settings, setSettings] = useState(getSettings());\n\n  const saveSettings = settings => {\n    localStorage.setItem('settings', JSON.stringify(settings));\n    setSettings(settings);\n  };\n\n  return [\n    settings,\n    saveSettings\n  ]\n}\n\nexport default useSettings;","import { useMemo, createContext, useState } from \"react\"\nimport useUser from './useUser'\nimport useSettings from \"./useSettings\"\n\n// 1. Create and export contexts\nexport const UserContext = createContext(\n  { user: '', setUser: () => { } })\nexport const AuthContext = createContext(\n  { auth: '', setAuth: () => { } })\nexport const PostContext = createContext(\n  { fetchedPosts: [], setFetchedPosts: () => { } })\nexport const UserSettingsContext = createContext(\n  { userSettings: '', setUserSettings: () => { } })\n// -----------------------------\n\nconst GlobalContext = ({ children }) => {\n\n  // 2. Packing the value and setter function\n  const [user, setUser] = useUser()\n  const userValue = useMemo(\n    () => ({ user, setUser }),\n    [user, setUser]\n  )\n  const [auth, setAuth] = useState(false)\n  const authValue = useMemo(\n    () => ({ auth, setAuth }),\n    [auth, setAuth]\n  )\n  const [fetchedPosts, setFetchedPosts] = useState([])\n  const postsValue = useMemo(\n    () => ({ fetchedPosts, setFetchedPosts }),\n    [fetchedPosts, setFetchedPosts]\n  )\n  const [userSettings, setUserSettings] = useSettings()\n  const userSettingsValue = useMemo(\n    () => ({ userSettings, setUserSettings }),\n    [userSettings, setUserSettings]\n  )\n  // ----------------------------------------\n\n  return (\n\n    // 3. Provide the contexts\n    <UserContext.Provider value={userValue}>\n      <AuthContext.Provider value={authValue}>\n        <PostContext.Provider value={postsValue}>\n          <UserSettingsContext.Provider value={userSettingsValue}>\n            {children}\n          </UserSettingsContext.Provider>\n        </PostContext.Provider>\n      </AuthContext.Provider>\n    </UserContext.Provider>\n    // -----------------------\n  )\n}\n\nexport default GlobalContext","// Do not change the order of \"routes\" and \"sub_routes\", \n// append new ones (to the tail) to make the app grow.\nexport const routes = [\n    '/news',\n    '/calculators',\n    '/answers',\n    '/settings',\n  ]\n  \nexport const sub_routes = [\n    'answers',\n    'calculator',\n    'expressions'\n  ]\n\nconst host = 'https://audiocenter-in.herokuapp.com/'\n\nconst api_root = '/api-v1'\n\nexport const api_url = host + api_root","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Tab, Menu, MenuItem, Fade } from '@mui/material'\n\nconst MenuTab = (props) => {\n\n  const { value, items, setTabValue, icon, label, disabled, ...others } = props\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (sub_route) => {\n    setAnchorEl(null)\n    navigate(`${value}/${sub_route}`)\n    setTabValue(value)\n  }\n\n  return (\n    <>\n      <Tab label={label} {...others}\n        icon={icon} iconPosition='start'\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined} disabled={disabled} />\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          return (\n            <MenuItem\n              onClick={() => { handleClose(item.sub_route) }} key={item.label}>\n              {item.label}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </>\n  )\n\n}\n\nexport default MenuTab;","import { useState } from 'react'\nimport {\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button\n} from '@mui/material'\n\nconst RDialog = (props) => {\n\n  const {\n    title = 'add <title> prop', message = 'add <message> prop',\n    confirmText = 'add <confirmText> prop', color = 'error', disabled = false,\n    action, children, ...others\n  } = props\n\n  const [open, setOpen] = useState(false)\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (e) => {\n    setOpen(false)\n    try {\n      action(e)\n    }\n    catch (error) {\n      console.error(`add <action> prop, or: ${error}`)\n    }\n  }\n\n  const justClose = () => {\n    setOpen(false)\n  }\n\n  const divProps = !disabled ? {\n    onClick: handleOpen\n  } : {}\n\n  return (\n    <>\n      <div {...divProps}>\n        {children}\n      </div>\n      <Dialog {...others}\n        open={open}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button onClick={handleClose} color={color} autoFocus>\n            {confirmText} </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default RDialog","import { useState, useContext } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Avatar, Menu, MenuItem, Typography, Divider, Fade, ListItemIcon\n} from '@mui/material'\nimport { PersonOff as AvIcon, Person, Logout } from '@mui/icons-material'\n\nimport { UserContext, AuthContext } from './tools/contexts'\nimport RDialog from './tools/ReusableDialog'\n\nconst stringAvatar = (user, auth) => {\n\n  if (user && auth) {\n    return [user.first_name[0], user.last_name[0]].join('').toUpperCase()\n  }\n  return <AvIcon />\n}\n\nconst AvatarMenu = props => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { setTabValue, disabled, ...others } = props\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  let bg = location.pathname.split('/')[1] === 'account' ?\n    'secondary.main' :\n    'primary.main'\n\n  if (disabled) { bg = 'default' }\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleOptions = () => {\n    setAnchorEl(null)\n    setTabValue(false)\n    navigate('/account')\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    setUser(null)\n    setAuth(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('settings')\n  }\n\n  return (\n    <>\n      <IconButton variant='outlined' {...others}\n        id='id_menu'\n        aria-controls=\"aria_menu\"\n        onClick={handleClick}\n        aria-haspopup=\"true\"\n        aria-expanded={openMenu ? 'true' : undefined}\n        color='secondary'\n        disabled={disabled} >\n\n        <Avatar sx={{ bgcolor: bg }} children={stringAvatar(user, auth)} />\n\n      </IconButton>\n\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={justClose}\n        TransitionComponent={Fade} >\n        <Typography variant='overline' color='secondary' marginX={2} mb={1} >\n          {[user?.first_name, user?.last_name].join(' ')}\n        </Typography>\n        <Typography variant='subtitle1' color='GrayText' marginX={2} mb={1} >\n          {user?.email}\n        </Typography>\n        <Divider />\n        <MenuItem onClick={handleOptions}>\n          <ListItemIcon>\n            <Person />\n          </ListItemIcon>\n          Options\n        </MenuItem>\n        <RDialog\n          title='LOGOUT' message='Confirm logout?'\n          confirmText='Logout' action={handleLogout}\n        >\n          <MenuItem>\n            <ListItemIcon>\n              <Logout />\n            </ListItemIcon>\n            Logout\n          </MenuItem>\n        </RDialog>\n      </Menu>\n\n\n    </>\n  )\n}\n\nexport default AvatarMenu;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  IconButton, Menu, MenuItem, Fade, Divider, ListItemIcon\n} from '@mui/material'\nimport {\n  Newspaper, Calculate, ViewList, Settings, ArrowForwardIos\n} from '@mui/icons-material'\nimport { Menu as MI } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\n\n\nconst NavMenu = props => {\n\n  const { setTabValue, disabled, user, ...others } = props\n\n  const items = [\n    { label: 'DIVIDER', icon: Newspaper, key: 0 },\n    { label: 'News', route: routes[0] },\n    { label: 'DIVIDER', icon: Calculate, key: 1 },\n    { label: 'Calculators', route: `${routes[1]}` },\n    { label: 'DIVIDER', icon: ViewList, key: 2 },\n    { label: 'Answers', route: routes[2] },\n    { label: 'DIVIDER', icon: Settings, key: 3 },\n    { label: 'Answers Settings', route: `${routes[3]}/${sub_routes[0]}` }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', route: `${routes[3]}/${sub_routes[1]}` }\n    )\n  }\n  items.push(\n    { label: 'Expressions Settings', route: `${routes[3]}/${sub_routes[2]}` }\n  )\n\n  const navigate = useNavigate()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const justClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = (route) => {\n    setAnchorEl(null)\n    navigate(route)\n    setTabValue(`/${route.split('/')[1]}`)\n  }\n\n  return (\n    <>\n      <IconButton aria-label=\"Go to...\" onClick={handleClick} {...others}\n        sx={{ display: { xs: 'inline-flex', sm: 'none' } }}\n        disabled={disabled}\n      >\n        <MI />\n      </IconButton>\n      <Menu\n        id=\"aria_menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={justClose}\n        TransitionComponent={Fade}>\n        {items.map((item) => {\n          if (item.label === 'DIVIDER') {\n            return (\n              <Divider key={item.key} textAlign='right'>\n                {<item.icon />}\n              </Divider>\n            )\n          } else {\n            return (\n              <MenuItem\n                onClick={() => { handleClose(item.route) }} key={item.label}>\n                <ListItemIcon>\n                  <ArrowForwardIos />\n                </ListItemIcon>\n                {item.label}\n              </MenuItem>\n            )\n          }\n        })}\n      </Menu>\n    </>\n  )\n}\n\nexport default NavMenu;","import { useState, useContext, useMemo } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { AppBar, Toolbar, Tabs, Tab, Badge } from '@mui/material'\nimport { Newspaper, Calculate, ViewList, Settings } from '@mui/icons-material'\n\nimport { routes, sub_routes } from './tools/routes'\nimport { AuthContext, UserContext, PostContext } from './tools/contexts'\nimport MenuTab from './MenuTab'\nimport AvatarMenu from './AvatarMenu'\nimport NavMenu from './NavMenu'\n\n\n\nconst Navbar = () => {\n\n  const { auth } = useContext(AuthContext)\n  const { user } = useContext(UserContext)\n  const { fetchedPosts } = useContext(PostContext)\n  const disabled = !Boolean(auth)\n\n  const location = useLocation()\n\n  let currentTab\n  switch (`/${location.pathname.split('/')[1]}`) {\n    case routes[0]:\n      currentTab = routes[0]\n      break;\n    case routes[1]:\n      currentTab = routes[1]\n      break;\n    case routes[2]:\n      currentTab = routes[2]\n      break;\n    case routes[3]:\n      currentTab = routes[3]\n      break;\n    default:\n      currentTab = false\n      break;\n  }\n\n  const [tabValue, setTabValue] = useState(currentTab)\n  const [count, setCount] = useState(0)\n\n  const handleChange = (_, newValue) => {\n    switch (newValue) {\n      case routes[0]:\n      case routes[1]:\n      case routes[2]:\n        setTabValue(newValue)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const newPosts = useMemo(() => {\n\n    const length = fetchedPosts.length\n    if (tabValue === routes[0]) {\n      setCount(length)\n    }\n\n    return length - count\n  }, [fetchedPosts.length, count, tabValue])\n\n  const items = [\n    { label: 'Answers Settings', sub_route: sub_routes[0] }\n  ]\n  if (user?.is_admin) {\n    items.push(\n      { label: 'Calculator Settings', sub_route: sub_routes[1] }\n    )\n  }\n  items.push({ label: 'Expressions Settings', sub_route: sub_routes[2] })\n\n  return (\n    <>\n      <AppBar position='sticky' color='default'>\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\n\n          <NavMenu setTabValue={setTabValue} disabled={disabled}\n            user={user}\n          />\n\n          <Tabs sx={{ visibility: { xs: 'hidden', sm: 'visible' } }}\n            indicatorColor='primary'\n            onChange={handleChange}\n            value={tabValue}>\n\n            <Tab value={routes[0]} label='News'\n              icon={\n                <Badge color='error' badgeContent={newPosts}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                >\n                  <Newspaper />\n                </Badge>\n              } iconPosition='start'\n              component={Link} to={routes[0]} disabled={disabled} />\n\n            <Tab value={routes[1]} label='Calculators'\n              icon={<Calculate />} iconPosition='start'\n              component={Link} to={routes[1]} disabled={disabled} />\n\n            <Tab value={routes[2]} label='Answers'\n              icon={<ViewList />} iconPosition='start'\n              component={Link} to={routes[2]} disabled={disabled} />\n\n            <MenuTab value={routes[3]}\n              label='Settings' icon={<Settings />}\n              setTabValue={setTabValue} items={items} disabled={disabled} />\n\n          </Tabs>\n\n          <AvatarMenu setTabValue={setTabValue} disabled={disabled} />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Navbar;\n","import { useContext, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { api_url } from './tools/routes'\nimport { PostContext } from './tools/contexts'\n\nconst AuthenticatedContent = (props) => {\n\n  const { children, setAuth, user, setUser } = props\n\n  const { setFetchedPosts } = useContext(PostContext)\n  const [timeStamp, setTimeStamp] = useState(null)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const checkForNewPosts = async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/fetch-posts',\n          { last_post: timeStamp },\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['newest_post']) {\n          setTimeStamp(res.data['newest_post'])\n          setFetchedPosts(res.data['posts'])\n        } else if (res.data['wrn']) {\n          console.warn(res.data['wrn'])\n        } else if (res.data['err']) {\n          setAuth(false)\n          console.error(res.data['err'])\n        }\n      }\n      catch (error) {\n        const errCode = error.response?.status\n        if (errCode === 422 || errCode === 401) {\n          navigate('/login')\n          setUser(null)\n          setAuth(false)\n          localStorage.removeItem('user')\n        }\n      }\n    }\n    if (user) {\n      checkForNewPosts()\n    }\n    const watcher = setInterval(() => {\n      if (user?.token) {\n        checkForNewPosts()\n      }\n    }, 3000)\n    return () => {\n      clearInterval(watcher)\n      source.cancel('Leaving News page or the data is already loaded')\n    }\n  }, [user, setUser, setAuth, navigate, timeStamp, setFetchedPosts])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    const refreshing = setInterval(() => {\n      if (user?.token) {\n        (async () => {\n          try {\n            const res = await axios.get(\n              api_url + '/users/refresh-auth',\n              {\n                cancelToken: source.token,\n                headers: {\n                  Accept: '*/*',\n                  Authorization: `Bearer ${user.token}`\n                }\n              }\n            )\n            if (res.data['user']) {\n              setUser(res.data.user)\n            }\n          }\n          catch (error) {\n            console.error(error)\n          }\n        })()\n      }\n    }, 60 * 60 * 1000)\n    return () => {\n      clearInterval(refreshing)\n      source.cancel('Abort refresh token')\n    }\n  }, [user, setUser])\n\n  return children\n}\n\nexport default AuthenticatedContent","const daysAgo = (today, date) => {\n    const delta = ((today - date) / (1000 * 3600 * 24)).toFixed()\n    let label\n    switch (delta) {\n        case '0':\n            label = 'Today'\n            break\n        case '1':\n            label = 'Yesterday'\n            break\n        default:\n            label = `${delta} days ago`\n            break\n    }\n    return label\n}\n\nexport default daysAgo","import { useContext, useState, useMemo } from 'react'\nimport {\n  Grid, Box, Alert, AlertTitle, Divider, Chip, Stack, Typography, Button,\n  Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText\n} from '@mui/material';\nimport { Alarm } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { PostContext, UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\nimport daysAgo from '../tools/daysAgo'\n\n\nconst Posts = (props) => {\n\n  const { filter: { severity, owner }, handleMessage } = props\n  const { fetchedPosts } = useContext(PostContext)\n  const { user } = useContext(UserContext)\n  const [postToDelete, setPostToDelete] = useState('')\n\n  const posts = useMemo(() => {\n    if (fetchedPosts.length > 0) {\n      let severity_filter\n      switch (severity) {\n        case 'Reminder':\n          severity_filter = 'rem'\n          break\n        case 'Normal':\n          severity_filter = 'nor'\n          break\n        case 'Urgent':\n          severity_filter = 'urg'\n          break\n        default:\n          severity_filter = null\n          break\n      }\n      const owner_filter = owner === 'from All' ? null : user?.email\n\n      let filteredPosts = fetchedPosts.filter(post =>\n        (severity_filter ? post.severity === severity_filter : true)\n        && (owner_filter ? post.owner._id === owner_filter : true)\n      )\n\n      const dividedPosts = []\n      const today = new Date().getTime()\n      let last_day = today\n\n      if (filteredPosts.length > 0) {\n        filteredPosts.forEach(post => {\n          const other_day = daysAgo(today, post._id['$date'])\n          if (last_day !== other_day) {\n            dividedPosts.push({ divider: other_day })\n            last_day = other_day\n          }\n          dividedPosts.push(post)\n        })\n      } else {\n        dividedPosts.push(\n          { divider: 'There are no posts with those conditions' }\n        )\n      }\n\n      return dividedPosts\n    }\n  }, [fetchedPosts, severity, owner, user])\n\n  const handleDelete = (post) => {\n    (async () => {\n      const res = await axios.delete(\n        api_url + '/news/delete-post',\n        {\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user?.token}`\n          },\n          data: post\n        }\n      )\n      if (res.data['msg']) {\n        handleMessage(res.data['msg'], 'info')\n      }\n      if (res.data['wrn']) {\n        handleMessage(res.data['wrn'], 'warning')\n      }\n      if (res.data['err']) {\n        handleMessage(res.data['err'], 'error')\n      }\n    })()\n    setPostToDelete('')\n  }\n\n  const justClose = () => {\n    setPostToDelete('')\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={7}>\n        <Box border={2} p={2} borderRadius={1} borderColor='primary.main'\n          sx={{ height: '80vh' }}\n        >\n          <Stack spacing={1} pr={1}\n            sx={{ paddingBlockEnd: 2, height: '75vh', overflow: 'auto' }}\n          >\n            {posts?.map(element => {\n              let component\n              if (element.divider) {\n                component = (\n                  <Grid item key={element.divider}>\n                    <Divider>\n                      <Chip color='primary' label={element.divider} />\n                    </Divider>\n                  </Grid>\n                )\n              }\n              if (element._id) {\n                let post_props\n                switch (element.severity) {\n                  case 'rem':\n                    post_props = {\n                      icon: <Alarm />, severity: 'success'\n                    }\n                    break\n                  case 'nor':\n                    post_props = { severity: 'warning' }\n                    break\n                  case 'urg':\n                    post_props = { severity: 'error' }\n                    break\n                  default:\n                    post_props = {}\n                    break\n                }\n                if (user?.is_admin || element.owner._id === user?.email) {\n                  post_props = {\n                    ...post_props,\n                    onClose: () => { setPostToDelete(element._id) }\n                  }\n                }\n                component = (\n                  <Grid item key={element._id['$date']}>\n                    <Alert variant='filled' {...post_props}>\n                      <AlertTitle>\n                        <Typography variant='h5'>\n                          {element.owner.username} - {element.title}\n                        </Typography>\n                      </AlertTitle>\n                      <Typography variant='body1'\n                        sx={{ whiteSpace: 'pre-line' }}\n                      >\n                        {element.content}\n                      </Typography>\n                    </Alert>\n                  </Grid>\n                )\n              }\n              return component\n            })}\n          </Stack>\n        </Box>\n      </Grid >\n      <Dialog\n        open={Boolean(postToDelete)}\n        onClose={justClose}\n        aria-labelledby=\"title\"\n        aria-describedby=\"description\"\n      >\n        <DialogTitle id=\"title\">\n          Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"description\">\n            Confirm delete post?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={justClose}>\n            Cancel </Button>\n          <Button\n            onClick={() => handleDelete(postToDelete)} color='error' autoFocus\n          >\n            DELETE </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Posts","import { FormControl, Select, MenuItem } from '@mui/material'\n\n\nconst PostSelect = (props) => {\n\n  const { options, option, setOption, ...others } = props\n\n  const handleChange = (e) => {\n    setOption(e.target.value)\n  }\n\n  return (\n    <FormControl fullWidth {...others}>\n      <Select size='small' value={option} onChange={handleChange}>\n        {options.map(op => {\n          return <MenuItem key={op} value={op}>{op}</MenuItem>\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default PostSelect","import { useState, useContext } from 'react'\nimport {\n  Typography, Grid, Box, Divider, TextField, Button, useMediaQuery, Paper\n} from '@mui/material';\nimport { Send } from '@mui/icons-material'\nimport PostSelect from './PostSelect'\nimport axios from 'axios';\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Panel = (props) => {\n\n  const {\n    filter: { severity, setSeverity, owner, setOwner },\n    handleMessage\n  } = props\n  const { user } = useContext(UserContext)\n\n  const [newPost, setNewPost] = useState({\n    title: '', content: '', days_offset: ''\n  })\n  const [newSeverity, setNewSeverity] = useState('Normal')\n  const [to, setTo] = useState('to Me')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setNewPost({ ...newPost, [name]: value })\n  }\n\n  const getSeverity = () => {\n    switch (newSeverity) {\n      case 'Reminder':\n        return 'rem'\n      default:\n      case 'Normal':\n        return 'nor'\n      case 'Urgent':\n        return 'urg'\n    }\n  }\n\n  const getPublic = () => {\n    switch (to) {\n      default:\n      case 'to Me':\n        return false\n      case 'to All':\n        return true\n    }\n  }\n\n  const handleSend = () => {\n\n    if (!newPost.title) {\n      handleMessage('You must provide a Title', 'error')\n      return\n    }\n    if (!newPost.content) {\n      handleMessage('You must provide a Content', 'error')\n      return\n    }\n    const days_offset = parseInt((newPost.days_offset || 0))\n    if (0 > days_offset || 7 < days_offset) {\n      handleMessage('\"within days\" must be between 0 and 7', 'error')\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/news/create-post',\n          {\n            title: newPost.title,\n            content: newPost.content,\n            severity: getSeverity(),\n            days_offset: days_offset,\n            is_public: getPublic()\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          handleMessage(res.data['msg'], 'success')\n          setNewPost({ title: '', content: '', days_offset: '' })\n          setNewSeverity('Normal')\n          setTo('to Me')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('md'))\n  const ROWS = {\n    rows: isSmall ? 8 : 12\n  }\n\n  let send_props\n  switch (newSeverity) {\n    case 'Reminder':\n      send_props = { color: 'success' }\n      break\n    case 'Normal':\n      send_props = { color: 'warning' }\n      break\n    case 'Urgent':\n      send_props = { color: 'error' }\n      break\n    default:\n      send_props = {}\n      break\n  }\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'\n            sx={{ height: '75vh', overflow: 'auto' }}\n          >\n            <Grid item xs={6}>\n              <PostSelect\n                options={['All', 'Urgent', 'Normal', 'Reminder']}\n                option={severity}\n                setOption={setSeverity}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <PostSelect\n                options={['from All', 'Mine only']}\n                option={owner}\n                setOption={setOwner}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Divider>\n                <Typography color='secondary'>CREATE NEW POST</Typography>\n              </Divider>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth size='small' label='Title'\n                name='title'\n                value={newPost.title}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth {...ROWS} multiline size='small' label='Content'\n                name='content'\n                value={newPost.content}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <PostSelect\n                options={['Urgent', 'Normal', 'Reminder']}\n                option={newSeverity}\n                setOption={setNewSeverity}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <PostSelect\n                options={['to Me', 'to All']}\n                option={to}\n                setOption={setTo}\n              />\n            </Grid>\n            <Grid item xs={7} md={3}>\n              <TextField fullWidth label='within days' size='small'\n                name='days_offset'\n                type='number'\n                inputProps={{ min: '0', max: '7', step: '1' }}\n                value={newPost.days_offset}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={5} md={3}>\n              <Button variant='contained' fullWidth size='small'\n                onClick={handleSend} {...send_props} endIcon={<Send />}\n              >\n                <Typography variant='h6'>\n                  Send\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Panel","import { useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material';\n\nimport Posts from './Posts'\nimport Panel from './Panel'\n\nconst News = () => {\n\n  const [severity, setSeverity] = useState('All')\n  const [owner, setOwner] = useState('from All')\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const filter = {\n    severity: severity,\n    setSeverity: setSeverity,\n    owner: owner,\n    setOwner: setOwner\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({msg: msg, vnt: vnt})\n    setOpen(true)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Panel filter={filter} \n          handleMessage={handleMessage}\n        />\n        <Posts filter={{ severity: severity, owner: owner }} \n          handleMessage={handleMessage} \n        />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default News;","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button, Radio,\n  FormControl, RadioGroup, FormControlLabel, Divider\n} from '@mui/material'\nimport { LooksOne, LooksTwo, Looks3, Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Complete = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ first: '', second: '', third: '' })\n  const [sign, setSign] = useState('pri')\n  const [operation, setOperation] = useState('add')\n  const [expression, setExpression] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleSign = (e) => {\n    const { value } = e.target\n    setSign(value)\n    setFields({ ...fields, first: '', third: '' })\n  }\n\n  const handleOperation = (e) => {\n    const { value } = e.target\n    setOperation(value)\n    setFields({ ...fields, second: '' })\n  }\n\n  const handleExpressionChange = (e) => {\n    const { value } = e.target\n    setExpression(value)\n  }\n\n  const handleQuery = (url, data, to_set) => {\n    for (let [field, value] of Object.entries(data)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    data = { ...data, sign: sign, operation: operation };\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + url,\n          data,\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          handleMessage(`$${res.data.result}`, 'success')\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ])\n          setFields({ ...fields, [to_set]: res.data.result })\n          if (!data.expression) {\n            setExpression(res.data.result)\n          }\n        }\n        if (res.data['err']) {\n          handleMessage(res.data['err'], 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  const handleGetFirst = () => {\n    let dataset = { second: fields.second, third: fields.third }\n    handleQuery('/calculator/get-first-term', dataset, 'first')\n  }\n\n  const handleGetSecond = () => {\n    let dataset = { first: fields.first, third: fields.third }\n    handleQuery('/calculator/get-second-term', dataset, 'second')\n  }\n\n  const handleGetThird = () => {\n    let dataset = { first: fields.first, second: fields.second }\n    handleQuery('/calculator/get-result', dataset, 'third')\n  }\n\n  const handleEvaluate = () => {\n    handleQuery('/calculator/resolve-expression', { expression: expression })\n  }\n\n  const handleEnterOnFields = () => {\n\n    if (fields.first === '' && fields.second !== '' && fields.third !== '') {\n      handleGetFirst()\n    } else if (\n      fields.first !== '' && fields.second === '' && fields.third !== ''\n    ) {\n      handleGetSecond()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third === ''\n    ) {\n      handleGetThird()\n    } else if (\n      fields.first !== '' && fields.second !== '' && fields.third !== ''\n    ) {\n      handleMessage('impossible to know which operation to perform!', 'warning')\n    } else {\n      handleMessage('You must provide 2 fields at least!', 'warning')\n    }\n  }\n\n  const handleClear = () => {\n    setFields({ first: '', second: '', third: '' })\n    setExpression('')\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '65vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '60vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='sign'\n                  value={sign} onChange={handleSign}\n                >\n                  <Paper>\n                    <Grid item px={3}>\n                      <FormControlLabel\n                        value='pri'\n                        control={<Radio />} label={\n                          <Typography variant='h5' color='primary'>\n                            $\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='per'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h5' color='secondary'>\n                            %\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <FormControl sx={{ width: '100%' }} component='fieldset'>\n                <RadioGroup name='operation'\n                  value={operation} onChange={handleOperation}\n                >\n                  <Paper>\n                    <Grid px={3}>\n                      <FormControlLabel\n                        value='add'\n                        control={<Radio />} label={\n                          <Typography variant='h4' color='primary'>\n                            +\n                          </Typography>\n                        } />\n                      <FormControlLabel\n                        value='sub'\n                        control={<Radio color='secondary' />} label={\n                          <Typography variant='h4' color='secondary'>\n                            -\n                          </Typography>\n                        } />\n                    </Grid>\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant='h5' color='initial'\n                sx={{ display: { xs: 'none', md: 'flex' } }}\n              >\n                complete calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth size='small' type='number'\n                label={sign === 'pri' ? 'Price' : 'Percentage'}\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5'\n                      color={sign === 'pri' ? 'primary' : 'secondary'}\n                    >\n                      {sign === 'pri' ? '$' : ''}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='secondary'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n\n                name='first'\n                value={fields.first}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='day/month/year | Percentage'\n                size='small' InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4'\n                      color={operation === 'add' ? 'primary' : 'secondary'}\n                    >\n                      {operation === 'add' ? '+' : '-'}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      %\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='second'\n                value={fields.second}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Result' type='number'\n                size='small' InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '= $' : '='}\n                    </Typography>\n                  </InputAdornment>,\n                  endAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='inherit'>\n                      {sign === 'pri' ? '' : '%'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='third'\n                value={fields.third}\n                onChange={handleChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEnterOnFields()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetFirst} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksOne />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetSecond} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<LooksTwo />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetThird} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='success'\n                endIcon={<Looks3 />}\n              >\n                <Typography variant='body1'>\n                  GET\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth label='Evaluate Expression' size='small'\n                name='expression' InputProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h4' color='primary'>\n                      {'>>>'}\n                    </Typography>\n                  </InputAdornment>\n                }}\n                InputLabelProps={{\n                  style: { fontFamily: 'monospace', fontSize: 20 }\n                }}\n                value={expression}\n                onChange={handleExpressionChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') handleEvaluate()\n                }}\n              />\n            </Grid>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleClear} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='error'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Clear\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleEvaluate} size='large'\n                sx={{ minHeight: '100%' }}\n                variant='contained' color='primary'\n                endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  Evaluate\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Complete","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Typography, TextField, InputAdornment, Button\n} from '@mui/material'\nimport { Calculate } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst Basic = (props) => {\n\n  const { handleMessage, history, setHistory } = props\n  const { user } = useContext(UserContext)\n  const [fields, setFields] = useState({ price: '', str_date: '' })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFields({ ...fields, [name]: value })\n  }\n\n  const handleGetPrice = () => {\n    for (let [field, value] of Object.entries(fields)) {\n      if (!value) {\n        handleMessage(`The ${field} field is required`, 'error')\n        return\n      }\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/calculator/price-add-percent',\n          {\n            ...fields,\n            str_date: fields.str_date.split('-').reverse().join('/')\n          },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['result'] !== undefined) {\n          handleMessage(`$${res.data.result}`, 'success')\n          setHistory([\n            {\n              _id: { $date: new Date().getTime() },\n              calculation: res.data.calculation,\n              footnote: res.data.footnote\n            },\n            ...history\n          ])\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      }\n      catch (error) {\n        console.error(error)\n      }\n    })()\n  }\n\n  return (\n    <Grid item xs={12} md={7}>\n      <Paper elevation={5} sx={{ borderRadius: 3 }}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '30vh' }} p={2}>\n          <Grid container spacing={3} align='center' pr={2}\n            sx={{ minHeight: '25vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h5' color='initial'>\n                basic calculator\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Price'\n                type='number'\n                name='price'\n                InputProps={{\n                  inputProps: { min: '0', step: '10' },\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='h5' color='primary'>\n                      $\n                    </Typography>\n                  </InputAdornment>\n                }}\n                value={fields.price}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField fullWidth label='Date' type='date'\n                InputProps={{\n                  startAdornment: <InputAdornment position='start'>\n                    <Typography variant='body1' color='primary'>\n                      from\n                    </Typography>\n                  </InputAdornment>\n                }}\n                name='str_date'\n                value={fields.str_date}\n                onChange={handleChange}\n                onKeyPress={\n                  e => { if (e.key === 'Enter') { handleGetPrice() } }\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button fullWidth onClick={handleGetPrice} size='large'\n                sx={{ minHeight: '75%' }}\n                variant='contained' color='success' endIcon={<Calculate />}\n              >\n                <Typography variant='body1'>\n                  GET PRICE\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Basic","import { useMemo } from 'react'\nimport {\n  Paper, Typography, Tooltip, Grid, Box, Divider, Chip\n} from '@mui/material'\n\nimport daysAgo from '../tools/daysAgo'\n\nconst CalcHistory = (props) => {\n\n  const { history } = props\n\n  const registries = useMemo(() => {\n\n    const dividedRegistries = []\n    const today = new Date().getTime()\n    let last_day = today\n\n    if (history.length > 0) {\n      history.forEach(reg => {\n        const other_day = daysAgo(today, reg._id['$date'])\n        if (last_day !== other_day) {\n          dividedRegistries.push({ divider: other_day })\n          last_day = other_day\n        }\n        dividedRegistries.push(reg)\n      })\n    } else {\n      dividedRegistries.push(\n        { divider: 'There are no previous calculations' }\n      )\n    }\n\n    return dividedRegistries\n\n  }, [history])\n\n  return (\n    <Grid item xs={12} md={5}>\n      <Box sx={{\n        paddingBlockEnd: 2,\n        height: '75vh',\n        backgroundColor: 'info.main'\n      }} borderRadius={3} p={2}>\n        <Grid container spacing={1} align='center' pr={2} alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '70vh', overflow: 'auto' }}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" color=\"initial\">\n              Result / History\n            </Typography>\n          </Grid>\n          {registries.map((reg, item) => {\n            let component\n            if (reg.divider) {\n              component = (\n                <Grid item xs={12} key={reg.divider}>\n                  <Divider>\n                    <Chip color='warning' size='small' label={reg.divider} />\n                  </Divider>\n                </Grid>\n              )\n            }\n            if (reg._id) {\n\n              let tColor\n              if (item !== 1) {\n                tColor = { color: 'info.light' }\n              }\n\n              component = (\n                <Grid item xs={12} key={reg._id.$date}>\n                  <Paper elevation={7}>\n                    <Tooltip title={reg.footnote}\n                      placement='right' disableInteractive arrow followCursor\n                    >\n                      <Typography variant=\"h6\" {...tColor}\n                        sx={{ whiteSpace: 'pre-line' }}\n                      >\n                        {reg.calculation}\n                      </Typography>\n                    </Tooltip>\n                  </Paper>\n                </Grid>\n              )\n            }\n            return component\n          })}\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CalcHistory","import { useContext, useEffect, useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert, FormControlLabel, Switch, Typography\n} from '@mui/material'\nimport axios from 'axios'\n\nimport Complete from './Complete'\nimport Basic from './Basic'\nimport CalcHistory from './CalcHistory'\nimport { api_url } from '../tools/routes'\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\n\nconst Calculator = () => {\n\n  const { user } = useContext(UserContext)\n  const { userSettings } = useContext(UserSettingsContext)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [history, setHistory] = useState([])\n  const [openSB, setOpenSB] = useState(false)\n  const [basic, setBasic] = useState(Boolean(userSettings?.calculator))\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    (async () => {\n      const res = await axios.get(\n        api_url + '/calculator/get-history',\n        {\n          cancelToken: source.token,\n          headers: {\n            Accept: '*/*',\n            Authorization: `Bearer ${user.token}`\n          }\n        }\n      )\n      if (res.data['hist']) {\n        setHistory(res.data['hist'])\n      }\n      if (res.data['msg']) {\n        // console.warn(res.data['msg'])\n      }\n      if (res.data['err']) {\n        console.error(res.data['err'])\n      }\n    })()\n    return () => {\n      source.cancel()\n    }\n  }, [user, setHistory])\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpenSB(true)\n  }\n\n  const handleBasic = (e) => {\n    const { checked } = e.target\n    setBasic(checked)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12}>\n          <FormControlLabel labelPlacement='start'\n            label={\n              <Typography px={1}>\n                Calculator\n              </Typography>\n            }\n            control={\n              <FormControlLabel\n                control={<Switch checked={basic} onChange={handleBasic} />}\n                label=\"Basic\"\n              />\n            }\n          />\n        </Grid>\n        {basic\n          ?\n          <Basic\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n          :\n          <Complete\n            history={history}\n            setHistory={setHistory}\n            handleMessage={handleMessage}\n          />\n        }\n        <CalcHistory history={history} setHistory={setHistory} />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Calculator;","import { useContext, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { UserContext } from './contexts'\nimport { api_url } from './routes'\n\nexport const useAxios = (\n  method, uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  const headers = {\n    Accept: '*/*',\n    Authorization: `Bearer ${user?.token}`\n  }\n\n  return async (data) => {\n    try {\n      let res\n      switch (method) {\n        default:\n          res = await axios.get(\n            api_url + uri, { headers: headers }\n          )\n          break\n        case 'post':\n          res = await axios.post(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'put':\n          res = await axios.put(\n            api_url + uri, data, { headers: headers }\n          )\n          break\n        case 'delete':\n          res = await axios.delete(\n            api_url + uri, { headers: headers, data: data }\n          )\n          break\n      }\n      if (res.data[expected]) {\n        suc(res.data)\n      }\n      if (res.data['wrn']) {\n        wrn(res.data)\n      }\n      if (res.data['err']) {\n        err(res.data)\n      }\n    }\n    catch (error) {\n      TCErr(error)\n    }\n  }\n}\n\nexport const useAxiosEffect = (\n  uri, expected, suc, wrn, err,\n  TCErr = (e) => { console.error(e) }\n) => {\n\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    const headers = {\n      Accept: '*/*',\n      Authorization: `Bearer ${user?.token}`\n    }\n    const source = axios.CancelToken.source();\n    (async () => {\n      try {\n        const res = await axios.get(\n          api_url + uri, { cancelToken: source.token, headers: headers }\n        )\n        if (res.data[expected]) {\n          suc(res.data)\n        }\n        if (res.data['wrn']) {\n          wrn(res.data)\n        }\n        if (res.data['err']) {\n          err(res.data)\n        }\n      }\n      catch (error) {\n        TCErr(error)\n      }\n    })()\n    return () => {\n      source.cancel('useAxios: canceled')\n    }\n    // eslint-disable-next-line\n  }, [user])\n}","const strFormat = (str, regexs, args) => {\n\n\n  let mut_str = str\n  if (regexs !== undefined) {\n    regexs.forEach(({ pattern, replacement }) => {\n      mut_str = mut_str.replace(RegExp(pattern, 'ig'), replacement)\n    })\n  }\n  return mut_str.replace(/{([\\w\\s]+)}/g,\n  (match, index) => {\n      return typeof args[index] === 'undefined' ? match : args[index]\n    }\n  )\n}\n\nexport default strFormat","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, InputAdornment, Grid, Box, Paper, Tooltip\n} from '@mui/material'\nimport { ContentCopy } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst CreditCards = (props) => {\n\n  const { payMeths, sysRegex, handleMessage } = props\n\n  const [price, setPrice] = useState('')\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      const total = (\n        parseFloat(price) * (1 + meth.increase / 100)\n      ).toFixed() | 0\n      const monthly = (total / meth.installments).toFixed()\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        total: total,\n        monthly: monthly,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths, price])\n\n  const handleChangePrice = (e) => {\n    setPrice(e.target.value)\n  }\n\n\n  const handleCopy = (item) => {\n\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(`${item.installments} ${item.monthly}`, sysRegex)\n      )\n    })()\n    handleMessage('Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6' color='primary.main'>\n              Credit Cards Payments\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField label='Price' size='small'\n              inputProps={{\n                min: 0, step: 10\n              }}\n              InputProps={{\n                startAdornment: <InputAdornment position='start'>\n                  <Typography variant='h6' color='primary'>\n                    $\n                  </Typography>\n                </InputAdornment>\n              }}\n              type='number'\n              value={price}\n              onChange={handleChangePrice}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n              <Paper elevation={3} sx={{\n                borderRadius: '15px 15px 0px 0px',\n                backgroundColor: 'warning.dark',\n                height: 40\n              }}\n              >\n                <Typography variant=\"body1\" color=\"initial\" p={1}>\n                  Card Name\n                </Typography>\n              </Paper>\n              <TableContainer\n                sx={{ height: { xs: '57vh', md: '60vh' } }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <CustomCell width='20%'>\n                        Installments\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'error.dark' }}\n                      >\n                        Total\n                      </CustomCell>\n                      <CustomCell width='20%'\n                        sx={{ backgroundColor: 'success.dark' }}\n                      >\n                        Monthly\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Increase\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        PosCode\n                      </CustomCell>\n                      <CustomCell width='20%'>\n                        Copy\n                      </CustomCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {paymentMethods.map(item => {\n                      const component = item.header ? (\n                        <TableRow key={item.header}>\n                          <CustomCell width='100%' colSpan={6}\n                            sx={{\n                              borderRadius: '20px 20px 0px 0px',\n                              backgroundColor: 'warning.dark'\n                            }}\n                          >\n                            {item.header}\n                          </CustomCell>\n                        </TableRow>\n                      ) : (\n                        <Tooltip key={item.id}\n                          title={item.description} disableInteractive\n                          placement='right' arrow followCursor\n                        >\n                          <TableRow hover>\n                            <CustomCell>\n                              {item.installments}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'error.dark' }}\n                            >\n                              ${item.total}\n                            </CustomCell>\n                            <CustomCell\n                              sx={{ backgroundColor: 'success.dark' }}\n                            >\n                              ${item.monthly}\n                            </CustomCell>\n                            <CustomCell>\n                              {item.increase}%\n                            </CustomCell>\n                            <CustomCell>\n                              *{item.pos_code}*\n                            </CustomCell>\n                            <CustomCell>\n                              <IconButton size='small' color='primary'\n                                onClick={() => handleCopy(item)}\n                              >\n                                <ContentCopy fontSize='small' />\n                              </IconButton>\n                            </CustomCell>\n                          </TableRow>\n                        </Tooltip>\n                      )\n                      return component\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default CreditCards\n","import { useState, useMemo } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography\n} from '@mui/material'\nimport { ContentCopy, Cancel } from '@mui/icons-material'\n\nimport strFormat from '../tools/strFormat'\n\nconst AnswerButtons = (props) => {\n\n  const { commonAnswers, ownAnswers, ownRegex, handleMessage } = props\n\n  const [text, setText] = useState('')\n\n  const answerList = useMemo(() => {\n    if (commonAnswers.length > 0 && ownAnswers.length > 0) {\n      return [...commonAnswers, ...ownAnswers].map(({ label, content }) => {\n        return { [label]: content }\n      }).reduce((resObj, curObj) => {\n        return { ...resObj, ...curObj }\n      })\n    }\n\n  }, [commonAnswers, ownAnswers])\n\n  const handleClickAnswer = (text) => {\n    setText(text)\n  }\n\n  const handleCopy = () => {\n    (async () => {\n      navigator.clipboard.writeText(\n        strFormat(text, ownRegex, answerList)\n      )\n    })()\n    handleMessage('Formatted Text Copied to Clipboard', 'success')\n  }\n\n  const handleCopyRaw = () => {\n    (async () => {\n      navigator.clipboard.writeText(text)\n    })()\n    handleMessage('Raw Text Copied to Clipboard', 'success')\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n        border={2} p={2} borderRadius={1} borderColor='primary.main'\n      >\n        <Grid container spacing={1} align='center' pr={2}>\n          <Grid item xs={12} md={11}>\n            <TextField label='Content' focused color='warning'\n              fullWidth multiline rows={4}\n              InputProps={{ readOnly: true }}\n              value={text}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <IconButton color='primary' onClick={handleCopy}>\n              <ContentCopy />\n            </IconButton>\n            <IconButton color='info' onClick={handleCopyRaw}>\n              <ContentCopy />\n            </IconButton>\n            <IconButton color='warning' onClick={() => setText('')}>\n              <Cancel />\n            </IconButton>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Commons\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '50vh', overflow: 'auto' }}\n            >\n              {commonAnswers.map((ans) => {\n                return (\n                  <Button key={ans._id.$oid} fullWidth variant='contained'\n                    sx={{\n                      color: '#FFFFFF',\n                      background: ans.color, '&:hover': {\n                        background: ans.color, filter: 'brightness(90%)'\n                      }\n                    }}\n                    onClick={() => handleClickAnswer(ans.content)}\n                  >\n                    {ans.label}\n                  </Button>\n                )\n              })}\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant='h6'>\n              Own\n            </Typography>\n            <Stack spacing={1} p={1}\n              sx={{ paddingBlockEnd: 2, height: '50vh', overflow: 'auto' }}\n            >\n              {ownAnswers.map((ans) => {\n                return (\n                  <Button key={ans._id.$oid} fullWidth variant='contained'\n                    sx={{\n                      color: '#FFFFFF',\n                      background: ans.color, '&:hover': {\n                        background: ans.color, filter: 'brightness(90%)'\n                      }\n                    }}\n                    onClick={() => handleClickAnswer(ans.content)}\n                  >\n                    {ans.label}\n                  </Button>\n                )\n              })}\n            </Stack>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default AnswerButtons","import { useState } from 'react'\nimport {\n  Container, Grid, Snackbar, Alert\n} from '@mui/material'\n\nimport { useAxiosEffect } from '../tools/axiosTool'\nimport CreditCards from './CreditCards'\nimport AnswerButtons from './AnswerButtons'\n\nconst Answers = () => {\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => { \n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods) \n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers) \n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers) \n      }\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Grid item xs={12} md={6}>\n          <CreditCards\n            payMeths={payMeths}\n            sysRegex={sysRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <AnswerButtons\n            commonAnswers={commonAnswers}\n            ownAnswers={ownAnswers}\n            ownRegex={ownRegex}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt} \n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n\nexport default Answers;","import { Outlet } from 'react-router'\nimport {Container, Grid } from '@mui/material'\n\nconst Settings = () => {\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={1} margin={0} pt={3}>\n        <Outlet />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Settings;","import { useState, useMemo } from 'react'\nimport {\n  Typography, TableContainer, Table, TableRow, TableCell, TableHead, TableBody,\n  IconButton, TextField, Grid, Box, Paper\n} from '@mui/material'\nimport { Done, Delete, Add, Edit, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\n\nconst CustomCell = (props) => {\n\n  const { children, sx, ...others } = props\n\n  return (\n    <TableCell align='center' sx={{ borderColor: '#FFFFFF', ...sx }}\n      {...others}\n    >\n      {children}\n    </TableCell>\n  )\n}\n\nconst EditCreditCards = (props) => {\n\n  const { payMeths, setPayMeths, handleMessage } = props\n\n  const paymentMethods = useMemo(() => {\n\n    let last_card = ''\n    let formatedPayMeths = []\n\n    for (let meth of payMeths) {\n\n      if (meth.card_name !== last_card) {\n        last_card = meth.card_name\n        formatedPayMeths.push({\n          id: last_card,\n          header: last_card\n        })\n      }\n      formatedPayMeths.push({\n        id: meth._id.$oid,\n        card_name: meth.card_name,\n        installments: meth.installments,\n        increase: meth.increase,\n        pos_code: meth.pos_code,\n        description: meth.description\n      })\n    }\n    return formatedPayMeths\n  }, [payMeths])\n\n  const initialValue = {\n    id: '',\n    card_name: '',\n    installments: '',\n    increase: '',\n    pos_code: '',\n    description: ''\n  }\n\n  const [newCard, setNewCard] = useState('')\n  const [selected, setSelected] = useState(initialValue)\n  const [method, setMethod] = useState(initialValue)\n\n  const handleChangeNewCard = (e) => {\n    setNewCard(e.target.value)\n  }\n\n  const handleChangeMethod = (e) => {\n    const { name, value } = e.target\n    setMethod({ ...method, [name]: value })\n  }\n\n  // QUERIES -------------------------------------------------------------------\n\n  const handleAddCard = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleAddMethod = useAxios(\n    'post', '/answers/create-payment-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateCardName = useAxios(\n    'put', '/answers/update-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleUpdateMethod = useAxios(\n    'put', '/answers/update-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropCard = useAxios(\n    'delete', '/answers/delete-credit-card', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleDropMethod = useAxios(\n    'delete', '/answers/delete-method', 'payment_methods',\n    (d) => {\n      setPayMeths(d.payment_methods)\n      handleMessage(d.msg, 'success')\n      setNewCard('')\n      setSelected(initialValue)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  // ---------------------------------------------------------------------------\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, height: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2} alignItems='center'>\n            <Grid item xs={12}>\n              <Typography variant='body1' color='secondary.main'>\n                Edit Credit Cards Payments Methods\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper elevation={3} sx={{ borderRadius: '15px 15px 0px 0px' }}>\n                <Paper elevation={3} sx={{\n                  borderRadius: '15px 15px 0px 0px',\n                  backgroundColor: 'warning.main',\n                  height: 40\n                }}\n                >\n                  <Typography variant=\"body1\" color=\"initial\" p={1}>\n                    Card Name\n                  </Typography>\n                </Paper>\n                <TableContainer sx={{ height: '60vh' }}>\n                  <Table stickyHeader size='small'>\n                    <TableHead>\n                      <TableRow>\n                        <CustomCell width='25%'>\n                          Installments\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Description\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Increase\n                        </CustomCell>\n                        <CustomCell width='25%'>\n                          Code\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Upg\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Drop\n                        </CustomCell>\n                        <CustomCell width='5%'>\n                          Add\n                        </CustomCell>\n                      </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                      <TableRow>\n                        <CustomCell width='90%' colSpan={6}\n                          sx={{\n                            borderRadius: '50px 0px 0px 50px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <TextField fullWidth label='Card Name' size='small'\n                            variant='standard' value={newCard} color='secondary'\n                            inputProps={{ style: { textAlign: 'center' } }}\n                            onChange={handleChangeNewCard}\n                          />\n                        </CustomCell>\n                        <CustomCell\n                          sx={{\n                            borderRadius: '0px 50px 50px 0px',\n                            backgroundColor: 'success.dark'\n                          }}\n                        >\n                          <IconButton size='small' color='secondary'\n                            disabled={!Boolean(newCard)}\n                            onClick={() => handleAddCard({\n                              method: {\n                                card_name: newCard, installments: 0,\n                                increase: 0, pos_code: 0, description: 'FIXME'\n                              }\n                            })}\n                          >\n                            <Add fontSize='small' />\n                          </IconButton>\n                        </CustomCell>\n                      </TableRow>\n\n                      {paymentMethods.map(item => {\n\n                        let component\n                        if (selected.id === item.id) {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <TextField label='Card Name' size='small'\n                                  variant='standard' value={method.header}\n                                  name='header'\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell \n                                sx={{ backgroundColor: 'warning.main' }}\n                              >\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='warning'\n                                  action={() => handleUpdateCardName(\n                                    { name: item.id, new_name: method.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'>\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                <TextField label='Installments' size='small'\n                                  variant='standard'\n                                  name='installments'\n                                  value={method.installments}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Description' size='small'\n                                  variant='standard'\n                                  name='description'\n                                  value={method.description}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Increase' size='small'\n                                  variant='standard'\n                                  name='increase'\n                                  value={method.increase}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <TextField label='Pos-Code' size='small'\n                                  variant='standard'\n                                  name='pos_code'\n                                  value={method.pos_code}\n                                  onChange={handleChangeMethod}\n                                />\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Update' confirmText='Update'\n                                  message='Confirm Update Payment Method?'\n                                  color='success' action={\n                                    () => handleUpdateMethod(\n                                      { method: { ...method } }\n                                    )\n                                  }\n                                >\n                                  <IconButton size='small' color='success'\n                                  >\n                                    <Done fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='info'\n                                  onClick={() => setSelected(initialValue)}\n                                >\n                                  <Cancel fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        } else {\n\n                          component = item.header ? (\n                            <TableRow key={item.header}>\n                              <CustomCell width='90%' colSpan={4}\n                                sx={{\n                                  borderRadius: '50px 0px 0px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                {item.header}\n                              </CustomCell>\n                              <CustomCell sx={{ backgroundColor: 'warning.main' }}>\n                                <IconButton size='small' color='error'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{ backgroundColor: 'warning.main' }}>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error' action={() => handleDropCard(\n                                    { card_name: item.header }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                              <CustomCell\n                                sx={{\n                                  borderRadius: '0px 50px 50px 0px',\n                                  backgroundColor: 'warning.main'\n                                }}\n                              >\n                                <IconButton size='small' color='info'\n                                  onClick={() => handleAddMethod({\n                                    method: {\n                                      card_name: item.header, installments: 0,\n                                      increase: 0, pos_code: 0,\n                                      description: 'FIXME'\n                                    }\n                                  })}\n                                >\n                                  <Add fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                            </TableRow>\n                          ) : (\n                            <TableRow hover key={item.id}>\n                              <CustomCell>\n                                {item.installments}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.description}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.increase}\n                              </CustomCell>\n                              <CustomCell>\n                                {item.pos_code}\n                              </CustomCell>\n                              <CustomCell>\n                                <IconButton size='small' color='warning'\n                                  onClick={() => {\n                                    setSelected(item)\n                                    setMethod(item)\n                                  }}\n                                >\n                                  <Edit fontSize='small' />\n                                </IconButton>\n                              </CustomCell>\n                              <CustomCell>\n                                <RDialog title='Drop' confirmText='Drop'\n                                  message='Confirm Drop Payment Method?'\n                                  color='error'\n                                  action={() => handleDropMethod(\n                                    { method: { id: item.id } }\n                                  )}\n                                >\n                                  <IconButton size='small' color='error'\n                                  >\n                                    <Delete fontSize='small' />\n                                  </IconButton>\n                                </RDialog>\n                              </CustomCell>\n                            </TableRow>\n                          )\n\n                        }\n                        return component\n                      })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditCreditCards;\n","import { useState } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControl, FormControlLabel, MenuItem, Select\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxios } from '../../tools/axiosTool'\n\nconst EditAnswers = (props) => {\n\n  const {\n    user, commonAnswers, ownAnswers, setCommonAnswers, setOwnAnswers,\n    handleMessage\n  } = props\n\n  const colors = {\n    '#1976d2': 'BLUE',\n    '#0097a7': 'CYAN',\n    '#388e3c': 'GREEN',\n    '#fbc02d': 'YELLOW',\n    '#f57c00': 'ORANGE',\n    '#d32f2f': 'RED',\n    '#c2185b': 'PINK',\n    '#7b1fa2': 'PURPLE',\n    '#5d4037': 'BROWN',\n    '#455a64': 'GREY'\n  }\n\n  const initialAnswer = {\n    id: '',\n    label: '',\n    color: '',\n    content: '',\n    common: false,\n    order: 0\n  }\n\n  const [answer, setAnswer] = useState(initialAnswer)\n  const [edit, setEdit] = useState(false)\n\n  const handleChangeAnswer = (e) => {\n    const { name, value, checked } = e.target\n    setAnswer({\n      ...answer,\n      [name]: name !== 'common' ? value : checked\n    })\n  }\n\n  const handleClickAnswer = (ans) => {\n    setAnswer(ans)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setAnswer(initialAnswer)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n      handleMessage(d.msg, 'success')\n      setAnswer(initialAnswer)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-answer', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-answer', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={3}>\n        <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n          border={2} p={2} borderRadius={1} borderColor='secondary.main'\n        >\n          <Grid container spacing={1} align='center' pr={2}>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Label' color='warning'\n                fullWidth name='label'\n                value={answer.label} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <TextField size='small' label='Order' color='warning'\n                fullWidth name='order' type='number'\n                value={answer.order} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='color'\n                  value={answer.color}\n                  onChange={handleChangeAnswer}\n                >\n                  {Object.entries(colors).map(([hex, name]) => {\n                    return (\n                      <MenuItem key={name} value={hex}>\n                        <Typography color={hex}>\n                          {name}\n                        </Typography>\n                      </MenuItem>\n                    )\n                  })\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {user?.is_admin && !edit &&\n              <Grid item xs={12} md={3}>\n                <FormControlLabel control={\n                  <Switch\n                    name='common'\n                    checked={answer.common}\n                    onChange={handleChangeAnswer}\n                  />\n                }\n                  label='Common'\n                />\n              </Grid>\n            }\n            <Grid item xs={12} md={11}>\n              <TextField label='Content' color='warning'\n                fullWidth multiline rows={4} name='content'\n                value={answer.content} onChange={handleChangeAnswer}\n              />\n            </Grid>\n            <Grid item xs={12} md={1}>\n              <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                confirmText={edit ? 'Update' : 'Create'} message={\n                  edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                } action={edit ? () => handleUpdateAnswer({\n                  answer: {\n                    ...answer, id: answer._id.$oid, color: colors[answer.color]\n                  }\n                }) : () => handleCreateAnswer({\n                  answer: {\n                    ...answer, color: colors[answer.color]\n                  }\n                })} color={edit ? 'warning' : 'success'}\n              >\n                <IconButton color={edit ? 'primary' : 'success'}\n                  disabled={!Boolean(answer.label)}\n                >\n                  <Save />\n                </IconButton>\n              </RDialog>\n              <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                confirmText='Delete' action={() => handleDeleteAnswer({\n                  answer: {\n                    id: answer._id.$oid\n                  }\n                })}\n              >\n                <IconButton color='error' disabled={!Boolean(answer.label)}>\n                  <Delete />\n                </IconButton>\n              </RDialog>\n              <IconButton color='warning' disabled={!Boolean(answer.label)}\n                onClick={handleCancel}\n              >\n                <Cancel />\n              </IconButton>\n            </Grid>\n            {user?.is_admin &&\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Commons\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '45vh', overflow: 'auto' }}\n                >\n                  {commonAnswers.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        sx={{\n                          color: '#FFFFFF',\n                          background: ans.color, '&:hover': {\n                            background: ans.color, filter: 'brightness(90%)'\n                          }\n                        }}\n                        onClick={() => handleClickAnswer(ans)}\n                      >\n                        {ans.label}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            }\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6'>\n                Own\n              </Typography>\n              <Stack spacing={1} p={1}\n                sx={{ paddingBlockEnd: 2, height: '45vh', overflow: 'auto' }}\n              >\n                {ownAnswers.map((ans) => {\n                  return (\n                    <Button key={ans._id.$oid} fullWidth variant='contained'\n                      sx={{\n                        color: '#FFFFFF',\n                        background: ans.color, '&:hover': {\n                          background: ans.color, filter: 'brightness(90%)'\n                        }\n                      }}\n                      onClick={() => handleClickAnswer(ans)}\n                    >\n                      {ans.label}\n                    </Button>\n                  )\n                })}\n              </Stack>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default EditAnswers","import { useState, useContext } from 'react'\nimport { Grid, Snackbar, Alert } from '@mui/material'\n\nimport { useAxiosEffect } from '../../tools/axiosTool'\nimport EditCreditCards from './EditCreditCards'\nimport EditAnswers from './EditAnswers'\nimport { UserContext } from '../../tools/contexts'\n\nconst AnswersSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [payMeths, setPayMeths] = useState([])\n  const [commonAnswers, setCommonAnswers] = useState([])\n  const [ownAnswers, setOwnAnswers] = useState([])\n\n\n  useAxiosEffect(\n    '/answers/get-all', 'answers',\n    (d) => {\n      if (d.answers['payment_methods']) {\n        setPayMeths(d.answers.payment_methods)\n      }\n      if (d.answers['common_answers']) {\n        setCommonAnswers(d.answers.common_answers)\n      }\n      if (d.answers['own_answers']) {\n        setOwnAnswers(d.answers.own_answers)\n      }\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  return (\n    <>\n      {user.is_admin &&\n        <Grid item xs={12} md={6}>\n          <EditCreditCards\n            payMeths={payMeths}\n            setPayMeths={setPayMeths}\n            handleMessage={handleMessage}\n          />\n        </Grid>\n      }\n      <Grid item xs={12} md={6}>\n        <EditAnswers\n          user={user}\n          commonAnswers={commonAnswers}\n          setCommonAnswers={setCommonAnswers}\n          ownAnswers={ownAnswers}\n          setOwnAnswers={setOwnAnswers}\n          handleMessage={handleMessage}\n        />\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default AnswersSettings;","import { useState } from 'react'\nimport {\n  Grid, Paper, Box, Button, TextField, Typography, FormControlLabel, Checkbox,\n  Divider\n} from '@mui/material'\nimport { ArrowUpward, Add } from '@mui/icons-material'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst NewItem = (props) => {\n\n  const { dates, setDates, setHasChanged, handleMessage } = props\n\n  const initialNewOne = { str_date: '', percent: '', increaseAll: true }\n\n  const [newOne, setNewOne] = useState(initialNewOne)\n  const [upAll, setUpAll] = useState('')\n\n  const handleChangeNewOne = (e) => {\n    const { name, value, checked } = e.target\n    setNewOne({ ...newOne, [name]: name === 'increaseAll' ? checked : value })\n  }\n\n  const addSuccessiveIncreases = (inc) => {\n    const b = parseFloat(inc)\n    return dates.map(item => {\n      const a = parseFloat(item.percent)\n      const newPercent = a + b + (a * b / 100)\n      return { _id: item._id, percent: newPercent.toFixed(2) }\n    })\n  }\n\n  const handleAddOne = () => {\n    const newDate = newOne.str_date.split('-').join('/')\n    const newPercent = parseFloat(newOne.percent)\n    for (let date of dates) {\n      if (date._id === newDate) {\n        handleMessage(`'${date._id}' is already on the list`, 'error')\n        return\n      }\n    }\n    let newDates = newOne.increaseAll\n      ? addSuccessiveIncreases(newPercent)\n      : dates\n    setDates([\n      { _id: newDate, percent: newPercent },\n      ...newDates\n    ])\n    setHasChanged(true)\n    setNewOne(initialNewOne)\n  }\n  \n  const handleUpdateAll = () => {\n    setDates(addSuccessiveIncreases(upAll))\n    setHasChanged(true)\n    setUpAll('')\n  }\n\n  return (\n    <Grid item pb='1vh'>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '39vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            sx={{ minHeight: '35vh', overflow: 'auto' }}\n          >\n            <Grid item xs={12}>\n              <Typography variant='h6' color='success.main'>\n                Add New Date - Percentage\n              </Typography>\n            </Grid>\n            <Grid item xs={8} md={4}>\n              <TextField fullWidth size='small' label='Date'\n                focused\n                type='date'\n                name='str_date'\n                value={newOne.str_date}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={4} md={2}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                name='percent'\n                value={newOne.percent}\n                onChange={handleChangeNewOne}\n              />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <FormControlLabel label='Increase All' control={\n                <Checkbox color='warning'\n                  name='increaseAll'\n                  checked={newOne.increaseAll}\n                  onChange={handleChangeNewOne}\n                />\n              } />\n            </Grid>\n            <Grid item xs={6} md={3}>\n              <RDialog title='Add New Date-Percentage Pair'\n                message='Confirm add a new one?' confirmText='ADD'\n                color='success' action={handleAddOne}\n              >\n                <Button fullWidth variant='contained' color='success'\n                  disabled={\n                    !Boolean(newOne.str_date)\n                    || !Boolean(newOne.percent)\n                  }\n                  sx={{ height: '100%' }} startIcon={<Add />}\n                >\n                  ADD\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12} py={2}>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6' color='warning.main'>\n                Increase All Percentages\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField fullWidth size='small' label='Percentage'\n                inputProps={{ min: 0 }}\n                type='number'\n                value={upAll}\n                onChange={(e) => setUpAll(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <RDialog title='Update Date-Percentage Table'\n                message='Confirm update table?' confirmText='UPDATE'\n                action={handleUpdateAll}\n              >\n                <Button fullWidth variant='contained' color='warning'\n                  disabled={!Boolean(upAll)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  UPDATE TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default NewItem","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  Button, IconButton, Typography\n} from '@mui/material'\nimport { ArrowUpward, Download, Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\n\nconst Lists = (props) => {\n\n  const { lists, setLists, setDates, setHasChanged, handleMessage } = props\n\n  const { user } = useContext(UserContext)\n  const [selectedList, setSelectedList] = useState('')\n\n  const fetchList = () => {\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleLoadList = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { list_name: selectedList },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          fetchList()\n          handleMessage(res.data.msg, 'success')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n      setSelectedList('')\n      setHasChanged(false)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDownloadList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/get-list-file',\n          { file_name: name },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['err']) {\n          console.error(res.data.err)\n        } else {\n          const fileToSave = window.URL.createObjectURL(\n            new Blob(\n              [JSON.stringify(res.data, undefined, 2)],\n              { type: 'application/json' }\n            )\n          )\n          const link = document.createElement('a')\n          link.href = fileToSave\n          link.setAttribute('download', `${name}`)\n          document.body.appendChild(link)\n          link.click()\n          link.remove()\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleDropList = (name) => {\n    try {\n      (async () => {\n        const res = await axios.delete(\n          api_url + '/calculator/drop-list',\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            },\n            data: { file_name: name }\n          }\n        )\n        if (res.data['msg']) {\n          const new_list = lists.filter(i => i.list_name !== name)\n          setLists(new_list)\n          setSelectedList('')\n          handleMessage(res.data.msg, 'info')\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Grid item>\n      <Paper elevation={5} sx={{ borderRadius: 1 }}>\n        <Box borderRadius={3} p={2}\n          sx={{ paddingBlockEnd: 2, minHeight: '40vh' }}\n        >\n          <Grid container spacing={1} align='center' pr={2}\n            alignItems='center'\n            alignContent='flex-start'\n          >\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6' color='error.main'>\n                Load Table\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} pb={2}>\n              <RDialog title='Load Table'\n                message='Confirm load table?'\n                confirmText='LOAD' disabled={!Boolean(selectedList)}\n                action={handleLoadList}\n              >\n                <Button fullWidth variant='contained' color='error'\n                  disabled={!Boolean(selectedList)}\n                  sx={{ height: '100%' }} startIcon={<ArrowUpward />}\n                >\n                  LOAD TABLE\n                </Button>\n              </RDialog>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container align='center'\n                alignItems='center'\n                alignContent='flex-start'\n                sx={{ height: '25vh', overflow: 'auto' }}\n              >\n                <Table stickyHeader size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align='center' width='80%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Table Name\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Download\n                      </TableCell>\n                      <TableCell align='center' width='10%'\n                        sx={{ borderRadius: '5px 5px 0px 0px' }}\n                      >\n                        Drop\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {lists.map(list => {\n                      const is_sel = selectedList === list.list_name\n                      return (\n                        <TableRow key={list._id.$oid} hover\n                          selected={is_sel}\n                        >\n                          <TableCell align='center'\n                            onClick={() => {\n                              is_sel ?\n                                setSelectedList('')\n                                :\n                                setSelectedList(list.list_name)\n                            }}>\n                            {list.list_name}\n                          </TableCell>\n                          <TableCell align='center'>\n                            <IconButton size='small' color='info'\n                              onClick={() =>\n                                handleDownloadList(list.list_name)\n                              }\n                            >\n                              <Download />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell align='center'>\n                            <RDialog title='Drop Data Table?'\n                              message='Confirm drop Table?'\n                              confirmText='DROP'\n                              action={() => {\n                                handleDropList(list.list_name)\n                              }}\n                            >\n                              <IconButton size='small' color='error'>\n                                <Delete />\n                              </IconButton>\n                            </RDialog>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Lists","import { useState, useContext } from 'react'\nimport {\n  Grid, Paper, Box, Table, TableHead, TableBody, TableRow, TableCell,\n  IconButton, TextField, Button\n} from '@mui/material'\nimport {\n  Done, Cancel, Edit, Delete\n} from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport RDialog from '../../tools/ReusableDialog'\n\nconst Items = (props) => {\n\n  const {\n    dates, setDates, lists, setLists, hasChanged, setHasChanged, handleMessage\n  } = props\n\n  const { user } = useContext(UserContext)\n  const [selected, setSelected] = useState({ _id: '', percent: '' })\n  const [oneDate, setOneDate] = useState({ _id: '', percent: '' })\n\n  const handleChangeSelected = (e) => {\n    const { name, value } = e.target\n    setOneDate({ ...oneDate, [name]: value })\n  }\n\n  const handleUpdateOne = () => {\n    let newDates = dates.map(item => {\n      return item._id !== selected._id ? item\n        : { _id: oneDate._id, percent: parseFloat(oneDate.percent) }\n    })\n    if (selected._id !== oneDate._id) {\n      newDates.push({ ...selected, percent: -1 })\n    }\n    setDates(newDates)\n    setSelected({ _id: '', percent: '' })\n    setHasChanged(true)\n  }\n\n  const handleDeleteOne = (id) => {\n    const newDates = dates.filter(item => item._id !== id)\n    setDates(newDates)\n    setHasChanged(true)\n  }\n\n  const handleUpdateTable = () => {\n    try {\n      (async () => {\n        const res = await axios.post(\n          api_url + '/calculator/load-list',\n          { dates: dates },\n          {\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user?.token}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          const newLists = lists\n          newLists.unshift({\n            _id: { $oid: new Date().getTime() },\n            list_name: res.data.new_list\n          })\n          setLists(newLists)\n          const newDates = dates\n            .filter(item => item.percent !== -1)\n            .sort((a, b) => a._id > b._id ? -1 : (a._id < b._id ? 1 : 0))\n          setDates(newDates)\n          handleMessage(res.data.msg, 'success')\n          setHasChanged(false)\n        }\n        if (res.data['err']) {\n          handleMessage(res.data.err, 'error')\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Paper elevation={5} sx={{ borderRadius: 1 }}>\n      <Box borderRadius={3} p={2}\n        sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n      >\n        <Grid container spacing={1} align='center' pr={2}\n          alignItems='top'\n          alignContent='flex-start'\n          sx={{ height: '65vh', overflow: 'auto' }}\n        >\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' width='50%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Date (y/m/d)\n                </TableCell>\n                <TableCell align='center' width='30%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Percentage\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Edit\n                </TableCell>\n                <TableCell align='center' width='10%'\n                  sx={{ borderRadius: '5px 5px 0px 0px' }}\n                >\n                  Drop\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                dates?.map(date => {\n                  const dis = (\n                    selected._id === oneDate._id &&\n                    selected.percent.toString() ===\n                    oneDate.percent.toString()\n                  )\n                  const component = (selected._id === date._id\n                    ?\n                    <TableRow key={date._id} hover selected>\n                      <TableCell>\n                        {<TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' }\n                          }}\n                          name='_id'\n                          value={oneDate._id}\n                          onChange={handleChangeSelected}\n                        />}\n                      </TableCell>\n                      <TableCell>\n                        <TextField size='small' variant='standard'\n                          inputProps={{\n                            style: { textAlign: 'center' },\n                            min: 0\n                          }}\n                          type='number'\n                          name='percent'\n                          value={oneDate.percent}\n                          onChange={handleChangeSelected}\n                        />\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='success'\n                          disabled={dis}\n                          onClick={handleUpdateOne}\n                        >\n                          <Done />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='info'\n                          onClick={() =>\n                            setSelected({ _id: '', percent: '' })\n                          }\n                        >\n                          <Cancel />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                    :\n                    <TableRow key={date._id} hover>\n                      <TableCell align='center'>\n                        {date._id}\n                      </TableCell>\n                      <TableCell align='center'>\n                        {date.percent}\n                      </TableCell>\n                      <TableCell align='right'>\n                        <IconButton size='small' color='warning'\n                          onClick={() => {\n                            setOneDate({\n                              _id: date._id, percent: date.percent\n                            })\n                            setSelected({\n                              _id: date._id, percent: date.percent\n                            })\n                          }}\n                        >\n                          <Edit />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align='right'>\n                        <RDialog title='Delete Data?'\n                          message='Confirm delete Data Percentage?'\n                          confirmText='Delete'\n                          action={() => handleDeleteOne(date._id)}\n                        >\n                          <IconButton size='small' color='error'>\n                            <Delete />\n                          </IconButton>\n                        </RDialog>\n                      </TableCell>\n                    </TableRow>\n                  )\n                  return component\n                })\n              }\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid container spacing={2} py={2}>\n          <Grid item xs={6} md={9}></Grid>\n          <Grid item xs={6} md={3}>\n            <RDialog title='Update Table' message='Confirm Update Table?'\n              confirmText='UPDATE' action={handleUpdateTable} color='warning'\n              disabled={!hasChanged}\n            >\n              <Button fullWidth variant='contained' color='error'\n                disabled={!hasChanged}\n              >\n                Update Table\n              </Button>\n            </RDialog>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Items","import { useEffect, useState, useContext } from 'react'\nimport { Grid, Typography, Snackbar, Alert } from '@mui/material'\nimport axios from 'axios'\n\nimport { UserContext } from '../../tools/contexts'\nimport { api_url } from '../../tools/routes'\nimport NewItem from './NewItem'\nimport Lists from './Lists'\nimport Items from './Items'\n\n\nconst CalculatorSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const [dates, setDates] = useState([])\n  const [lists, setLists] = useState([])\n  const [hasChanged, setHasChanged] = useState(false)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    try {\n      (async () => {\n        const res = await axios.get(\n          api_url + '/calculator/get-lists-data',\n          {\n            cancelToken: source.token,\n            headers: {\n              Accept: '*/*',\n              Authorization: `Bearer ${user.token}`\n            }\n          }\n        )\n        if (res.data['dates']) {\n          setDates(res.data.dates)\n          setLists(res.data.lists)\n        }\n        if (res.data['err']) {\n          console.error(res.data.err)\n        }\n      })()\n    }\n    catch (error) {\n      console.error(error)\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  return (\n    <>\n      {user?.is_admin ?\n        <>\n          <Grid item xs={12} md={6}>\n\n            <NewItem\n              dates={dates}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n            <Lists\n              lists={lists}\n              setLists={setLists}\n              setDates={setDates}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n            <Items\n              dates={dates}\n              setDates={setDates}\n              lists={lists}\n              setLists={setLists}\n              hasChanged={hasChanged}\n              setHasChanged={setHasChanged}\n              handleMessage={handleMessage}\n            />\n\n          </Grid>\n\n        </>\n        :\n        <Grid item>\n          <Typography variant='h3' color='error'>\n            ⛔ This section is for admins only\n          </Typography>\n        </Grid>\n      }\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default CalculatorSettings;","import { useState, useContext } from 'react'\nimport {\n  Grid, Box, TextField, IconButton, Stack, Button, Typography, Paper, Switch,\n  FormControlLabel, Snackbar, Alert\n} from '@mui/material'\nimport { Save, Delete, Cancel } from '@mui/icons-material'\n\nimport { UserContext } from '../../tools/contexts'\nimport RDialog from '../../tools/ReusableDialog'\nimport { useAxiosEffect, useAxios } from '../../tools/axiosTool'\n\nconst ExpressionsSettings = () => {\n\n  const { user } = useContext(UserContext)\n\n  const initialExpression = {\n    id: '',\n    is_system: false,\n    identifier: '',\n    pattern: '',\n    replacement: ''\n  }\n\n  const [openSB, setOpenSB] = useState(false)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [sysRegex, setSysRegex] = useState([])\n  const [ownRegex, setOwnRegex] = useState([])\n  const [expression, setExpression] = useState(initialExpression)\n  const [edit, setEdit] = useState(false)\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt });\n    setOpenSB(true)\n  }\n\n  const handleClose = () => {\n    setOpenSB(false)\n  }\n\n  const handleChangeExpression = (e) => {\n    const { name, value, checked } = e.target\n    setExpression({\n      ...expression,\n      [name]: name !== 'is_system' ? value : checked\n    })\n  }\n\n  const handleClickExpression = (exp) => {\n    setExpression(exp)\n    setEdit(true)\n  }\n\n  const handleCancel = () => {\n    setExpression(initialExpression)\n    setEdit(false)\n  }\n\n  const queryHandlers = [\n    (d) => {\n      if (d.answers['sys_regex']) {\n        setSysRegex(d.answers.sys_regex)\n      }\n      if (d.answers['own_regex']) {\n        setOwnRegex(d.answers.own_regex)\n      }\n      if (d.msg) {\n        handleMessage(d.msg, 'success')\n      }\n      setExpression(initialExpression)\n      setEdit(false)\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  ]\n\n  useAxiosEffect(\n    '/answers/get-expressions', 'answers',\n    ...queryHandlers\n  )\n\n  const handleCreateAnswer = useAxios(\n    'post', '/answers/create-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleUpdateAnswer = useAxios(\n    'put', '/answers/update-expression', 'answers',\n    ...queryHandlers\n  )\n\n  const handleDeleteAnswer = useAxios(\n    'delete', '/answers/delete-expression', 'answers',\n    ...queryHandlers\n  )\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={7}>\n          <Box sx={{ paddingBlockEnd: 2, minHeight: '80vh' }}\n            border={2} p={2} borderRadius={1} borderColor='info.main'\n          >\n            <Grid container spacing={1} align='center' pr={2}>\n              <Grid item xs={12} md={8}>\n                <TextField size='small' label='Identifier' color='warning'\n                  fullWidth name='identifier'\n                  value={expression.identifier}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n\n              {user?.is_admin && !edit &&\n                <Grid item xs={12} md={3}>\n                  <FormControlLabel control={\n                    <Switch\n                      name='is_system'\n                      checked={expression.is_system}\n                      onChange={handleChangeExpression}\n                    />\n                  }\n                    label='System'\n                  />\n                </Grid>\n              }\n              <Grid item xs={12} md={11}>\n                <TextField size='small' label='Pattern' color='warning'\n                  fullWidth name='pattern'\n                  value={expression.pattern} onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={11}>\n                <TextField label='Replacement' color='warning'\n                  fullWidth multiline rows={4} name='replacement'\n                  value={expression.replacement}\n                  onChange={handleChangeExpression}\n                />\n              </Grid>\n              <Grid item xs={12} md={1}>\n                <RDialog title={edit ? 'Update Answer' : 'Create Answer'}\n                  confirmText={edit ? 'Update' : 'Create'} message={\n                    edit ? 'Confirm Update Answer?' : 'Confirm Create Answer?'\n                  } action={edit ? () => handleUpdateAnswer({\n                    expression: {\n                      ...expression, id: expression._id.$oid\n                    }\n                  }) : () => handleCreateAnswer({\n                    expression: expression\n                  })} color={edit ? 'warning' : 'success'}\n                >\n                  <IconButton color={edit ? 'primary' : 'success'}\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Save />\n                  </IconButton>\n                </RDialog>\n                <RDialog title='Delete Answer' message='Confirm Delete Answer?'\n                  confirmText='Delete' action={() => handleDeleteAnswer({\n                    expression: {\n                      id: expression._id.$oid\n                    }\n                  })}\n                >\n                  <IconButton color='error'\n                    disabled={!Boolean(expression.identifier)}\n                  >\n                    <Delete />\n                  </IconButton>\n                </RDialog>\n                <IconButton color='warning'\n                  disabled={!Boolean(expression.identifier)}\n                  onClick={handleCancel}\n                >\n                  <Cancel />\n                </IconButton>\n              </Grid>\n              {user?.is_admin &&\n                <Grid item xs={12} md={6}>\n                  <Typography variant='h6'>\n                    System\n                  </Typography>\n                  <Stack spacing={1} p={1}\n                    sx={{\n                      paddingBlockEnd: 2, height: '38vh', overflow: 'auto'\n                    }}\n                  >\n                    {sysRegex.map((exp) => {\n                      return (\n                        <Button key={exp._id.$oid} fullWidth variant='contained'\n                          color='error'\n                          onClick={() => handleClickExpression(exp)}\n                        >\n                          {exp.identifier}\n                        </Button>\n                      )\n                    })}\n                  </Stack>\n                </Grid>\n              }\n              <Grid item xs={12} md={6}>\n                <Typography variant='h6'>\n                  Own\n                </Typography>\n                <Stack spacing={1} p={1}\n                  sx={{ paddingBlockEnd: 2, height: '38vh', overflow: 'auto' }}\n                >\n                  {ownRegex.map((ans) => {\n                    return (\n                      <Button key={ans._id.$oid} fullWidth variant='contained'\n                        color='primary'\n                        onClick={() => handleClickExpression(ans)}\n                      >\n                        {ans.identifier}\n                      </Button>\n                    )\n                  })}\n                </Stack>\n              </Grid>\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={openSB}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}\n          sx={{ whiteSpace: 'pre-line' }}\n        >\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default ExpressionsSettings","import { useContext, useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport axios from 'axios'\nimport {\n  Typography, Button, Grid, TextField, Container, Alert, Fade\n} from '@mui/material'\n\nimport { UserContext, UserSettingsContext } from '../tools/contexts'\nimport { api_url } from '../tools/routes'\n\nconst UserLogin = () => {\n\n  const [uName, setUName] = useState('')\n  const [uPass, setUPass] = useState('')\n  const [loginState, setLoginState] = useState('')\n\n  const { user, setUser } = useContext(UserContext)\n  const { setUserSettings } = useContext(UserSettingsContext)\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  useEffect(() => {\n    if (user) {\n      navigate(\n        location.pathname === '/login' ? '/news' : location.pathname,\n        { replace: true }\n      )\n    }\n  })\n\n  const handleUName = e => {\n    setUName(e.target.value)\n  }\n\n  const handleUPass = e => {\n    setUPass(e.target.value)\n  }\n\n  const handleLogin = async e => {\n    e.preventDefault()\n    const path = location.pathname === '/login' ? '/news' : location.pathname\n\n    try {\n      let res = await axios.post(\n        api_url + '/users/signin',\n        {\n          'username': uName,\n          'password': uPass\n        }\n      )\n      if (res.data['user']) {\n        setUser({ ...res.data.user, username: uName })\n        setUserSettings({ ...res.data.settings })\n      } else {\n        setUName('')\n        setUPass('')\n        setLoginState(res.data['msg'])\n        setTimeout(() => {\n          setLoginState('')\n        }, 2500);\n      }\n      // console.log(res.data['user'])\n    }\n    catch (error) {\n      console.log(error)\n    }\n    navigate(path, { replace: true })\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3} margin={0} >\n        <Grid item xs={12}>\n          <Typography variant='h3' color='primary'>User Login</Typography>\n        </Grid>\n        <Grid item >\n          <Fade in={Boolean(loginState)} timeout={1000}>\n            <Alert severity='warning' variant='outlined'>\n              {loginState}\n            </Alert>\n          </Fade>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uName'\n            label='Username'\n            value={uName}\n            onChange={handleUName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='uPass'\n            label='Password'\n            type='password'\n            value={uPass}\n            onChange={handleUPass}\n            onKeyPress={\n              e => { if (e.key === 'Enter') { handleLogin(e) } }\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='contained' color='primary' onClick={handleLogin}>\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default UserLogin;","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel,\n  Fade, Alert\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst UpdateUserForm = (props) => {\n\n  const { user, setUser, ...others } = props\n\n  const initialUser = {\n    username: '',\n    email: '',\n    password: '',\n    new_password: '',\n    confirm_new_password: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n  const [userData, setUserData] = useState(initialUser)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-user-data',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUserData({\n            ...res.data,\n            password: '',\n            new_password: '',\n            confirm_new_password: ''\n          })\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user])\n\n  const handleChangeUser = (e) => {\n    const { name, value, checked } = e.target\n    setUserData({\n      ...userData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [samePassword, setSamePassword] = useState(true)\n  const handleSamePassword = (e) => {\n    const { name, value } = e.target\n    if (name === 'new_password') {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['confirm_new_password'] === value\n      )\n    } else {\n      setUserData({\n        ...userData,\n        [name]: value\n      })\n      setSamePassword(\n        userData['new_password'] === value\n      )\n    }\n  }\n\n  const [updateState, setUpdateState] = useState({ msg: '', vnt: 'info' })\n  const handleUpdateUser = () => {\n    if (!samePassword) {\n      setUpdateState({ msg: \"new password doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUpdateState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-user',\n          userData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUpdateState({ msg: res.data['msg'], vnt: 'success' })\n          const resultUser = {\n            ...user,\n            username: userData['username'],\n            first_name: userData['first_name'],\n            last_name: userData['last_name'],\n            is_admin: userData['is_admin']\n          }\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'success' })\n          }, 2500)\n          if (res.data['wrn']) {\n            setTimeout(() => {\n              setUpdateState({ msg: res.data['wrn'], vnt: 'warning' })\n            }, 2600)\n            setTimeout(() => {\n              setUpdateState({ msg: '', vnt: 'warning' })\n              setUser(resultUser)\n            }, 5100)\n          } else {\n            setUser(resultUser)\n          }\n        } else {\n          setUpdateState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUpdateState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSamePassword(true)\n    }, 500);\n  }\n\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update My User Account\n              </Typography>\n            </Grid>\n            <Grid item xs={12} mx={1}>\n              <Typography variant='h6' color='GrayText'>\n                {userData['email']}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={userData['username']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            {user['is_admin'] &&\n              <Grid item mb={0}>\n                <FormControlLabel control={\n                  <Switch\n                    name='is_admin'\n                    checked={userData['is_admin']}\n                    onChange={handleChangeUser}\n                  />\n                }\n                  label='Is Admin'\n                />\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='First Name'\n                value={userData['first_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={userData['last_name']}\n                onChange={handleChangeUser}\n              />\n            </Grid>\n            <Grid item>\n              <Paper elevation={1} sx={{\n                background: 'darkGray2',\n                display: 'inline-block'\n              }}>\n                <Grid item pb={2}>\n                  <TextField size='small' error={!samePassword}\n                    name='new_password'\n                    label='New Password'\n                    type='password'\n                    value={userData['new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField size='small' error={!samePassword}\n                    name='confirm_new_password'\n                    label='Confirm New Password'\n                    type='password'\n                    value={userData['confirm_new_password']}\n                    onChange={handleSamePassword}\n                  />\n                </Grid>\n              </Paper>\n              <Grid container columns={2} pt={2}>\n                <Grid item pb={2}>\n                  <TextField size='small' color='warning'\n                    focused\n                    name='password'\n                    label='Password'\n                    type='password'\n                    value={userData['password']}\n                    onChange={handleChangeUser}\n                    onKeyPress={\n                      e => {if (e.key === 'Enter') {handleUpdateUser()}}\n                    }\n                  />\n                </Grid>\n                <RDialog\n                  title='Update User' message='Confirm user update?'\n                  confirmText='UPDATE' color='secondary'\n                  action={handleUpdateUser}\n                >\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"warning\">\n                      UPDATE\n                    </Button>\n                  </Grid>\n                </RDialog>\n              </Grid>\n              <Grid item pb={2}>\n                <Fade in={Boolean(updateState['msg'])} timeout={1000}>\n                  <Alert severity={updateState['vnt']} variant='outlined'>\n                    {updateState['msg']}\n                  </Alert>\n                </Fade>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n    </Fragment >\n  )\n}\n\nexport default UpdateUserForm","import { Fragment, useState, useContext } from 'react'\nimport {\n  Grid, Typography, Paper, Button, Switch, FormControlLabel, FormControl,\n  Select, MenuItem, Snackbar, Alert\n} from '@mui/material'\n\nimport { UserSettingsContext } from '../tools/contexts'\nimport RDialog from '../tools/ReusableDialog'\nimport { useAxios } from '../tools/axiosTool'\n\n\nconst UserOptions = (props) => {\n\n  const { userSettings, setUserSettings } = useContext(UserSettingsContext)\n  const [settings, setSettings] = useState(userSettings)\n  const [message, setMessage] = useState({ msg: '', vnt: '' })\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleMessage = (msg, vnt) => {\n    setMessage({ msg: msg, vnt: vnt })\n    setOpen(true)\n  }\n\n  const handleChangeSettings = (e) => {\n    const { name, value, checked } = e.target\n    setSettings({\n      ...settings,\n      [name]: name !== 'calculator' ? value : checked\n    })\n  }\n\n  const handleSaveSettings = useAxios(\n    'put', '/users/update-user-settings', 'settings',\n    (d) => {\n      setUserSettings(d.settings)\n      handleMessage(d.msg, 'success')\n    },\n    (d) => { handleMessage(d.wrn, 'warning') },\n    (d) => { handleMessage(d.err, 'error') }\n  )\n\n  return (\n    <Fragment {...props}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"primary\">\n                User Settings\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <Select size='small'\n                  name='theme_mode'\n                  value={settings.theme_mode}\n                  onChange={handleChangeSettings}\n                >\n                  <MenuItem value='dark'> DARK THEME </MenuItem>\n                  <MenuItem value='light'> LIGHT THEME</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel control={\n                <Switch\n                  name='calculator'\n                  checked={settings.calculator}\n                  onChange={handleChangeSettings}\n                />\n              }\n                label='Basic Calculator for Default'\n              />\n            </Grid>\n            <Grid item xs={12} px={2} pb={2}>\n              <RDialog\n                title='Save User Settings' confirmText='UPDATE'\n                message='Confirm Save user settings?' color='warning'\n                action={() => handleSaveSettings({\n                  settings: {\n                    theme_mode: settings.theme_mode,\n                    calculator: settings.calculator\n                  }\n                })}\n              >\n                <Button variant=\"contained\" color=\"warning\">\n                  CONFIGURE\n                </Button>\n              </RDialog>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid >\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert variant='filled' color={message.vnt}>\n          {message.msg}\n        </Alert>\n      </Snackbar>\n    </Fragment >\n  )\n}\n\nexport default UserOptions\n","import { Fragment, useEffect, useState } from 'react'\nimport {\n  Grid, Typography, Paper, ListItem, ListItemButton, IconButton, ListItemText,\n  Fade, Alert\n} from '@mui/material'\nimport { Delete } from '@mui/icons-material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst OtherUsersList = (props) => {\n\n  const { \n    user, setEdit, usersSate, setUsersState,\n    initialOtherUser, setOtherUserData, ...others \n  } = props\n  const [usersData, setUsersData] = useState([])\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    if (user?.token) {\n      (async () => {\n        try {\n          const res = await axios.get(\n            api_url + '/users/get-users',\n            {\n              cancelToken: source.token,\n              headers: {\n                'Accept': '*/*',\n                'Authorization': `Bearer ${user['token']}`\n              }\n            }\n          )\n          setUsersData(res.data)\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n    return () => {\n      source.cancel()\n    }\n  }, [user, usersSate])\n\n  const handleEditUser = (user) => {\n    setOtherUserData({ ...user })\n    setEdit(true)\n  }\n\n  const handleDeleteUser = (email) => {\n    (async () => {\n      try {\n        const res = await axios.delete(\n          api_url + '/users/delete-other-user',\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            },\n            data: { email: email }\n          }\n          )\n          if (res.data['msg']) {\n            setUsersState({ msg: res.data['msg'], vnt: 'info' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'info' })\n            }, 2500)\n          } else {\n            setUsersState({ msg: res.data['err'], vnt: 'error' })\n            setTimeout(() => {\n              setUsersState({ msg: '', vnt: 'error' })\n            }, 2500)\n          }\n        }\n        catch (error) {\n          console.log(error)\n        }\n      })()\n      setEdit(false)\n      setOtherUserData(initialOtherUser)\n    }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                List of Active Users\n              </Typography>\n            </Grid>\n            {usersData.map((otherUser) => {\n              return (\n                <ListItem key={otherUser['username']} secondaryAction={\n                  <RDialog title='Delete' message='Confirm user Delete?'\n                    confirmText='DELETE' action={() => \n                      handleDeleteUser(otherUser['email'])\n                    }\n                  >\n                    <IconButton edge='end'>\n                      <Delete fontSize='large' color='error' />\n                    </IconButton>\n                  </RDialog>\n                }>\n                  <ListItemButton onClick={() => { handleEditUser(otherUser) }}>\n                    <ListItemText\n                      primary={[\n                        `${otherUser['username']} -`,\n                        otherUser['first_name'],\n                        otherUser['last_name']\n                      ].join(' ')}\n                      secondary={otherUser['email']}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              )\n            })}\n          </Grid>\n        </Paper>\n          <Grid item pt={3}>\n            <Fade in={Boolean(usersSate['msg'])} timeout={1000}>\n              <Alert severity={usersSate['vnt']} variant='outlined'>\n                {usersSate['msg']}\n              </Alert>\n            </Fade>\n          </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default OtherUsersList","import { Fragment, useState } from 'react'\nimport {\n  Grid, Typography, Paper, TextField, Button, Switch, FormControlLabel\n} from '@mui/material'\nimport axios from 'axios'\n\nimport { api_url } from '../tools/routes'\nimport RDialog from '../tools/ReusableDialog'\n\n\nconst CreateUpdateOtherUser = (props) => {\n\n  const {\n    user, edit, setEdit, setUsersState, initialOtherUser,\n    otherUserData, setOtherUserData, ...others\n  } = props\n\n  const handleChangeOtherUser = (e) => {\n    const { name, value, checked } = e.target\n    setOtherUserData({\n      ...otherUserData,\n      [name]: name !== 'is_admin' ? value : checked\n    })\n  }\n\n  const [sameEmail, setSameEmail] = useState(true)\n  const handleSameEmail = (e) => {\n    const { name, value } = e.target\n    if (name === 'email') {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['confirm_email'] === value\n      )\n    } else {\n      setOtherUserData({\n        ...otherUserData,\n        [name]: value\n      })\n      setSameEmail(\n        otherUserData['email'] === value\n      )\n    }\n  }\n\n  const handleCreateOtherUser = () => {\n    for (let [field, value] of Object.entries(otherUserData)) {\n      if (value === '') {\n        setUsersState({ msg: `Missing Value ${field}`, vnt: 'error' })\n        setTimeout(() => {\n          setUsersState({ msg: '', vnt: 'error' })\n        }, 2500);\n        return\n      }\n    }\n    if (!sameEmail) {\n      setUsersState({ msg: \"Email doesn't match\", vnt: 'error' })\n      setTimeout(() => {\n        setUsersState({ msg: '', vnt: 'error' })\n      }, 2500);\n      return\n    }\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/signup',\n          otherUserData,\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setOtherUserData(initialOtherUser)\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n\n    setTimeout(() => {\n      setSameEmail(true)\n    }, 500);\n  }\n\n  const handleUpdateOtherUser = () => {\n    (async () => {\n      try {\n        const res = await axios.post(\n          api_url + '/users/update-other-user',\n          (({ email, username, first_name, last_name, is_admin }) => (\n            { email, username, first_name, last_name, is_admin }\n          ))(otherUserData),\n          {\n            headers: {\n              'Accept': '*/*',\n              'Authorization': `Bearer ${user['token']}`\n            }\n          }\n        )\n        if (res.data['msg']) {\n          setUsersState({ msg: res.data['msg'], vnt: 'success' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'success' })\n          }, 2500)\n        } else {\n          setUsersState({ msg: res.data['err'], vnt: 'error' })\n          setTimeout(() => {\n            setUsersState({ msg: '', vnt: 'error' })\n          }, 2500)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    })()\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n  }\n\n  const handleCancelEditUser = () => {\n    setOtherUserData(initialOtherUser)\n    setEdit(false)\n    setSameEmail(true)\n  }\n\n  return (\n    <Fragment {...others}>\n      <Grid item xs={12} md={4}>\n        <Paper elevation={3}>\n          <Grid container spacing={2} margin={0} px={{ xs: 0, md: 3 }}>\n            <Grid item>\n              <Typography variant=\"h6\" color=\"primary\">\n                Update My User Account\n              </Typography>\n            </Grid>\n            {!edit ? <>\n              <Grid item>\n                <Paper elevation={1} sx={{\n                  background: 'darkGray2',\n                  display: 'inline-block'\n                }}>\n                  <Grid item pb={2}>\n                    <TextField size='small' error={!sameEmail}\n                      name='email'\n                      label='Email (ID - immutable)'\n                      value={otherUserData['email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField size='small' error={!sameEmail}\n                      name='confirm_email'\n                      label='Confirm Email'\n                      value={otherUserData['confirm_email']}\n                      onChange={handleSameEmail}\n                    />\n                  </Grid>\n                </Paper>\n              </Grid>\n            </> :\n              <Grid item xs={12} mx={1}>\n                <Typography variant='h6' color='GrayText'>\n                  {otherUserData['email']}\n                </Typography>\n              </Grid>\n            }\n            <Grid item>\n              <TextField size='small'\n                name='username'\n                label='Username'\n                value={otherUserData['username']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item mb={0}>\n              <FormControlLabel control={\n                <Switch\n                  name='is_admin'\n                  checked={otherUserData['is_admin']}\n                  onChange={handleChangeOtherUser}\n                />\n              }\n                label='Is Admin'\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='first_name'\n                label='Fisrs Name'\n                value={otherUserData['first_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <TextField size='small'\n                name='last_name'\n                label='Last Name'\n                value={otherUserData['last_name']}\n                onChange={handleChangeOtherUser}\n              />\n            </Grid>\n            <Grid item>\n              <Grid container columns={2} sx={{ alignItems: 'flex-end' }}>\n                {edit ? <>\n                  <Grid item pl={2} pb={2}>\n                    <Button variant=\"contained\" color=\"error\"\n                      onClick={handleCancelEditUser}\n                    >\n                      CANCEL\n                    </Button>\n                  </Grid>\n                  <RDialog title='Update Other User'\n                    message='Confirm user update?' color='secondary'\n                    confirmText='UPDATE' action={handleUpdateOtherUser}\n                  >\n                    <Grid item pl={2} pb={2}>\n                      <Button variant=\"contained\" color=\"warning\">\n                        UPDATE\n                      </Button>\n                    </Grid>\n                  </RDialog>\n                </> : <>\n                  <Grid item pb={2}>\n                    <Paper elevation={1} sx={{\n                      maxWidth: '230px',\n                      background: 'darkGray2',\n                      display: 'inline-block'\n                    }}>\n                      <Grid item p={2}>\n                        <Typography variant=\"body1\"\n                          color=\"warning.main\"\n                        >\n                          By default the password will be \"abc123\"\n                          the user must change it later\n                        </Typography>\n                      </Grid>\n                    </Paper>\n                  </Grid>\n                  <Grid item px={2} pb={2}>\n                    <Button variant=\"contained\" color=\"success\"\n                      onClick={handleCreateOtherUser}\n                    >\n                      CREATE\n                    </Button>\n                  </Grid>\n                </>}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default CreateUpdateOtherUser","import { useContext, useState } from 'react'\nimport {\n  Container, Grid, Typography,\n} from '@mui/material'\n\nimport { UserContext } from '../tools/contexts'\nimport UpdateUserForm from './UpdateUserFrom'\nimport UserOptions from './UserOptions'\nimport OtherUsersList from './OtherUsersList'\nimport CreateUpdateOtherUser from './CreateUpdateOtherUser'\n\n\nconst UserAccount = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  const initialOtherUser = {\n    username: '',\n    email: '',\n    confirm_email: '',\n    first_name: '',\n    last_name: '',\n    is_admin: false\n  }\n\n  const [edit, setEdit] = useState(false)\n  const [otherUserData, setOtherUserData] = useState(initialOtherUser)\n  const [usersSate, setUsersState] = useState({ msg: '', vnt: 'success' })\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" color=\"secondary\">User Account</Typography>\n      </Grid>\n        <Grid container spacing={2}>\n\n          <UpdateUserForm\n            user={user}\n            setUser={setUser}\n          />\n\n          <UserOptions />\n\n          {user.is_admin && <>\n            <OtherUsersList\n              user={user}\n              setEdit={setEdit}\n              usersSate={usersSate}\n              setUsersState={setUsersState}\n              initialOtherUser={initialOtherUser}\n              setOtherUserData={setOtherUserData}\n            />\n\n            <CreateUpdateOtherUser\n              user={user}\n              edit={edit}\n              setEdit={setEdit}\n              setUsersState={setUsersState}\n              initialOtherUser={initialOtherUser}\n              otherUserData={otherUserData}\n              setOtherUserData={setOtherUserData}\n            />\n          </>}\n\n        </Grid>\n    </Container >\n  )\n}\n\nexport default UserAccount;","import { useContext, useEffect, useMemo } from 'react'\nimport { Routes, Route, Navigate } from 'react-router-dom'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { cyan, deepOrange, deepPurple } from \"@mui/material/colors\"\nimport { Paper, CssBaseline } from \"@mui/material\"\n\nimport Navbar from './NavBar'\nimport AuthenticatedContent from './AuthenticatedContent'\nimport { routes, sub_routes } from './tools/routes'\n\nimport News from './_news/News'\nimport Calculators from './_calculator/Calculators'\nimport Answers from './_answers/Answers'\nimport Settings from './_settings/Settings'\nimport AnswersSettings from './_settings/answers/AnswersSettings'\nimport CalculatorSettings from './_settings/calculator/CalculatorSettings'\nimport ExpressionsSettings from './_settings/expressions/ExpressionsSettings'\nimport UserLogin from './_user/UserLogin'\nimport UserAccount from './_user/UserAccount'\n\nimport { UserContext, AuthContext, UserSettingsContext } from './tools/contexts'\n\nconst App = () => {\n\n  const { user, setUser } = useContext(UserContext)\n  const { auth, setAuth } = useContext(AuthContext)\n  const { userSettings } = useContext(UserSettingsContext)\n\n  const theme = useMemo(() =>\n    userSettings.theme_mode !== 'light' ?\n      createTheme({\n        palette: {\n          mode: 'dark',\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple\n        }\n      })\n      :\n      createTheme({\n        palette: {\n          mode: userSettings.theme_mode,\n          primary: cyan,\n          secondary: deepOrange,\n          info: deepPurple,\n          background: {\n            paper: '#eaeaea',\n            default: '#fafafa'\n          }\n        }\n      })\n    , [userSettings.theme_mode]\n  )\n\n  useEffect(() => {\n    if (user?.token) {\n      setAuth(true)\n    }\n  }, [user, setAuth])\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme>\n        <Paper sx={{ paddingBlockEnd: 2, minHeight: '100vh' }} square>\n          <Navbar />\n          {(auth ?\n            <AuthenticatedContent\n              setAuth={setAuth} user={user} setUser={setUser}\n            >\n              <Routes>\n                <Route path={'/'} element={<Navigate to={routes[0]} />} />\n                <Route path={routes[0]} element={<News />} />\n                <Route path={routes[1]} element={<Calculators />} />\n                <Route path={routes[2]} element={<Answers />} />\n                <Route path={routes[3]} element={<Settings />} >\n                  <Route\n                    path={sub_routes[0]} element={<AnswersSettings />} />\n                  <Route\n                    path={sub_routes[1]} element={<CalculatorSettings />} />\n                  <Route\n                    path={sub_routes[2]} element={<ExpressionsSettings />} />\n                </Route>\n                <Route path={'login'} element={<UserLogin />} />\n                <Route path={'account'} element={<UserAccount />} />\n              </Routes>\n            </AuthenticatedContent>\n            :\n            <UserLogin />\n          )}\n        </Paper>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalContext from './components/tools/contexts'\n\nimport App from './components/App';\n\nReactDOM.render(\n    <>\n      <BrowserRouter>\n        <GlobalContext>\n          <App />\n        </GlobalContext>\n      </BrowserRouter>\n    </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}